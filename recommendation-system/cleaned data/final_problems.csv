points,tags,tag_dict,tag_vect,problem_id_enc,level_enc
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2368,0
500.0,"constructive algorithms,greedy,math","['constructive algorithms', 'greedy', 'math']","  (0, 37)	0.4053203601812274
  (0, 33)	0.40718947111252246
  (0, 14)	0.47255057586028626
  (0, 13)	0.47255057586028626
  (0, 2)	0.47255057586028626",13,0
5.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2289,1
1000.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",3411,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4363,0
1000.0,math,['math'],"  (0, 37)	1.0",3057,1
2000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",4734,3
1500.0,"brute force,dp,number theory","['brute force', 'dp', 'number theory']","  (0, 68)	0.43359845379121864
  (0, 43)	0.43359845379121864
  (0, 42)	0.43359845379121864
  (0, 27)	0.3347102049639565
  (0, 21)	0.3160448997983543
  (0, 7)	0.3347102049639565
  (0, 6)	0.3347102049639565",460,2
2000.0,"brute force,dfs and similar,graphs","['brute force', 'dfs and similar', 'graphs']","  (0, 55)	0.3926758377958515
  (0, 32)	0.41841951143422373
  (0, 27)	0.34753521245341634
  (0, 18)	0.3926758377958515
  (0, 17)	0.3926758377958515
  (0, 7)	0.34753521245341634
  (0, 6)	0.34753521245341634",5215,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",6267,0
2000.0,"dfs and similar,greedy","['dfs and similar', 'greedy']","  (0, 55)	0.5191851318063558
  (0, 33)	0.4374247326496878
  (0, 18)	0.5191851318063558
  (0, 17)	0.5191851318063558",2531,3
1000.0,"bitmasks,brute force,dfs and similar,expression parsing,implementation","['bitmasks', 'brute force', 'dfs and similar', 'expression parsing', 'implementation']","  (0, 55)	0.25603819629260705
  (0, 44)	0.4126033900993756
  (0, 35)	0.18151219931904067
  (0, 27)	0.22660495090355362
  (0, 24)	0.4126033900993756
  (0, 23)	0.4126033900993756
  (0, 18)	0.25603819629260705
  (0, 17)	0.25603819629260705
  (0, 7)	0.22660495090355362
  (0, 6)	0.22660495090355362
  (0, 5)	0.3249808667130291",442,1
500.0,"brute force,implementation,sortings","['brute force', 'implementation', 'sortings']","  (0, 56)	0.5107454681239295
  (0, 35)	0.3608715417013904
  (0, 27)	0.4505222144655873
  (0, 7)	0.4505222144655873
  (0, 6)	0.4505222144655873",5793,0
1500.0,"brute force,math,strings","['brute force', 'math', 'strings']","  (0, 61)	0.5347788103625819
  (0, 37)	0.4055595441888486
  (0, 27)	0.4279926323760396
  (0, 7)	0.4279926323760396
  (0, 6)	0.4279926323760396",4347,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",3464,1
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",2347,2
2000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",62,4
1500.0,"dfs and similar,dsu","['dfs and similar', 'dsu']","  (0, 55)	0.466655699084791
  (0, 22)	0.5888101353875076
  (0, 18)	0.466655699084791
  (0, 17)	0.466655699084791",5002,2
500.0,"brute force,implementation,sortings","['brute force', 'implementation', 'sortings']","  (0, 56)	0.5107454681239295
  (0, 35)	0.3608715417013904
  (0, 27)	0.4505222144655873
  (0, 7)	0.4505222144655873
  (0, 6)	0.4505222144655873",1401,0
1500.0,dp,['dp'],"  (0, 21)	1.0",5408,2
2000.0,"dfs and similar,graphs,implementation","['dfs and similar', 'graphs', 'implementation']","  (0, 55)	0.4643387440546784
  (0, 35)	0.32918192630167115
  (0, 32)	0.4947806096700768
  (0, 18)	0.4643387440546784
  (0, 17)	0.4643387440546784",1997,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",2788,0
1000.0,"data structures,dp,implementation","['data structures', 'dp', 'implementation']","  (0, 62)	0.4647105817379858
  (0, 35)	0.37375247115584775
  (0, 21)	0.44058274098201033
  (0, 16)	0.47446813058119025
  (0, 15)	0.47446813058119025",3990,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",2170,0
1500.0,dp,['dp'],"  (0, 21)	1.0",2041,2
1750.0,"hashing,strings","['hashing', 'strings']","  (0, 61)	0.6356757696821022
  (0, 34)	0.7719561618635264",1397,3
1500.0,implementation,['implementation'],"  (0, 35)	1.0",1969,2
2500.0,"combinatorics,dp,implementation,number theory","['combinatorics', 'dp', 'implementation', 'number theory']","  (0, 68)	0.45037888321015035
  (0, 43)	0.45037888321015035
  (0, 42)	0.45037888321015035
  (0, 35)	0.27848106644603665
  (0, 21)	0.32827596079017524
  (0, 11)	0.45404820655245265",6091,4
1000.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",4292,1
1000.0,"constructive algorithms,dp,math","['constructive algorithms', 'dp', 'math']","  (0, 37)	0.40586428310676204
  (0, 21)	0.4044290408116558
  (0, 14)	0.4731847189158438
  (0, 13)	0.4731847189158438
  (0, 2)	0.4731847189158438",824,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2710,0
1750.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",1452,2
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",5561,1
8.0,dp,['dp'],"  (0, 21)	1.0",4206,14
500.0,implementation,['implementation'],"  (0, 35)	1.0",4751,0
1000.0,"constructive algorithms,dfs and similar,dsu,trees","['constructive algorithms', 'dfs and similar', 'dsu', 'trees']","  (0, 69)	0.37454084414795635
  (0, 55)	0.3394734848955937
  (0, 22)	0.4283359851682097
  (0, 18)	0.3394734848955937
  (0, 17)	0.3394734848955937
  (0, 14)	0.33192403700919226
  (0, 13)	0.33192403700919226
  (0, 2)	0.33192403700919226",4198,1
2000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",2206,3
500.0,"constructive algorithms,sortings","['constructive algorithms', 'sortings']","  (0, 56)	0.5097183429994464
  (0, 14)	0.4967183007198006
  (0, 13)	0.4967183007198006
  (0, 2)	0.4967183007198006",4727,0
750.0,"dfs and similar,dp,graphs,strings,trees","['dfs and similar', 'dp', 'graphs', 'strings', 'trees']","  (0, 69)	0.4090784740712643
  (0, 61)	0.41003018952684067
  (0, 55)	0.37077743951974695
  (0, 32)	0.3950854627713077
  (0, 21)	0.30985447207428185
  (0, 18)	0.37077743951974695
  (0, 17)	0.37077743951974695",2868,1
500.0,"binary search,bitmasks,brute force,greedy,implementation,strings","['binary search', 'bitmasks', 'brute force', 'greedy', 'implementation', 'strings']","  (0, 61)	0.3608458776025186
  (0, 52)	0.322849177718226
  (0, 35)	0.23132377722775319
  (0, 33)	0.27491618174701066
  (0, 27)	0.2887911301729283
  (0, 7)	0.2887911301729283
  (0, 6)	0.2887911301729283
  (0, 5)	0.41416390687147014
  (0, 4)	0.32767084994850504
  (0, 3)	0.32767084994850504",1886,0
2000.0,"binary search,data structures,greedy,sortings","['binary search', 'data structures', 'greedy', 'sortings']","  (0, 62)	0.33059074996812204
  (0, 56)	0.3763085583717865
  (0, 52)	0.37108347783599854
  (0, 33)	0.31598919829094846
  (0, 16)	0.33753217871257074
  (0, 15)	0.33753217871257074
  (0, 4)	0.37662551735068106
  (0, 3)	0.37662551735068106",5959,3
1750.0,"constructive algorithms,dfs and similar,trees","['constructive algorithms', 'dfs and similar', 'trees']","  (0, 69)	0.4144895335980709
  (0, 55)	0.37568187454530827
  (0, 18)	0.37568187454530827
  (0, 17)	0.37568187454530827
  (0, 14)	0.36732719926155916
  (0, 13)	0.36732719926155916
  (0, 2)	0.36732719926155916",3520,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",6175,0
1000.0,"expression parsing,implementation","['expression parsing', 'implementation']","  (0, 44)	0.5595830715849842
  (0, 35)	0.24617139961121315
  (0, 24)	0.5595830715849842
  (0, 23)	0.5595830715849842",3716,1
500.0,math,['math'],"  (0, 37)	1.0",4498,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3,0
2250.0,"dp,probabilities,sortings","['dp', 'probabilities', 'sortings']","  (0, 56)	0.5356559872469961
  (0, 47)	0.7169560441646214
  (0, 21)	0.44614649394819095",5210,3
2000.0,"bitmasks,brute force","['bitmasks', 'brute force']","  (0, 27)	0.4446980408234418
  (0, 7)	0.4446980408234418
  (0, 6)	0.4446980408234418
  (0, 5)	0.6377546216715152",3447,3
2000.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",546,3
1500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",2703,2
1000.0,"greedy,implementation,strings","['greedy', 'implementation', 'strings']","  (0, 61)	0.7086324549886466
  (0, 35)	0.45427576239270684
  (0, 33)	0.5398829275308572",1627,1
3000.0,"data structures,divide and conquer","['data structures', 'divide and conquer']","  (0, 62)	0.31374914796161846
  (0, 20)	0.48177793828287807
  (0, 19)	0.48177793828287807
  (0, 16)	0.32033695283642843
  (0, 15)	0.32033695283642843
  (0, 12)	0.48177793828287807",1639,5
2500.0,games,['games'],"  (0, 28)	1.0",2183,4
1500.0,"brute force,sortings,two pointers","['brute force', 'sortings', 'two pointers']","  (0, 56)	0.45687671719274275
  (0, 46)	0.5513836646234618
  (0, 27)	0.40300526037657974
  (0, 7)	0.40300526037657974
  (0, 6)	0.40300526037657974",3202,2
2000.0,"math,ternary search","['math', 'ternary search']","  (0, 66)	0.6187146762091963
  (0, 65)	0.6187146762091963
  (0, 52)	0.36931252892980854
  (0, 37)	0.31303762531390383",720,3
750.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",603,0
1500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",3802,2
1500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4822,3
1500.0,"combinatorics,dfs and similar,graphs,trees","['combinatorics', 'dfs and similar', 'graphs', 'trees']","  (0, 69)	0.42660120856914224
  (0, 55)	0.38665956249201483
  (0, 32)	0.4120088114853415
  (0, 18)	0.38665956249201483
  (0, 17)	0.38665956249201483
  (0, 11)	0.44692649989258254",5012,3
2000.0,"dp,greedy,math","['dp', 'greedy', 'math']","  (0, 37)	0.5771402159408785
  (0, 33)	0.5798016640014267
  (0, 21)	0.5750992971347582",3488,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1346,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",6306,0
2000.0,"brute force,dp,strings","['brute force', 'dp', 'strings']","  (0, 61)	0.5350895793692757
  (0, 27)	0.42824134612957365
  (0, 21)	0.40436022361973706
  (0, 7)	0.42824134612957365
  (0, 6)	0.42824134612957365",5033,3
2000.0,"bitmasks,constructive algorithms,dp,greedy","['bitmasks', 'constructive algorithms', 'dp', 'greedy']","  (0, 33)	0.34723435109966694
  (0, 21)	0.34441817548486875
  (0, 14)	0.4029715997378456
  (0, 13)	0.4029715997378456
  (0, 5)	0.5231119337448079
  (0, 2)	0.4029715997378456",5746,3
2000.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",6487,4
2000.0,"data structures,strings","['data structures', 'strings']","  (0, 62)	0.46329701031250653
  (0, 61)	0.5812493519918441
  (0, 16)	0.47302487833334644
  (0, 15)	0.47302487833334644",3106,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",5943,0
1500.0,"flows,graph matchings","['flows', 'graph matchings']","  (0, 36)	0.5108440917899533
  (0, 31)	0.5108440917899533
  (0, 30)	0.5108440917899533
  (0, 26)	0.4659559438937262",2590,2
2000.0,"constructive algorithms,dsu,graphs,implementation,string suffix structures","['constructive algorithms', 'dsu', 'graphs', 'implementation', 'string suffix structures']","  (0, 64)	0.352633235866002
  (0, 63)	0.352633235866002
  (0, 62)	0.2067522501661879
  (0, 60)	0.352633235866002
  (0, 59)	0.352633235866002
  (0, 58)	0.352633235866002
  (0, 35)	0.16628449502407425
  (0, 32)	0.2499357870313144
  (0, 22)	0.2959575332775631
  (0, 14)	0.22934197132700293
  (0, 13)	0.22934197132700293
  (0, 2)	0.22934197132700293",5707,3
500.0,math,['math'],"  (0, 37)	1.0",2198,0
3000.0,"data structures,dsu,graphs,trees","['data structures', 'dsu', 'graphs', 'trees']","  (0, 69)	0.43812214254357534
  (0, 62)	0.3500269030122343
  (0, 32)	0.423135658335889
  (0, 22)	0.5010494382190149
  (0, 16)	0.3573764335303561
  (0, 15)	0.3573764335303561",1291,5
500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",2669,0
1500.0,"geometry,implementation,sortings","['geometry', 'implementation', 'sortings']","  (0, 56)	0.5857699385229936
  (0, 35)	0.41388071748064803
  (0, 29)	0.6968330724215608",3074,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",5637,0
1250.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",5666,1
2500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",1042,4
500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",699,1
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2769,0
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1425,1
500.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",4724,0
1500.0,"combinatorics,dp,probabilities","['combinatorics', 'dp', 'probabilities']","  (0, 47)	0.6855071140834587
  (0, 21)	0.4265764937950003
  (0, 11)	0.5900105859071787",2560,2
2500.0,"dp,hashing,strings","['dp', 'hashing', 'strings']","  (0, 61)	0.5729932054653404
  (0, 34)	0.6958352933384698
  (0, 21)	0.43300350002640836",4375,4
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",829,2
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5839,2
2500.0,flows,['flows'],"  (0, 26)	1.0",3026,4
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4668,0
1000.0,"data structures,dp,implementation","['data structures', 'dp', 'implementation']","  (0, 62)	0.4647105817379858
  (0, 35)	0.37375247115584775
  (0, 21)	0.44058274098201033
  (0, 16)	0.47446813058119025
  (0, 15)	0.47446813058119025",217,1
1500.0,dp,['dp'],"  (0, 21)	1.0",1713,2
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",1872,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",952,3
500.0,"dfs and similar,greedy,implementation","['dfs and similar', 'greedy', 'implementation']","  (0, 55)	0.48723020850365795
  (0, 35)	0.3454102864367324
  (0, 33)	0.4105020167893705
  (0, 18)	0.48723020850365795
  (0, 17)	0.48723020850365795",1517,1
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",378,2
1000.0,"data structures,two pointers","['data structures', 'two pointers']","  (0, 62)	0.4484681969258781
  (0, 46)	0.6160839817753344
  (0, 16)	0.4578847036896413
  (0, 15)	0.4578847036896413",435,1
2000.0,"dp,string suffix structures,strings,two pointers","['dp', 'string suffix structures', 'strings', 'two pointers']","  (0, 64)	0.3822878438748906
  (0, 63)	0.3822878438748906
  (0, 62)	0.22413903141661937
  (0, 61)	0.28120334011892656
  (0, 60)	0.3822878438748906
  (0, 59)	0.3822878438748906
  (0, 58)	0.3822878438748906
  (0, 46)	0.30791139236399545
  (0, 21)	0.21250170042021024",2553,3
2000.0,"binary search,data structures,probabilities,sortings","['binary search', 'data structures', 'probabilities', 'sortings']","  (0, 62)	0.3077641073832401
  (0, 56)	0.35032519082622376
  (0, 52)	0.34546089184853795
  (0, 47)	0.4688975181195345
  (0, 16)	0.3142262440936763
  (0, 15)	0.3142262440936763
  (0, 4)	0.35062026440957716
  (0, 3)	0.35062026440957716",6190,2
1500.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",4883,2
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4534,0
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",5076,1
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1298,0
1000.0,"constructive algorithms,implementation,strings","['constructive algorithms', 'implementation', 'strings']","  (0, 61)	0.5159735895054761
  (0, 35)	0.3307699133690639
  (0, 14)	0.4562026301775181
  (0, 13)	0.4562026301775181
  (0, 2)	0.4562026301775181",4479,1
1500.0,"brute force,data structures,dp,greedy","['brute force', 'data structures', 'dp', 'greedy']","  (0, 62)	0.35529359487196377
  (0, 33)	0.3396009664890099
  (0, 27)	0.3567405392325413
  (0, 21)	0.3368466999322609
  (0, 16)	0.36275371035432546
  (0, 15)	0.36275371035432546
  (0, 7)	0.3567405392325413
  (0, 6)	0.3567405392325413",5864,2
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2826,1
1500.0,dp,['dp'],"  (0, 21)	1.0",5098,2
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",5163,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1914,0
2500.0,"binary search,brute force,combinatorics,dp,implementation","['binary search', 'brute force', 'combinatorics', 'dp', 'implementation']","  (0, 52)	0.35240675332271854
  (0, 35)	0.25250199450818733
  (0, 27)	0.31523061415836723
  (0, 21)	0.2976515994658223
  (0, 11)	0.4116907451572687
  (0, 7)	0.31523061415836723
  (0, 6)	0.31523061415836723
  (0, 4)	0.3576698605985931
  (0, 3)	0.3576698605985931",4477,5
2500.0,"dfs and similar,dp,graphs,shortest paths","['dfs and similar', 'dp', 'graphs', 'shortest paths']","  (0, 55)	0.3132703727308686
  (0, 54)	0.4185768253277996
  (0, 53)	0.4185768253277996
  (0, 45)	0.4185768253277996
  (0, 32)	0.3338082552790367
  (0, 21)	0.2617964730668763
  (0, 18)	0.3132703727308686
  (0, 17)	0.3132703727308686",1168,4
2750.0,"bitmasks,dp,greedy","['bitmasks', 'dp', 'greedy']","  (0, 33)	0.4848763812487096
  (0, 21)	0.4809438871370534
  (0, 5)	0.7304709934916358",4948,5
2500.0,"data structures,divide and conquer,trees","['data structures', 'divide and conquer', 'trees']","  (0, 69)	0.36553690922114707
  (0, 62)	0.29203671726912717
  (0, 20)	0.44843738528982896
  (0, 19)	0.44843738528982896
  (0, 16)	0.2981686252668005
  (0, 15)	0.2981686252668005
  (0, 12)	0.44843738528982896",5757,4
2500.0,"data structures,dsu,trees","['data structures', 'dsu', 'trees']","  (0, 69)	0.48354311668418504
  (0, 62)	0.38631487243084256
  (0, 22)	0.5529942074205609
  (0, 16)	0.39442634306381724
  (0, 15)	0.39442634306381724",519,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5198,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5272,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",6113,0
500.0,"constructive algorithms,data structures,implementation,two pointers","['constructive algorithms', 'data structures', 'implementation', 'two pointers']","  (0, 62)	0.3277317407160862
  (0, 46)	0.45022206069140547
  (0, 35)	0.2635845895971176
  (0, 16)	0.334613138715559
  (0, 15)	0.334613138715559
  (0, 14)	0.36353966364013696
  (0, 13)	0.36353966364013696
  (0, 2)	0.36353966364013696",2918,0
2500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5784,3
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",307,2
3000.0,"dp,fft,probabilities","['dp', 'fft', 'probabilities']","  (0, 47)	0.5756881183598157
  (0, 25)	0.7350159111854969
  (0, 21)	0.35823846901678286",5203,4
2000.0,"binary search,data structures,sortings","['binary search', 'data structures', 'sortings']","  (0, 62)	0.3484440519734711
  (0, 56)	0.39663081584709964
  (0, 52)	0.39112355881116245
  (0, 16)	0.3557603472976266
  (0, 15)	0.3557603472976266
  (0, 4)	0.39696489195457096
  (0, 3)	0.39696489195457096",193,3
1000.0,math,['math'],"  (0, 37)	1.0",1087,0
1500.0,"string suffix structures,strings","['string suffix structures', 'strings']","  (0, 64)	0.41222353058540717
  (0, 63)	0.41222353058540717
  (0, 62)	0.24169061180713372
  (0, 61)	0.30322343630201615
  (0, 60)	0.41222353058540717
  (0, 59)	0.41222353058540717
  (0, 58)	0.41222353058540717",39,2
1000.0,two pointers,['two pointers'],"  (0, 46)	1.0",6282,1
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",534,2
500.0,sortings,['sortings'],"  (0, 56)	1.0",5312,0
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1822,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2701,5
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",553,1
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4983,0
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",6244,0
2000.0,"binary search,data structures,geometry,sortings,two pointers","['binary search', 'data structures', 'geometry', 'sortings', 'two pointers']","  (0, 62)	0.2891919220215814
  (0, 56)	0.32918463471588705
  (0, 52)	0.32461387439362216
  (0, 46)	0.39727791633297216
  (0, 29)	0.391598689720122
  (0, 16)	0.2952640977263661
  (0, 15)	0.2952640977263661
  (0, 4)	0.32946190193016134
  (0, 3)	0.32946190193016134",5260,3
1500.0,"brute force,constructive algorithms,hashing,string suffix structures,strings","['brute force', 'constructive algorithms', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.3334923388956711
  (0, 63)	0.3334923388956711
  (0, 62)	0.19552975859049632
  (0, 61)	0.24531033644958472
  (0, 60)	0.3334923388956711
  (0, 59)	0.3334923388956711
  (0, 58)	0.3334923388956711
  (0, 34)	0.2979015951571884
  (0, 27)	0.196326059693587
  (0, 14)	0.21689331193344868
  (0, 13)	0.21689331193344868
  (0, 7)	0.196326059693587
  (0, 6)	0.196326059693587
  (0, 2)	0.21689331193344868",5632,1
500.0,"brute force,constructive algorithms,math,number theory","['brute force', 'constructive algorithms', 'math', 'number theory']","  (0, 68)	0.36503797705562496
  (0, 43)	0.36503797705562496
  (0, 42)	0.36503797705562496
  (0, 37)	0.26701620013254634
  (0, 27)	0.2817859128684715
  (0, 14)	0.3113059977550672
  (0, 13)	0.3113059977550672
  (0, 7)	0.2817859128684715
  (0, 6)	0.2817859128684715
  (0, 2)	0.3113059977550672",302,1
2500.0,"data structures,dsu","['data structures', 'dsu']","  (0, 62)	0.44134103236819244
  (0, 22)	0.6317619429480074
  (0, 16)	0.4506078897393701
  (0, 15)	0.4506078897393701",5677,4
1500.0,"math,sortings","['math', 'sortings']","  (0, 56)	0.7672695625273075
  (0, 37)	0.6413247371021598",539,2
2500.0,"graphs,greedy,shortest paths","['graphs', 'greedy', 'shortest paths']","  (0, 54)	0.49791411181995787
  (0, 53)	0.49791411181995787
  (0, 45)	0.49791411181995787
  (0, 33)	0.3139638654767157
  (0, 32)	0.397078459408901",900,4
2000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",4122,3
2000.0,games,['games'],"  (0, 28)	1.0",4023,3
1500.0,"brute force,constructive algorithms,dp,implementation,strings","['brute force', 'constructive algorithms', 'dp', 'implementation', 'strings']","  (0, 61)	0.4000398896790583
  (0, 35)	0.25644948180416055
  (0, 27)	0.32015876867499077
  (0, 21)	0.3023049326397087
  (0, 14)	0.35369882017105386
  (0, 13)	0.35369882017105386
  (0, 7)	0.32015876867499077
  (0, 6)	0.32015876867499077
  (0, 2)	0.35369882017105386",1236,2
2500.0,"binary search,two pointers","['binary search', 'two pointers']","  (0, 52)	0.4683962475126431
  (0, 46)	0.5732456309133718
  (0, 4)	0.47539162905693094
  (0, 3)	0.47539162905693094",589,5
2500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",4696,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6518,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",2129,0
1250.0,"data structures,sortings","['data structures', 'sortings']","  (0, 62)	0.4777870182358637
  (0, 56)	0.5438607827303986
  (0, 16)	0.48781913360033374
  (0, 15)	0.48781913360033374",3666,2
1750.0,"dfs and similar,strings,trees","['dfs and similar', 'strings', 'trees']","  (0, 69)	0.47302656727730014
  (0, 61)	0.4741270570940721
  (0, 55)	0.42873822641994824
  (0, 18)	0.42873822641994824
  (0, 17)	0.42873822641994824",2020,0
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",790,2
2500.0,"binary search,bitmasks,brute force,dp","['binary search', 'bitmasks', 'brute force', 'dp']","  (0, 52)	0.3576063878677061
  (0, 27)	0.31988172817806504
  (0, 21)	0.3020433414638424
  (0, 7)	0.31988172817806504
  (0, 6)	0.31988172817806504
  (0, 5)	0.4587518536310097
  (0, 4)	0.362947150393225
  (0, 3)	0.362947150393225",1851,4
1500.0,"combinatorics,dsu,graphs","['combinatorics', 'dsu', 'graphs']","  (0, 32)	0.528600868978094
  (0, 22)	0.6259344095110808
  (0, 11)	0.5733997177411394",4757,2
1500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",3598,2
1000.0,"bitmasks,brute force,dfs and similar,greedy","['bitmasks', 'brute force', 'dfs and similar', 'greedy']","  (0, 55)	0.361060524838374
  (0, 33)	0.30420132217247026
  (0, 27)	0.31955428404403846
  (0, 18)	0.361060524838374
  (0, 17)	0.361060524838374
  (0, 7)	0.31955428404403846
  (0, 6)	0.31955428404403846
  (0, 5)	0.4582822563073336",1313,1
2500.0,"brute force,data structures","['brute force', 'data structures']","  (0, 62)	0.40457805626898896
  (0, 27)	0.40622571315158146
  (0, 16)	0.4130729997888229
  (0, 15)	0.4130729997888229
  (0, 7)	0.40622571315158146
  (0, 6)	0.40622571315158146",3497,4
2000.0,"brute force,dfs and similar,graphs","['brute force', 'dfs and similar', 'graphs']","  (0, 55)	0.3926758377958515
  (0, 32)	0.41841951143422373
  (0, 27)	0.34753521245341634
  (0, 18)	0.3926758377958515
  (0, 17)	0.3926758377958515
  (0, 7)	0.34753521245341634
  (0, 6)	0.34753521245341634",2563,3
500.0,greedy,['greedy'],"  (0, 33)	1.0",4316,0
1000.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",1719,1
2500.0,math,['math'],"  (0, 37)	1.0",3250,4
2000.0,"constructive algorithms,greedy,math","['constructive algorithms', 'greedy', 'math']","  (0, 37)	0.4053203601812274
  (0, 33)	0.40718947111252246
  (0, 14)	0.47255057586028626
  (0, 13)	0.47255057586028626
  (0, 2)	0.47255057586028626",3110,3
2000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",3394,3
2500.0,"bitmasks,graphs,math,trees","['bitmasks', 'graphs', 'math', 'trees']","  (0, 69)	0.5107064324387991
  (0, 37)	0.3882048617382793
  (0, 32)	0.49323711705548295
  (0, 5)	0.5875313366512407",3593,6
1500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",76,1
1000.0,"data structures,graphs,shortest paths","['data structures', 'graphs', 'shortest paths']","  (0, 62)	0.29566093581820685
  (0, 54)	0.44817771109097876
  (0, 53)	0.44817771109097876
  (0, 45)	0.44817771109097876
  (0, 32)	0.3574144834154912
  (0, 16)	0.30186894169464773
  (0, 15)	0.30186894169464773",1225,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3152,0
1000.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",705,2
2500.0,"data structures,divide and conquer,implementation,trees","['data structures', 'divide and conquer', 'implementation', 'trees']","  (0, 69)	0.35585303366670834
  (0, 62)	0.28430002322806086
  (0, 35)	0.22865379099773372
  (0, 20)	0.4365572940499116
  (0, 19)	0.4365572940499116
  (0, 16)	0.29026948351535864
  (0, 15)	0.29026948351535864
  (0, 12)	0.4365572940499116",3029,4
1500.0,math,['math'],"  (0, 37)	1.0",3572,2
1000.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",5446,1
500.0,"brute force,data structures,implementation","['brute force', 'data structures', 'implementation']","  (0, 62)	0.3847234171033617
  (0, 35)	0.30942124734094417
  (0, 27)	0.38629021534232355
  (0, 16)	0.3928014718777355
  (0, 15)	0.3928014718777355
  (0, 7)	0.38629021534232355
  (0, 6)	0.38629021534232355",5611,0
1500.0,"constructive algorithms,flows,graphs","['constructive algorithms', 'flows', 'graphs']","  (0, 32)	0.430144152692754
  (0, 26)	0.5895824349347587
  (0, 14)	0.3947018116336406
  (0, 13)	0.3947018116336406
  (0, 2)	0.3947018116336406",560,2
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1456,2
500.0,"brute force,two pointers","['brute force', 'two pointers']","  (0, 46)	0.6198595316156775
  (0, 27)	0.45305413990868426
  (0, 7)	0.45305413990868426
  (0, 6)	0.45305413990868426",2699,0
1500.0,"data structures,implementation,sortings","['data structures', 'implementation', 'sortings']","  (0, 62)	0.4459920873339933
  (0, 56)	0.5076688910565779
  (0, 35)	0.3586977600846166
  (0, 16)	0.4553566031140488
  (0, 15)	0.4553566031140488",2647,2
1000.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",6003,1
1500.0,implementation,['implementation'],"  (0, 35)	1.0",6510,3
1000.0,strings,['strings'],"  (0, 61)	1.0",4870,1
2500.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",2295,4
1750.0,"combinatorics,dp,flows,graphs","['combinatorics', 'dp', 'flows', 'graphs']","  (0, 32)	0.46272101506544333
  (0, 26)	0.6342343166818153
  (0, 21)	0.3628991429729497
  (0, 11)	0.5019365555420874",3465,3
1500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",2512,2
3000.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",2284,3
1000.0,"brute force,probabilities","['brute force', 'probabilities']","  (0, 47)	0.6589564075811242
  (0, 27)	0.4342719781073375
  (0, 7)	0.4342719781073375
  (0, 6)	0.4342719781073375",1673,1
2000.0,"data structures,dfs and similar,dp,dsu","['data structures', 'dfs and similar', 'dp', 'dsu']","  (0, 62)	0.31791719644172406
  (0, 55)	0.3606736966342195
  (0, 22)	0.4550856842901655
  (0, 21)	0.3014108895256121
  (0, 18)	0.3606736966342195
  (0, 17)	0.3606736966342195
  (0, 16)	0.324592518016656
  (0, 15)	0.324592518016656",2622,3
1000.0,geometry,['geometry'],"  (0, 29)	1.0",3748,1
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",3929,2
2500.0,"combinatorics,dfs and similar,dsu,greedy","['combinatorics', 'dfs and similar', 'dsu', 'greedy']","  (0, 55)	0.388136038685612
  (0, 33)	0.3270130297511811
  (0, 22)	0.4897367243890037
  (0, 18)	0.388136038685612
  (0, 17)	0.388136038685612
  (0, 11)	0.44863310798246453",207,4
1000.0,"hashing,implementation","['hashing', 'implementation']","  (0, 35)	0.46683465159710374
  (0, 34)	0.8843446206475226",1759,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5286,1
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",6208,0
1500.0,"brute force,math,number theory,sortings,two pointers","['brute force', 'math', 'number theory', 'sortings', 'two pointers']","  (0, 68)	0.3725745333912748
  (0, 56)	0.32604887553890016
  (0, 46)	0.39349351165372415
  (0, 43)	0.3725745333912748
  (0, 42)	0.3725745333912748
  (0, 37)	0.27252900362510846
  (0, 27)	0.2876036511324607
  (0, 7)	0.2876036511324607
  (0, 6)	0.2876036511324607",4920,2
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1810,1
1000.0,greedy,['greedy'],"  (0, 33)	1.0",5861,1
3000.0,"flows,graphs","['flows', 'graphs']","  (0, 32)	0.5893870978296795
  (0, 26)	0.8078507590588176",1672,0
1000.0,"binary search,sortings","['binary search', 'sortings']","  (0, 56)	0.5015198290640789
  (0, 52)	0.49455617798876783
  (0, 4)	0.5019422515930888
  (0, 3)	0.5019422515930888",3205,2
1500.0,"greedy,implementation,math,number theory","['greedy', 'implementation', 'math', 'number theory']","  (0, 68)	0.47365259276793936
  (0, 43)	0.47365259276793936
  (0, 42)	0.47365259276793936
  (0, 37)	0.34646508980776936
  (0, 35)	0.29287181099340964
  (0, 33)	0.3480627931315853",2809,2
1500.0,"dfs and similar,dp,two pointers","['dfs and similar', 'dp', 'two pointers']","  (0, 55)	0.44002718358638643
  (0, 46)	0.5328283478516913
  (0, 21)	0.3677256923859614
  (0, 18)	0.44002718358638643
  (0, 17)	0.44002718358638643",2197,2
1500.0,"binary search,data structures,greedy","['binary search', 'data structures', 'greedy']","  (0, 62)	0.3568189411645963
  (0, 52)	0.4005242544078587
  (0, 33)	0.3410589411969274
  (0, 16)	0.3643110844112011
  (0, 15)	0.3643110844112011
  (0, 4)	0.40650598460361304
  (0, 3)	0.40650598460361304",1197,2
1000.0,"brute force,dfs and similar,math,number theory","['brute force', 'dfs and similar', 'math', 'number theory']","  (0, 68)	0.3626208940283192
  (0, 55)	0.3162783162474225
  (0, 43)	0.3626208940283192
  (0, 42)	0.3626208940283192
  (0, 37)	0.2652481640214496
  (0, 27)	0.27992007974934796
  (0, 18)	0.3162783162474225
  (0, 17)	0.3162783162474225
  (0, 7)	0.27992007974934796
  (0, 6)	0.27992007974934796",2462,1
2000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1649,4
1000.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",6019,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",765,0
500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",748,0
2500.0,"divide and conquer,two pointers","['divide and conquer', 'two pointers']","  (0, 46)	0.4589139777971119
  (0, 20)	0.5129645734949059
  (0, 19)	0.5129645734949059
  (0, 12)	0.5129645734949059",1233,4
1500.0,"geometry,implementation","['geometry', 'implementation']","  (0, 35)	0.510662887170297
  (0, 29)	0.8597810277430508",2034,2
2000.0,"binary search,bitmasks,combinatorics,dp,math","['binary search', 'bitmasks', 'combinatorics', 'dp', 'math']","  (0, 52)	0.36508821582057793
  (0, 37)	0.3094570022894755
  (0, 21)	0.30836268136327116
  (0, 11)	0.42650555984569977
  (0, 5)	0.46834984337161245
  (0, 4)	0.3705407175870856
  (0, 3)	0.3705407175870856",5890,3
2500.0,"binary search,dsu,trees","['binary search', 'dsu', 'trees']","  (0, 69)	0.45791907620634276
  (0, 52)	0.4106538313031753
  (0, 22)	0.5236897969842699
  (0, 4)	0.4167868442123186
  (0, 3)	0.4167868442123186",3778,4
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",4740,0
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",1708,1
2000.0,"binary search,data structures,dp","['binary search', 'data structures', 'dp']","  (0, 62)	0.35715467238244775
  (0, 52)	0.40090110798876033
  (0, 21)	0.33861115002866804
  (0, 16)	0.36465386499243074
  (0, 15)	0.36465386499243074
  (0, 4)	0.40688846639908455
  (0, 3)	0.40688846639908455",4024,3
2000.0,"bitmasks,brute force,fft","['bitmasks', 'brute force', 'fft']","  (0, 27)	0.33690878634868665
  (0, 25)	0.6527046249712546
  (0, 7)	0.33690878634868665
  (0, 6)	0.33690878634868665
  (0, 5)	0.4831708616879735",4821,3
1000.0,"greedy,math,sortings","['greedy', 'math', 'sortings']","  (0, 56)	0.6449922249726618
  (0, 37)	0.5391188303508488
  (0, 33)	0.5416049450346145",587,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",1432,0
2000.0,"bitmasks,brute force,combinatorics,dp,number theory","['bitmasks', 'brute force', 'combinatorics', 'dp', 'number theory']","  (0, 68)	0.36367562269495124
  (0, 43)	0.36367562269495124
  (0, 42)	0.36367562269495124
  (0, 27)	0.2807342626531453
  (0, 21)	0.2650789566446967
  (0, 11)	0.3666385579060105
  (0, 7)	0.2807342626531453
  (0, 6)	0.2807342626531453
  (0, 5)	0.4026093147095119",1085,3
1000.0,"constructive algorithms,strings","['constructive algorithms', 'strings']","  (0, 61)	0.5467493268887392
  (0, 14)	0.4834132716240183
  (0, 13)	0.4834132716240183
  (0, 2)	0.4834132716240183",1504,1
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",3660,7
1750.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",4576,2
1500.0,"data structures,sortings","['data structures', 'sortings']","  (0, 62)	0.4777870182358637
  (0, 56)	0.5438607827303986
  (0, 16)	0.48781913360033374
  (0, 15)	0.48781913360033374",6520,2
750.0,greedy,['greedy'],"  (0, 33)	1.0",6210,0
2500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",4771,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",6425,0
1000.0,"constructive algorithms,greedy,implementation,math","['constructive algorithms', 'greedy', 'implementation', 'math']","  (0, 37)	0.38343868701754036
  (0, 35)	0.32412611248674206
  (0, 33)	0.3852068919038319
  (0, 14)	0.44703940427822314
  (0, 13)	0.44703940427822314
  (0, 2)	0.44703940427822314",2865,1
1500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",5660,2
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",536,1
500.0,"brute force,geometry,math","['brute force', 'geometry', 'math']","  (0, 37)	0.396319773097929
  (0, 29)	0.5640497270514321
  (0, 27)	0.4182417733260716
  (0, 7)	0.4182417733260716
  (0, 6)	0.4182417733260716",2691,0
2500.0,"brute force,dp,probabilities","['brute force', 'dp', 'probabilities']","  (0, 47)	0.6096889963915001
  (0, 27)	0.40180328083480715
  (0, 21)	0.3793964920901095
  (0, 7)	0.40180328083480715
  (0, 6)	0.40180328083480715",5035,3
2000.0,graph matchings,['graph matchings'],"  (0, 36)	0.5773502691896257
  (0, 31)	0.5773502691896257
  (0, 30)	0.5773502691896257",3761,3
500.0,probabilities,['probabilities'],"  (0, 47)	1.0",645,0
2250.0,dp,['dp'],"  (0, 21)	1.0",1684,3
1500.0,"brute force,constructive algorithms,greedy","['brute force', 'constructive algorithms', 'greedy']","  (0, 33)	0.3460463712851132
  (0, 27)	0.36351124193785384
  (0, 14)	0.40159292817263054
  (0, 13)	0.40159292817263054
  (0, 7)	0.36351124193785384
  (0, 6)	0.36351124193785384
  (0, 2)	0.40159292817263054",5549,2
1750.0,"brute force,dp,greedy,math,number theory","['brute force', 'dp', 'greedy', 'math', 'number theory']","  (0, 68)	0.39547039887603713
  (0, 43)	0.39547039887603713
  (0, 42)	0.39547039887603713
  (0, 37)	0.28927675970736283
  (0, 33)	0.29061074242043666
  (0, 27)	0.3052777912550222
  (0, 21)	0.2882538013988731
  (0, 7)	0.3052777912550222
  (0, 6)	0.3052777912550222",2942,3
2000.0,"divide and conquer,math","['divide and conquer', 'math']","  (0, 37)	0.3368287627272434
  (0, 20)	0.5436133382591081
  (0, 19)	0.5436133382591081
  (0, 12)	0.5436133382591081",2529,3
2000.0,"binary search,implementation,two pointers","['binary search', 'implementation', 'two pointers']","  (0, 52)	0.4440555681212187
  (0, 46)	0.5434563484656713
  (0, 35)	0.31816903497418203
  (0, 4)	0.45068742766827796
  (0, 3)	0.45068742766827796",1694,3
1000.0,"dfs and similar,number theory,trees","['dfs and similar', 'number theory', 'trees']","  (0, 69)	0.38621245369618645
  (0, 68)	0.4013436109109723
  (0, 55)	0.35005230968756523
  (0, 43)	0.4013436109109723
  (0, 42)	0.4013436109109723
  (0, 18)	0.35005230968756523
  (0, 17)	0.35005230968756523",3932,1
250.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",187,0
1000.0,"constructive algorithms,greedy,implementation,math","['constructive algorithms', 'greedy', 'implementation', 'math']","  (0, 37)	0.38343868701754036
  (0, 35)	0.32412611248674206
  (0, 33)	0.3852068919038319
  (0, 14)	0.44703940427822314
  (0, 13)	0.44703940427822314
  (0, 2)	0.44703940427822314",2483,2
2500.0,"geometry,sortings","['geometry', 'sortings']","  (0, 56)	0.6434690898301128
  (0, 29)	0.7654720964432382",2282,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",483,0
1500.0,"bitmasks,divide and conquer,math","['bitmasks', 'divide and conquer', 'math']","  (0, 37)	0.30008622690608805
  (0, 20)	0.4843139708531915
  (0, 19)	0.4843139708531915
  (0, 12)	0.4843139708531915
  (0, 5)	0.4541675784669242",1192,2
1750.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",466,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",164,0
750.0,math,['math'],"  (0, 37)	1.0",1076,1
1750.0,"dfs and similar,dp,geometry,greedy,trees","['dfs and similar', 'dp', 'geometry', 'greedy', 'trees']","  (0, 69)	0.41552238703468025
  (0, 55)	0.37661802439649417
  (0, 33)	0.317308852931742
  (0, 29)	0.44952693805896515
  (0, 21)	0.3147353821585999
  (0, 18)	0.37661802439649417
  (0, 17)	0.37661802439649417",2901,3
2500.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",6225,4
500.0,"binary search,implementation,sortings","['binary search', 'implementation', 'sortings']","  (0, 56)	0.4727185060231957
  (0, 52)	0.46615476408914097
  (0, 35)	0.3340032691547559
  (0, 4)	0.4731166696355833
  (0, 3)	0.4731166696355833",1574,0
1500.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",6133,2
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5538,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",6037,4
500.0,"combinatorics,data structures,implementation","['combinatorics', 'data structures', 'implementation']","  (0, 62)	0.42830294829965937
  (0, 35)	0.34447092797337947
  (0, 16)	0.43729604443724357
  (0, 15)	0.43729604443724357
  (0, 11)	0.5616410804936358",2997,0
1000.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",4147,1
2000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",558,2
1000.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",2150,1
2000.0,"binary search,data structures,dp","['binary search', 'data structures', 'dp']","  (0, 62)	0.35715467238244775
  (0, 52)	0.40090110798876033
  (0, 21)	0.33861115002866804
  (0, 16)	0.36465386499243074
  (0, 15)	0.36465386499243074
  (0, 4)	0.40688846639908455
  (0, 3)	0.40688846639908455",2527,3
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",5969,0
2000.0,"combinatorics,math,matrices,number theory","['combinatorics', 'math', 'matrices', 'number theory']","  (0, 68)	0.40203786917184836
  (0, 43)	0.40203786917184836
  (0, 42)	0.40203786917184836
  (0, 38)	0.5141345016351313
  (0, 37)	0.2940807008671717
  (0, 11)	0.40531334897970916",4154,3
2000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",1059,3
500.0,"greedy,strings","['greedy', 'strings']","  (0, 61)	0.795446608465514
  (0, 33)	0.6060236736965903",4735,0
1500.0,"bitmasks,dp,dsu","['bitmasks', 'dp', 'dsu']","  (0, 22)	0.6387997425907177
  (0, 21)	0.4230877948694927
  (0, 5)	0.6425975464460651",2021,2
1500.0,"dfs and similar,trees","['dfs and similar', 'trees']","  (0, 69)	0.5372515306095824
  (0, 55)	0.4869499607617676
  (0, 18)	0.4869499607617676
  (0, 17)	0.4869499607617676",4680,2
500.0,"brute force,constructive algorithms,implementation,number theory","['brute force', 'constructive algorithms', 'implementation', 'number theory']","  (0, 68)	0.36881018795545073
  (0, 43)	0.36881018795545073
  (0, 42)	0.36881018795545073
  (0, 35)	0.22804500452138962
  (0, 27)	0.28469781781741277
  (0, 14)	0.3145229558573028
  (0, 13)	0.3145229558573028
  (0, 7)	0.28469781781741277
  (0, 6)	0.28469781781741277
  (0, 2)	0.3145229558573028",3639,0
2250.0,"data structures,graphs","['data structures', 'graphs']","  (0, 62)	0.46900171698165
  (0, 32)	0.5669602781039845
  (0, 16)	0.47884936698324915
  (0, 15)	0.47884936698324915",5524,3
1000.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",3853,2
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",6207,1
1250.0,"brute force,dfs and similar","['brute force', 'dfs and similar']","  (0, 55)	0.4323414917201438
  (0, 27)	0.3826410431076809
  (0, 18)	0.4323414917201438
  (0, 17)	0.4323414917201438
  (0, 7)	0.3826410431076809
  (0, 6)	0.3826410431076809",50,2
5000.0,"binary search,graphs","['binary search', 'graphs']","  (0, 52)	0.48679147852954496
  (0, 32)	0.5242521820736425
  (0, 4)	0.494061588277233
  (0, 3)	0.494061588277233",4619,4
2500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",5088,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",963,1
1000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",1001,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3612,0
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",833,1
500.0,geometry,['geometry'],"  (0, 29)	1.0",4553,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2874,0
3000.0,"dfs and similar,dp,dsu,trees,two pointers","['dfs and similar', 'dp', 'dsu', 'trees', 'two pointers']","  (0, 69)	0.39071127870869893
  (0, 55)	0.354129920524395
  (0, 46)	0.42881546303563833
  (0, 22)	0.4468289723187315
  (0, 21)	0.2959423305579785
  (0, 18)	0.354129920524395
  (0, 17)	0.354129920524395",6100,3
1000.0,"binary search,brute force,implementation","['binary search', 'brute force', 'implementation']","  (0, 52)	0.4091356886482583
  (0, 35)	0.2931486880830613
  (0, 27)	0.3659750932428642
  (0, 7)	0.3659750932428642
  (0, 6)	0.3659750932428642
  (0, 4)	0.4152460284741602
  (0, 3)	0.4152460284741602",5469,1
1500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",470,2
3000.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",4630,2
750.0,greedy,['greedy'],"  (0, 33)	1.0",5073,1
250.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",994,0
1000.0,"dp,greedy,implementation","['dp', 'greedy', 'implementation']","  (0, 35)	0.5128543624762141
  (0, 33)	0.6095005226611119
  (0, 21)	0.6045572890677503",5404,1
1000.0,graphs,['graphs'],"  (0, 32)	1.0",1491,1
1250.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",1026,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",6052,0
2000.0,"binary search,sortings,ternary search,two pointers","['binary search', 'sortings', 'ternary search', 'two pointers']","  (0, 66)	0.4634656166941809
  (0, 65)	0.4634656166941809
  (0, 56)	0.2805392434113275
  (0, 52)	0.4683988884515315
  (0, 46)	0.33857001305140755
  (0, 4)	0.28077553735190713
  (0, 3)	0.28077553735190713",1944,3
500.0,"constructive algorithms,dp,greedy,hashing,strings,two pointers","['constructive algorithms', 'dp', 'greedy', 'hashing', 'strings', 'two pointers']","  (0, 61)	0.3734457916726273
  (0, 46)	0.40891482170077503
  (0, 34)	0.4535075800480118
  (0, 33)	0.2845156270545453
  (0, 21)	0.2822081192621782
  (0, 14)	0.3301854123058171
  (0, 13)	0.3301854123058171
  (0, 2)	0.3301854123058171",1548,4
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4879,1
3250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1509,5
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3601,0
500.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",3330,0
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",1147,2
1000.0,"bitmasks,brute force,dfs and similar","['bitmasks', 'brute force', 'dfs and similar']","  (0, 55)	0.379023285108408
  (0, 27)	0.3354521089311953
  (0, 18)	0.379023285108408
  (0, 17)	0.379023285108408
  (0, 7)	0.3354521089311953
  (0, 6)	0.3354521089311953
  (0, 5)	0.4810817974915822",284,1
1000.0,math,['math'],"  (0, 37)	1.0",1858,1
3000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",6329,4
1000.0,"binary search,brute force,math","['binary search', 'brute force', 'math']","  (0, 52)	0.4022888711464306
  (0, 37)	0.3409891163963847
  (0, 27)	0.3598505611055504
  (0, 7)	0.3598505611055504
  (0, 6)	0.3598505611055504
  (0, 4)	0.4082969554546085
  (0, 3)	0.4082969554546085",1760,1
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",31,0
2500.0,"combinatorics,dfs and similar,dp","['combinatorics', 'dfs and similar', 'dp']","  (0, 55)	0.4456830398684745
  (0, 21)	0.37245222689325064
  (0, 18)	0.4456830398684745
  (0, 17)	0.4456830398684745
  (0, 11)	0.515149708922606",6516,4
2000.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",858,3
500.0,"brute force,constructive algorithms,math","['brute force', 'constructive algorithms', 'math']","  (0, 37)	0.34464698527814425
  (0, 27)	0.3637107610540484
  (0, 14)	0.40181334904784716
  (0, 13)	0.40181334904784716
  (0, 7)	0.3637107610540484
  (0, 6)	0.3637107610540484
  (0, 2)	0.40181334904784716",3051,0
750.0,"bitmasks,brute force","['bitmasks', 'brute force']","  (0, 27)	0.4446980408234418
  (0, 7)	0.4446980408234418
  (0, 6)	0.4446980408234418
  (0, 5)	0.6377546216715152",3920,1
3000.0,"dfs and similar,graphs,implementation,trees","['dfs and similar', 'graphs', 'implementation', 'trees']","  (0, 69)	0.45595304892397065
  (0, 55)	0.41326326056403745
  (0, 35)	0.2929731751313003
  (0, 32)	0.44035663755002163
  (0, 18)	0.41326326056403745
  (0, 17)	0.41326326056403745",4825,3
1000.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",5530,1
8.0,"bitmasks,probabilities","['bitmasks', 'probabilities']","  (0, 47)	0.7267628360584566
  (0, 5)	0.6868884772102885",1004,2
2000.0,"brute force,combinatorics,dp,string suffix structures","['brute force', 'combinatorics', 'dp', 'string suffix structures']","  (0, 64)	0.370534223153505
  (0, 63)	0.370534223153505
  (0, 62)	0.21724777079627947
  (0, 60)	0.370534223153505
  (0, 59)	0.370534223153505
  (0, 58)	0.370534223153505
  (0, 27)	0.21813251918842258
  (0, 21)	0.20596823505005302
  (0, 11)	0.2848807677118509
  (0, 7)	0.21813251918842258
  (0, 6)	0.21813251918842258",2862,3
1500.0,"dsu,graphs,greedy","['dsu', 'graphs', 'greedy']","  (0, 33)	0.45443478821161326
  (0, 32)	0.5747357751851221
  (0, 22)	0.6805643334655607",1017,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",4081,0
3000.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",3721,3
1500.0,"data structures,hashing,sortings,strings","['data structures', 'hashing', 'sortings', 'strings']","  (0, 62)	0.3476117608302902
  (0, 61)	0.43611140635477535
  (0, 56)	0.3956834261204778
  (0, 34)	0.5296078652846848
  (0, 16)	0.3549105805001342
  (0, 15)	0.3549105805001342",6108,2
1500.0,"brute force,combinatorics","['brute force', 'combinatorics']","  (0, 27)	0.46098946675558966
  (0, 11)	0.6020516046164077
  (0, 7)	0.46098946675558966
  (0, 6)	0.46098946675558966",6330,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3894,1
1500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",5141,3
2500.0,"data structures,string suffix structures,strings","['data structures', 'string suffix structures', 'strings']","  (0, 64)	0.3715639206096103
  (0, 63)	0.3715639206096103
  (0, 62)	0.368854639961902
  (0, 61)	0.2733150352991615
  (0, 60)	0.3715639206096103
  (0, 59)	0.3715639206096103
  (0, 58)	0.3715639206096103
  (0, 16)	0.22242572981117792
  (0, 15)	0.22242572981117792",3625,4
2250.0,"brute force,dp,greedy","['brute force', 'dp', 'greedy']","  (0, 33)	0.434605795394828
  (0, 27)	0.45654023722501946
  (0, 21)	0.43108101093970486
  (0, 7)	0.45654023722501946
  (0, 6)	0.45654023722501946",774,4
1500.0,greedy,['greedy'],"  (0, 33)	1.0",1613,2
1500.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",4318,2
1000.0,"data structures,dsu","['data structures', 'dsu']","  (0, 62)	0.44134103236819244
  (0, 22)	0.6317619429480074
  (0, 16)	0.4506078897393701
  (0, 15)	0.4506078897393701",5301,2
1500.0,"constructive algorithms,divide and conquer,dp,graphs,shortest paths","['constructive algorithms', 'divide and conquer', 'dp', 'graphs', 'shortest paths']","  (0, 54)	0.33879569266259085
  (0, 53)	0.33879569266259085
  (0, 45)	0.33879569266259085
  (0, 32)	0.2701840909973598
  (0, 21)	0.21189782152859432
  (0, 20)	0.34319893130261747
  (0, 19)	0.34319893130261747
  (0, 14)	0.24792188740368468
  (0, 13)	0.24792188740368468
  (0, 12)	0.34319893130261747
  (0, 2)	0.24792188740368468",2624,2
1500.0,"expression parsing,implementation","['expression parsing', 'implementation']","  (0, 44)	0.5595830715849842
  (0, 35)	0.24617139961121315
  (0, 24)	0.5595830715849842
  (0, 23)	0.5595830715849842",3223,2
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2431,0
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",258,1
1000.0,"data structures,greedy,implementation","['data structures', 'greedy', 'implementation']","  (0, 62)	0.46397174849106426
  (0, 35)	0.3731582502306941
  (0, 33)	0.4434790170308098
  (0, 16)	0.4737137840195797
  (0, 15)	0.4737137840195797",511,1
1000.0,strings,['strings'],"  (0, 61)	1.0",5467,1
1250.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",1955,2
500.0,"games,greedy","['games', 'greedy']","  (0, 33)	0.5153230566136275
  (0, 28)	0.8569960019290569",5040,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1091,0
2500.0,"constructive algorithms,greedy,hashing,implementation","['constructive algorithms', 'greedy', 'hashing', 'implementation']","  (0, 35)	0.2922572994309231
  (0, 34)	0.5536353604268578
  (0, 33)	0.34733247835623965
  (0, 14)	0.40308547815290957
  (0, 13)	0.40308547815290957
  (0, 2)	0.40308547815290957",4061,4
2500.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",5486,4
2500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",26,4
40.0,"data structures,math","['data structures', 'math']","  (0, 62)	0.5006188722082621
  (0, 37)	0.4763110282242326
  (0, 16)	0.5111303890304811
  (0, 15)	0.5111303890304811",5567,14
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4182,1
1000.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",537,1
1000.0,"brute force,implementation,strings","['brute force', 'implementation', 'strings']","  (0, 61)	0.5477926738161532
  (0, 35)	0.35116784840874854
  (0, 27)	0.4384078499743209
  (0, 7)	0.4384078499743209
  (0, 6)	0.4384078499743209",5935,1
2000.0,"geometry,implementation,math","['geometry', 'implementation', 'math']","  (0, 37)	0.5170802635289932
  (0, 35)	0.43709521583461364
  (0, 29)	0.7359183197633277",1050,3
1500.0,expression parsing,['expression parsing'],"  (0, 44)	0.5773502691896258
  (0, 24)	0.5773502691896258
  (0, 23)	0.5773502691896258",5265,2
750.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",3829,1
1000.0,"expression parsing,implementation","['expression parsing', 'implementation']","  (0, 44)	0.5595830715849842
  (0, 35)	0.24617139961121315
  (0, 24)	0.5595830715849842
  (0, 23)	0.5595830715849842",2251,1
500.0,"data structures,dsu,strings","['data structures', 'dsu', 'strings']","  (0, 62)	0.3861046579480649
  (0, 61)	0.4844043394149378
  (0, 22)	0.5526932938405053
  (0, 16)	0.39421171469815447
  (0, 15)	0.39421171469815447",3142,1
1500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",5905,2
2000.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",4371,3
1500.0,"implementation,math,probabilities,trees","['implementation', 'math', 'probabilities', 'trees']","  (0, 69)	0.5366519151947055
  (0, 47)	0.653219093855234
  (0, 37)	0.40792688187789544
  (0, 35)	0.3448263278553118",3613,2
500.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",5711,0
2000.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",2049,3
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",953,1
2500.0,"data structures,geometry","['data structures', 'geometry']","  (0, 62)	0.45090386319704645
  (0, 29)	0.610575014624812
  (0, 16)	0.46037151175430574
  (0, 15)	0.46037151175430574",4913,4
1000.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",4329,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",4856,0
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4930,2
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",3795,0
3000.0,"data structures,greedy,two pointers","['data structures', 'greedy', 'two pointers']","  (0, 62)	0.41219406061432545
  (0, 46)	0.566252322613166
  (0, 33)	0.3939882491157749
  (0, 16)	0.4208489177176026
  (0, 15)	0.4208489177176026",4331,5
1000.0,graphs,['graphs'],"  (0, 32)	1.0",1252,1
2500.0,"brute force,graphs","['brute force', 'graphs']","  (0, 32)	0.5707635151461694
  (0, 27)	0.4740706732749132
  (0, 7)	0.4740706732749132
  (0, 6)	0.4740706732749132",4353,4
2000.0,"data structures,divide and conquer,greedy","['data structures', 'divide and conquer', 'greedy']","  (0, 62)	0.3005261573653176
  (0, 33)	0.28725250038146305
  (0, 20)	0.4614733567762566
  (0, 19)	0.4614733567762566
  (0, 16)	0.30683631851591087
  (0, 15)	0.30683631851591087
  (0, 12)	0.4614733567762566",10,3
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",3363,1
2500.0,"data structures,implementation,string suffix structures,two pointers","['data structures', 'implementation', 'string suffix structures', 'two pointers']","  (0, 64)	0.3633778816672556
  (0, 63)	0.3633778816672556
  (0, 62)	0.3607282900142471
  (0, 60)	0.3633778816672556
  (0, 59)	0.3633778816672556
  (0, 58)	0.3633778816672556
  (0, 46)	0.29268047962064137
  (0, 35)	0.17135114166867166
  (0, 16)	0.21752540019082975
  (0, 15)	0.21752540019082975",1807,4
1500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",860,1
2500.0,math,['math'],"  (0, 37)	1.0",94,5
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2443,4
1500.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",924,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",3324,1
500.0,math,['math'],"  (0, 37)	1.0",4475,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",3170,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4940,0
1500.0,"dp,greedy,implementation","['dp', 'greedy', 'implementation']","  (0, 35)	0.5128543624762141
  (0, 33)	0.6095005226611119
  (0, 21)	0.6045572890677503",5105,2
2500.0,"brute force,combinatorics,dp,number theory","['brute force', 'combinatorics', 'dp', 'number theory']","  (0, 68)	0.3972982100498132
  (0, 43)	0.3972982100498132
  (0, 42)	0.3972982100498132
  (0, 27)	0.30668874428601384
  (0, 21)	0.28958607183068724
  (0, 11)	0.4005350749436552
  (0, 7)	0.30668874428601384
  (0, 6)	0.30668874428601384",3144,4
2000.0,"binary search,brute force,constructive algorithms,greedy,sortings","['binary search', 'brute force', 'constructive algorithms', 'greedy', 'sortings']","  (0, 56)	0.3183992875552812
  (0, 52)	0.31397828281594653
  (0, 33)	0.2673623370308808
  (0, 27)	0.2808560448721676
  (0, 14)	0.31027871615172814
  (0, 13)	0.31027871615172814
  (0, 7)	0.2808560448721676
  (0, 6)	0.2808560448721676
  (0, 4)	0.31866747043557747
  (0, 3)	0.31866747043557747
  (0, 2)	0.31027871615172814",4817,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3511,0
750.0,implementation,['implementation'],"  (0, 35)	1.0",3325,1
1750.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",1710,3
2000.0,"constructive algorithms,divide and conquer","['constructive algorithms', 'divide and conquer']","  (0, 20)	0.46800962638069854
  (0, 19)	0.46800962638069854
  (0, 14)	0.3380833077043767
  (0, 13)	0.3380833077043767
  (0, 12)	0.46800962638069854
  (0, 2)	0.3380833077043767",3678,3
500.0,"binary search,greedy,sortings","['binary search', 'greedy', 'sortings']","  (0, 56)	0.4622056140844986
  (0, 52)	0.4557878446664063
  (0, 33)	0.38811761835041586
  (0, 4)	0.4625949228478003
  (0, 3)	0.4625949228478003",5217,0
2500.0,"flows,graph matchings","['flows', 'graph matchings']","  (0, 36)	0.5108440917899533
  (0, 31)	0.5108440917899533
  (0, 30)	0.5108440917899533
  (0, 26)	0.4659559438937262",2286,4
2500.0,geometry,['geometry'],"  (0, 29)	1.0",3199,4
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",3303,2
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",3669,0
3000.0,"dfs and similar,dp,probabilities","['dfs and similar', 'dp', 'probabilities']","  (0, 55)	0.4263282901617682
  (0, 47)	0.572537142202257
  (0, 21)	0.3562776835869771
  (0, 18)	0.4263282901617682
  (0, 17)	0.4263282901617682",1367,4
1500.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",903,2
2000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",4815,3
2000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",6212,3
500.0,"dp,graphs,greedy,implementation","['dp', 'graphs', 'greedy', 'implementation']","  (0, 35)	0.4061823093422741
  (0, 33)	0.4827263799502058
  (0, 32)	0.6105169044712216
  (0, 21)	0.47881132299938767",3560,0
1000.0,"dp,graphs,shortest paths","['dp', 'graphs', 'shortest paths']","  (0, 54)	0.49831103382738545
  (0, 53)	0.49831103382738545
  (0, 45)	0.49831103382738545
  (0, 32)	0.39739499829678016
  (0, 21)	0.31166577615508095",2468,1
500.0,sortings,['sortings'],"  (0, 56)	1.0",2228,0
2000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",4953,2
2500.0,"data structures,geometry,sortings","['data structures', 'geometry', 'sortings']","  (0, 62)	0.40115053506247517
  (0, 56)	0.4566261444217273
  (0, 29)	0.5432033606362907
  (0, 16)	0.40957351076642984
  (0, 15)	0.40957351076642984",5344,4
500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",3494,0
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4921,3
2500.0,greedy,['greedy'],"  (0, 33)	1.0",5909,4
2250.0,"data structures,divide and conquer,dp","['data structures', 'divide and conquer', 'dp']","  (0, 62)	0.30072665844050306
  (0, 21)	0.2851128867488997
  (0, 20)	0.4617812364796882
  (0, 19)	0.4617812364796882
  (0, 16)	0.3070410295211283
  (0, 15)	0.3070410295211283
  (0, 12)	0.4617812364796882",6323,4
2000.0,dp,['dp'],"  (0, 21)	1.0",1269,3
2000.0,"dsu,sortings","['dsu', 'sortings']","  (0, 56)	0.6223996676286626
  (0, 22)	0.7826995935451418",6393,3
750.0,implementation,['implementation'],"  (0, 35)	1.0",4262,1
500.0,math,['math'],"  (0, 37)	1.0",1188,0
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",853,3
1500.0,"constructive algorithms,divide and conquer","['constructive algorithms', 'divide and conquer']","  (0, 20)	0.46800962638069854
  (0, 19)	0.46800962638069854
  (0, 14)	0.3380833077043767
  (0, 13)	0.3380833077043767
  (0, 12)	0.46800962638069854
  (0, 2)	0.3380833077043767",627,1
2000.0,"bitmasks,graph matchings,graphs","['bitmasks', 'graph matchings', 'graphs']","  (0, 36)	0.4956087542062018
  (0, 32)	0.32981084890133155
  (0, 31)	0.4956087542062018
  (0, 30)	0.4956087542062018
  (0, 5)	0.3928621796629359",3944,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1094,0
2000.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",1333,3
2000.0,"brute force,data structures,math","['brute force', 'data structures', 'math']","  (0, 62)	0.37757088939819466
  (0, 37)	0.3592377126405584
  (0, 27)	0.37910855874269783
  (0, 16)	0.3854987622288423
  (0, 15)	0.3854987622288423
  (0, 7)	0.37910855874269783
  (0, 6)	0.37910855874269783",1266,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",755,0
1000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",170,1
1000.0,"brute force,implementation,schedules","['brute force', 'implementation', 'schedules']","  (0, 51)	0.7535043310702131
  (0, 35)	0.2759609454831849
  (0, 27)	0.3445174304378312
  (0, 7)	0.3445174304378312
  (0, 6)	0.3445174304378312",394,1
2500.0,"data structures,dsu,graphs,hashing,sortings","['data structures', 'dsu', 'graphs', 'hashing', 'sortings']","  (0, 62)	0.3129242836050915
  (0, 56)	0.3561989742735117
  (0, 34)	0.4767593634921418
  (0, 32)	0.37828355938657315
  (0, 22)	0.44793853031330727
  (0, 16)	0.319494768766161
  (0, 15)	0.319494768766161",4092,4
1500.0,"constructive algorithms,games,greedy","['constructive algorithms', 'games', 'greedy']","  (0, 33)	0.3579183901823078
  (0, 28)	0.5952278390545634
  (0, 14)	0.4153706158696271
  (0, 13)	0.4153706158696271
  (0, 2)	0.4153706158696271",3826,2
3000.0,"geometry,sortings","['geometry', 'sortings']","  (0, 56)	0.6434690898301128
  (0, 29)	0.7654720964432382",574,1
2000.0,"dp,math,number theory","['dp', 'math', 'number theory']","  (0, 68)	0.4959049743237831
  (0, 43)	0.4959049743237831
  (0, 42)	0.4959049743237831
  (0, 37)	0.3627421534022664
  (0, 21)	0.3614594022402384",3461,3
1500.0,"combinatorics,math,matrices","['combinatorics', 'math', 'matrices']","  (0, 38)	0.7163617418806516
  (0, 37)	0.4097530168792213
  (0, 11)	0.5647373902338106",3105,2
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",4590,2
2500.0,"greedy,implementation,ternary search","['greedy', 'implementation', 'ternary search']","  (0, 66)	0.5978751205389817
  (0, 65)	0.5978751205389817
  (0, 52)	0.3568733395873236
  (0, 35)	0.2557023359597112
  (0, 33)	0.3038888207182589",1519,4
1000.0,"constructive algorithms,data structures,implementation","['constructive algorithms', 'data structures', 'implementation']","  (0, 62)	0.3670350984453102
  (0, 35)	0.29519507503319525
  (0, 16)	0.3747417508026902
  (0, 15)	0.3747417508026902
  (0, 14)	0.40713730059037684
  (0, 13)	0.40713730059037684
  (0, 2)	0.40713730059037684",602,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",6333,1
1500.0,"greedy,hashing,implementation","['greedy', 'hashing', 'implementation']","  (0, 35)	0.40821630361634664
  (0, 34)	0.7733014053877308
  (0, 33)	0.4851436755098091",2126,2
1500.0,"binary search,two pointers","['binary search', 'two pointers']","  (0, 52)	0.4683962475126431
  (0, 46)	0.5732456309133718
  (0, 4)	0.47539162905693094
  (0, 3)	0.47539162905693094",3364,2
1250.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",6289,2
1500.0,sortings,['sortings'],"  (0, 56)	1.0",6228,2
2500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",978,6
2500.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",1272,4
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4394,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4244,1
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5024,1
2500.0,"constructive algorithms,data structures","['constructive algorithms', 'data structures']","  (0, 62)	0.384154158879061
  (0, 16)	0.39222026091307066
  (0, 15)	0.39222026091307066
  (0, 14)	0.426126787108597
  (0, 13)	0.426126787108597
  (0, 2)	0.426126787108597",5587,4
1000.0,"2-sat,dfs and similar,dsu,graph matchings,greedy","['2-sat', 'dfs and similar', 'dsu', 'graph matchings', 'greedy']","  (0, 55)	0.20794112366237955
  (0, 50)	0.382169854455015
  (0, 36)	0.33296007989990684
  (0, 33)	0.17519490611841618
  (0, 31)	0.33296007989990684
  (0, 30)	0.33296007989990684
  (0, 22)	0.26237296879991456
  (0, 18)	0.20794112366237955
  (0, 17)	0.20794112366237955
  (0, 1)	0.382169854455015
  (0, 0)	0.382169854455015",5387,1
1000.0,math,['math'],"  (0, 37)	1.0",4529,1
500.0,"games,math","['games', 'math']","  (0, 37)	0.5135825748776551
  (0, 28)	0.8580401731749148",5255,0
1000.0,dp,['dp'],"  (0, 21)	1.0",2998,2
2500.0,"data structures,geometry,two pointers","['data structures', 'geometry', 'two pointers']","  (0, 62)	0.3833222293455449
  (0, 46)	0.5265895931461848
  (0, 29)	0.5190618109350558
  (0, 16)	0.39137086331797727
  (0, 15)	0.39137086331797727",2573,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1199,0
1000.0,"brute force,strings","['brute force', 'strings']","  (0, 61)	0.5850532379797061
  (0, 27)	0.4682281170289618
  (0, 7)	0.4682281170289618
  (0, 6)	0.4682281170289618",3367,1
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1264,3
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",1440,1
2500.0,"constructive algorithms,data structures,dsu,greedy","['constructive algorithms', 'data structures', 'dsu', 'greedy']","  (0, 62)	0.3204382028718337
  (0, 33)	0.30628506949158973
  (0, 22)	0.45869440363340075
  (0, 16)	0.3271664581313911
  (0, 15)	0.3271664581313911
  (0, 14)	0.3554492348984694
  (0, 13)	0.3554492348984694
  (0, 2)	0.3554492348984694",4339,4
1500.0,"data structures,dfs and similar,dp,greedy,trees","['data structures', 'dfs and similar', 'dp', 'greedy', 'trees']","  (0, 69)	0.3895324077950013
  (0, 62)	0.3112073302933372
  (0, 55)	0.35306142446163474
  (0, 33)	0.29746190663574373
  (0, 21)	0.29504940060013407
  (0, 18)	0.35306142446163474
  (0, 17)	0.35306142446163474
  (0, 16)	0.3177417645090242
  (0, 15)	0.3177417645090242",1540,2
2000.0,"2-sat,dfs and similar,dsu,graphs","['2-sat', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.25109443661209574
  (0, 50)	0.46148026231845224
  (0, 32)	0.26755608921806373
  (0, 22)	0.3168223371247297
  (0, 18)	0.25109443661209574
  (0, 17)	0.25109443661209574
  (0, 1)	0.46148026231845224
  (0, 0)	0.46148026231845224",4555,3
2500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2720,3
2000.0,"dfs and similar,dsu,greedy","['dfs and similar', 'dsu', 'greedy']","  (0, 55)	0.43429459421761624
  (0, 33)	0.36590261378613653
  (0, 22)	0.547978004599219
  (0, 18)	0.43429459421761624
  (0, 17)	0.43429459421761624",3692,3
2000.0,"binary search,hashing,string suffix structures,strings","['binary search', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.35337157368065164
  (0, 63)	0.35337157368065164
  (0, 62)	0.20718514471223579
  (0, 61)	0.2599331064646688
  (0, 60)	0.35337157368065164
  (0, 59)	0.35337157368065164
  (0, 58)	0.35337157368065164
  (0, 52)	0.23256241762113644
  (0, 34)	0.31565929169846524
  (0, 4)	0.23603567952867968
  (0, 3)	0.23603567952867968",1839,2
2000.0,dp,['dp'],"  (0, 21)	1.0",4230,3
3000.0,"dp,greedy,implementation","['dp', 'greedy', 'implementation']","  (0, 35)	0.5128543624762141
  (0, 33)	0.6095005226611119
  (0, 21)	0.6045572890677503",1247,4
1000.0,"data structures,dp,greedy,sortings","['data structures', 'dp', 'greedy', 'sortings']","  (0, 62)	0.4018350464799997
  (0, 56)	0.4574053177795497
  (0, 33)	0.38408677252665113
  (0, 21)	0.38097171262739127
  (0, 16)	0.41027239490076495
  (0, 15)	0.41027239490076495",5242,1
3000.0,"binary search,dp,greedy","['binary search', 'dp', 'greedy']","  (0, 52)	0.47147355628077475
  (0, 33)	0.4014744928373954
  (0, 21)	0.39821841326718144
  (0, 4)	0.47851489666669933
  (0, 3)	0.47851489666669933",3541,5
2500.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",1689,4
2500.0,geometry,['geometry'],"  (0, 29)	1.0",912,4
1500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",3935,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",5334,0
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",4584,2
2500.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",3654,5
2500.0,dp,['dp'],"  (0, 21)	1.0",3523,4
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",6277,1
2500.0,"constructive algorithms,dfs and similar,dp,trees","['constructive algorithms', 'dfs and similar', 'dp', 'trees']","  (0, 69)	0.39545802133629354
  (0, 55)	0.35843223704572863
  (0, 21)	0.2995377273440963
  (0, 18)	0.35843223704572863
  (0, 17)	0.35843223704572863
  (0, 14)	0.35046117121943815
  (0, 13)	0.35046117121943815
  (0, 2)	0.35046117121943815",5153,4
750.0,greedy,['greedy'],"  (0, 33)	1.0",624,1
1000.0,"dp,math,matrices","['dp', 'math', 'matrices']","  (0, 38)	0.7780183010729851
  (0, 37)	0.4450200609750239
  (0, 21)	0.44344635360468576",3153,4
500.0,"brute force,greedy,sortings","['brute force', 'greedy', 'sortings']","  (0, 56)	0.4975589720139231
  (0, 33)	0.4178041056239121
  (0, 27)	0.43889057052688774
  (0, 7)	0.43889057052688774
  (0, 6)	0.43889057052688774",476,1
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",6337,0
1500.0,"dp,greedy,number theory","['dp', 'greedy', 'number theory']","  (0, 68)	0.4956036491532467
  (0, 43)	0.4956036491532467
  (0, 42)	0.4956036491532467
  (0, 33)	0.3641934891613699
  (0, 21)	0.36123976980728983",4833,2
1000.0,"brute force,dp,implementation,strings","['brute force', 'dp', 'implementation', 'strings']","  (0, 61)	0.506139840054319
  (0, 35)	0.3244658921551684
  (0, 27)	0.4050723744053428
  (0, 21)	0.38248328279624483
  (0, 7)	0.4050723744053428
  (0, 6)	0.4050723744053428",4335,0
750.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3787,1
1500.0,"math,probabilities","['math', 'probabilities']","  (0, 47)	0.8481937784236142
  (0, 37)	0.5296860525287339",1242,2
1000.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",2269,1
60.0,dp,['dp'],"  (0, 21)	1.0",2558,14
500.0,implementation,['implementation'],"  (0, 35)	1.0",2827,0
3500.0,"binary search,data structures,geometry","['binary search', 'data structures', 'geometry']","  (0, 62)	0.3375942301674217
  (0, 52)	0.3789447860836197
  (0, 29)	0.45714090928435364
  (0, 16)	0.344682711298458
  (0, 15)	0.344682711298458
  (0, 4)	0.3846042322831794
  (0, 3)	0.3846042322831794",5499,6
2000.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",1447,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",4179,0
250.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",1888,0
2500.0,"geometry,trees","['geometry', 'trees']","  (0, 69)	0.6787866160081943
  (0, 29)	0.7343355703819231",2585,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2388,2
2500.0,"brute force,dfs and similar,trees","['brute force', 'dfs and similar', 'trees']","  (0, 69)	0.43053059263635163
  (0, 55)	0.3902210477709391
  (0, 27)	0.3453626164066995
  (0, 18)	0.3902210477709391
  (0, 17)	0.3902210477709391
  (0, 7)	0.3453626164066995
  (0, 6)	0.3453626164066995",4798,4
1000.0,"dfs and similar,dp,games,implementation,strings,trees","['dfs and similar', 'dp', 'games', 'implementation', 'strings', 'trees']","  (0, 69)	0.37612696206647533
  (0, 61)	0.3770020162816118
  (0, 55)	0.34091109840468875
  (0, 35)	0.24168082785971293
  (0, 28)	0.4776628328049623
  (0, 21)	0.2848955118662838
  (0, 18)	0.34091109840468875
  (0, 17)	0.34091109840468875",4736,1
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",695,4
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",6304,0
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",5976,1
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",6216,0
1500.0,"dfs and similar,dp,dsu,ternary search,trees","['dfs and similar', 'dp', 'dsu', 'ternary search', 'trees']","  (0, 69)	0.3062139869505059
  (0, 66)	0.46005371673117446
  (0, 65)	0.46005371673117446
  (0, 55)	0.27754390715474997
  (0, 52)	0.2746073563512836
  (0, 22)	0.35019537073750123
  (0, 21)	0.23194027376708407
  (0, 18)	0.27754390715474997
  (0, 17)	0.27754390715474997",2122,2
1500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",4881,4
1500.0,math,['math'],"  (0, 37)	1.0",4109,2
2250.0,"dfs and similar,dp,graphs,trees","['dfs and similar', 'dp', 'graphs', 'trees']","  (0, 69)	0.4485155734186616
  (0, 55)	0.4065221380187604
  (0, 32)	0.4331735696593523
  (0, 21)	0.3397259084195246
  (0, 18)	0.4065221380187604
  (0, 17)	0.4065221380187604",3960,5
3000.0,hashing,['hashing'],"  (0, 34)	1.0",393,3
750.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1074,1
2500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",61,4
3000.0,"binary search,sortings","['binary search', 'sortings']","  (0, 56)	0.5015198290640789
  (0, 52)	0.49455617798876783
  (0, 4)	0.5019422515930888
  (0, 3)	0.5019422515930888",826,3
2000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",2945,3
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",491,6
500.0,"greedy,implementation,math","['greedy', 'implementation', 'math']","  (0, 37)	0.6059159597578303
  (0, 35)	0.5121892787020597
  (0, 33)	0.6087101054635212",4213,0
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2974,0
2500.0,dp,['dp'],"  (0, 21)	1.0",4784,4
1500.0,"constructive algorithms,number theory","['constructive algorithms', 'number theory']","  (0, 68)	0.4392973494418518
  (0, 43)	0.4392973494418518
  (0, 42)	0.4392973494418518
  (0, 14)	0.37463471823457156
  (0, 13)	0.37463471823457156
  (0, 2)	0.37463471823457156",286,2
2000.0,dsu,['dsu'],"  (0, 22)	1.0",3019,3
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4591,1
2000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",1974,3
1000.0,"games,greedy","['games', 'greedy']","  (0, 33)	0.5153230566136275
  (0, 28)	0.8569960019290569",6390,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",920,0
1500.0,"brute force,data structures,shortest paths","['brute force', 'data structures', 'shortest paths']","  (0, 62)	0.27732064980601484
  (0, 54)	0.42037658348191187
  (0, 53)	0.42037658348191187
  (0, 45)	0.42037658348191187
  (0, 27)	0.27845004689084857
  (0, 16)	0.28314356387780387
  (0, 15)	0.28314356387780387
  (0, 7)	0.27845004689084857
  (0, 6)	0.27845004689084857",5534,2
500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",5856,0
1500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",2894,2
2500.0,"binary search,bitmasks,data structures","['binary search', 'bitmasks', 'data structures']","  (0, 62)	0.3330717921230584
  (0, 52)	0.3738684128397767
  (0, 16)	0.34006531542046153
  (0, 15)	0.34006531542046153
  (0, 5)	0.4796134331576344
  (0, 4)	0.3794520446665901
  (0, 3)	0.3794520446665901",736,4
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",1235,1
500.0,"brute force,dp,implementation","['brute force', 'dp', 'implementation']","  (0, 35)	0.3762135261786677
  (0, 27)	0.4696755807532483
  (0, 21)	0.4434838545567469
  (0, 7)	0.4696755807532483
  (0, 6)	0.4696755807532483",2611,0
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5326,1
2000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",4520,3
2000.0,"constructive algorithms,sortings","['constructive algorithms', 'sortings']","  (0, 56)	0.5097183429994464
  (0, 14)	0.4967183007198006
  (0, 13)	0.4967183007198006
  (0, 2)	0.4967183007198006",2433,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",270,0
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4823,1
3000.0,"constructive algorithms,geometry,graphs,trees","['constructive algorithms', 'geometry', 'graphs', 'trees']","  (0, 69)	0.4279894269007795
  (0, 32)	0.4133495441729456
  (0, 29)	0.4630142264278561
  (0, 14)	0.3792910188402278
  (0, 13)	0.3792910188402278
  (0, 2)	0.3792910188402278",4351,5
2000.0,implementation,['implementation'],"  (0, 35)	1.0",5426,2
2000.0,"dfs and similar,dsu,graphs,sortings","['dfs and similar', 'dsu', 'graphs', 'sortings']","  (0, 56)	0.38664329057732927
  (0, 55)	0.3853519238411382
  (0, 32)	0.410615444558302
  (0, 22)	0.4862238238892905
  (0, 18)	0.3853519238411382
  (0, 17)	0.3853519238411382",4509,5
2500.0,"data structures,dp,implementation,math","['data structures', 'dp', 'implementation', 'math']","  (0, 62)	0.42501962282508604
  (0, 37)	0.4043825448895077
  (0, 35)	0.34183024997301786
  (0, 21)	0.40295254240841855
  (0, 16)	0.43394377883101565
  (0, 15)	0.43394377883101565",4424,2
500.0,"greedy,implementation,sortings,strings","['greedy', 'implementation', 'sortings', 'strings']","  (0, 61)	0.5960634975349595
  (0, 56)	0.540807792351394
  (0, 35)	0.38211233181733867
  (0, 33)	0.45412047356568175",4075,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",448,4
2000.0,"brute force,math,probabilities","['brute force', 'math', 'probabilities']","  (0, 47)	0.6093772405522829
  (0, 37)	0.3805482111044038
  (0, 27)	0.401597824413979
  (0, 7)	0.401597824413979
  (0, 6)	0.401597824413979",5877,3
2000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",6381,3
1500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",3961,2
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5776,3
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",5584,0
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",2421,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2645,0
3000.0,"constructive algorithms,dfs and similar,greedy","['constructive algorithms', 'dfs and similar', 'greedy']","  (0, 55)	0.38990298052266836
  (0, 33)	0.32850171656698574
  (0, 18)	0.38990298052266836
  (0, 17)	0.38990298052266836
  (0, 14)	0.38123204637559127
  (0, 13)	0.38123204637559127
  (0, 2)	0.38123204637559127",2676,4
3000.0,"data structures,divide and conquer","['data structures', 'divide and conquer']","  (0, 62)	0.31374914796161846
  (0, 20)	0.48177793828287807
  (0, 19)	0.48177793828287807
  (0, 16)	0.32033695283642843
  (0, 15)	0.32033695283642843
  (0, 12)	0.48177793828287807",2065,5
1500.0,implementation,['implementation'],"  (0, 35)	1.0",5893,2
1000.0,"data structures,math,probabilities","['data structures', 'math', 'probabilities']","  (0, 62)	0.39805095372316535
  (0, 47)	0.6064550732470178
  (0, 37)	0.3787233553884953
  (0, 16)	0.4064088473792814
  (0, 15)	0.4064088473792814",5808,2
3000.0,"dp,graph matchings,greedy,sortings,two pointers","['dp', 'graph matchings', 'greedy', 'sortings', 'two pointers']","  (0, 56)	0.2949381041789486
  (0, 46)	0.35594734115259974
  (0, 36)	0.47068430633945113
  (0, 33)	0.2476618004336773
  (0, 31)	0.47068430633945113
  (0, 30)	0.47068430633945113
  (0, 21)	0.24565318832231928",1314,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",550,0
500.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",2618,0
2000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",2316,3
750.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",3686,1
1500.0,"dfs and similar,graphs,greedy","['dfs and similar', 'graphs', 'greedy']","  (0, 55)	0.4542986577646164
  (0, 33)	0.3827564711346894
  (0, 32)	0.48408229926772095
  (0, 18)	0.4542986577646164
  (0, 17)	0.4542986577646164",4819,3
500.0,"implementation,math,number theory","['implementation', 'math', 'number theory']","  (0, 68)	0.5052449415657008
  (0, 43)	0.5052449415657008
  (0, 42)	0.5052449415657008
  (0, 37)	0.3695741071140833
  (0, 35)	0.3124061881871792",2702,1
1000.0,"brute force,dp,implementation","['brute force', 'dp', 'implementation']","  (0, 35)	0.3762135261786677
  (0, 27)	0.4696755807532483
  (0, 21)	0.4434838545567469
  (0, 7)	0.4696755807532483
  (0, 6)	0.4696755807532483",1614,1
2500.0,"data structures,dp,sortings","['data structures', 'dp', 'sortings']","  (0, 62)	0.43521753699350324
  (0, 56)	0.4954043146698368
  (0, 21)	0.412620979395192
  (0, 16)	0.44435581905876426
  (0, 15)	0.44435581905876426",6543,4
1500.0,"binary search,dp,implementation,two pointers","['binary search', 'dp', 'implementation', 'two pointers']","  (0, 52)	0.4157739155594403
  (0, 46)	0.5088439153982781
  (0, 35)	0.29790502580720374
  (0, 21)	0.35117309704080807
  (0, 4)	0.42198339565443677
  (0, 3)	0.42198339565443677",311,2
2000.0,"binary search,math,ternary search","['binary search', 'math', 'ternary search']","  (0, 66)	0.49928808341448605
  (0, 65)	0.49928808341448605
  (0, 52)	0.504602660617126
  (0, 37)	0.25261394628168665
  (0, 4)	0.30247741119188465
  (0, 3)	0.30247741119188465",2227,4
1000.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",5610,1
1500.0,"brute force,number theory","['brute force', 'number theory']","  (0, 68)	0.4570235457665541
  (0, 43)	0.4570235457665541
  (0, 42)	0.4570235457665541
  (0, 27)	0.3527928740044217
  (0, 7)	0.3527928740044217
  (0, 6)	0.3527928740044217",192,3
500.0,sortings,['sortings'],"  (0, 56)	1.0",4929,0
1500.0,math,['math'],"  (0, 37)	1.0",549,2
500.0,"brute force,constructive algorithms,math","['brute force', 'constructive algorithms', 'math']","  (0, 37)	0.34464698527814425
  (0, 27)	0.3637107610540484
  (0, 14)	0.40181334904784716
  (0, 13)	0.40181334904784716
  (0, 7)	0.3637107610540484
  (0, 6)	0.3637107610540484
  (0, 2)	0.40181334904784716",712,0
1000.0,"constructive algorithms,greedy,strings","['constructive algorithms', 'greedy', 'strings']","  (0, 61)	0.5047126452194689
  (0, 33)	0.38452337109975504
  (0, 14)	0.4462461663079571
  (0, 13)	0.4462461663079571
  (0, 2)	0.4462461663079571",5503,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",5095,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2010,1
1750.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",881,2
500.0,"games,number theory","['games', 'number theory']","  (0, 68)	0.47174741025749983
  (0, 43)	0.47174741025749983
  (0, 42)	0.47174741025749983
  (0, 28)	0.5765094472305083",2514,0
1500.0,"dfs and similar,greedy,shortest paths","['dfs and similar', 'greedy', 'shortest paths']","  (0, 55)	0.33212238929354154
  (0, 54)	0.4437659843760762
  (0, 53)	0.4437659843760762
  (0, 45)	0.4437659843760762
  (0, 33)	0.27982031542052804
  (0, 18)	0.33212238929354154
  (0, 17)	0.33212238929354154",3486,2
2250.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",6162,3
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",2820,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2965,0
1500.0,dp,['dp'],"  (0, 21)	1.0",4620,2
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",785,1
1000.0,"dp,greedy,sortings","['dp', 'greedy', 'sortings']","  (0, 56)	0.6456550033131226
  (0, 33)	0.5421614851179785
  (0, 21)	0.5377643914870152",1084,1
3.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",3473,14
1500.0,"dfs and similar,hashing,shortest paths","['dfs and similar', 'hashing', 'shortest paths']","  (0, 55)	0.3137368853668527
  (0, 54)	0.4192001571048945
  (0, 53)	0.4192001571048945
  (0, 45)	0.4192001571048945
  (0, 34)	0.421332630033106
  (0, 18)	0.3137368853668527
  (0, 17)	0.3137368853668527",5342,2
250.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",14,0
1500.0,"constructive algorithms,games","['constructive algorithms', 'games']","  (0, 28)	0.6374575724509286
  (0, 14)	0.4448399874580255
  (0, 13)	0.4448399874580255
  (0, 2)	0.4448399874580255",6215,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",840,1
2500.0,dp,['dp'],"  (0, 21)	1.0",5219,4
2000.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",2735,3
500.0,geometry,['geometry'],"  (0, 29)	1.0",4137,0
500.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",2489,1
250.0,"games,greedy,implementation,math","['games', 'greedy', 'implementation', 'math']","  (0, 37)	0.4258202380601592
  (0, 35)	0.3599518333795691
  (0, 33)	0.42778388296901354
  (0, 28)	0.7114160189207364",5903,2
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",1795,1
2000.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",3542,3
2500.0,dp,['dp'],"  (0, 21)	1.0",1013,5
2000.0,"data structures,dfs and similar,hashing,strings,trees","['data structures', 'dfs and similar', 'hashing', 'strings', 'trees']","  (0, 69)	0.35533873937249866
  (0, 62)	0.2838891404591737
  (0, 61)	0.3561654300728431
  (0, 55)	0.32206922704947244
  (0, 34)	0.4325225397925772
  (0, 18)	0.32206922704947244
  (0, 17)	0.32206922704947244
  (0, 16)	0.2898499734226192
  (0, 15)	0.2898499734226192",5357,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",5122,0
3000.0,"data structures,divide and conquer,trees","['data structures', 'divide and conquer', 'trees']","  (0, 69)	0.36553690922114707
  (0, 62)	0.29203671726912717
  (0, 20)	0.44843738528982896
  (0, 19)	0.44843738528982896
  (0, 16)	0.2981686252668005
  (0, 15)	0.2981686252668005
  (0, 12)	0.44843738528982896",6193,5
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",5471,0
2000.0,dp,['dp'],"  (0, 21)	1.0",1901,3
3000.0,"geometry,two pointers","['geometry', 'two pointers']","  (0, 46)	0.7121788810723234
  (0, 29)	0.7019980351500803",3305,4
3000.0,"brute force,data structures","['brute force', 'data structures']","  (0, 62)	0.40457805626898896
  (0, 27)	0.40622571315158146
  (0, 16)	0.4130729997888229
  (0, 15)	0.4130729997888229
  (0, 7)	0.40622571315158146
  (0, 6)	0.40622571315158146",2677,5
750.0,implementation,['implementation'],"  (0, 35)	1.0",3195,1
1000.0,greedy,['greedy'],"  (0, 33)	1.0",1624,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2768,1
500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",5957,1
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",5838,1
500.0,"geometry,implementation,sortings","['geometry', 'implementation', 'sortings']","  (0, 56)	0.5857699385229936
  (0, 35)	0.41388071748064803
  (0, 29)	0.6968330724215608",2570,0
500.0,strings,['strings'],"  (0, 61)	1.0",4194,0
3500.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",3289,7
1750.0,"fft,math","['fft', 'math']","  (0, 37)	0.43937650702674214
  (0, 25)	0.8983030029299575",4286,4
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",5309,0
1500.0,"binary search,dp,sortings","['binary search', 'dp', 'sortings']","  (0, 56)	0.462769028293604
  (0, 52)	0.45634343581501496
  (0, 21)	0.38543913331785573
  (0, 4)	0.4631588116121302
  (0, 3)	0.4631588116121302",3356,2
500.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",3752,0
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",801,0
2000.0,"constructive algorithms,math,number theory","['constructive algorithms', 'math', 'number theory']","  (0, 68)	0.4182350129787219
  (0, 43)	0.4182350129787219
  (0, 42)	0.4182350129787219
  (0, 37)	0.3059285086684207
  (0, 14)	0.3566726647501791
  (0, 13)	0.3566726647501791
  (0, 2)	0.3566726647501791",3860,3
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",43,0
1000.0,"constructive algorithms,greedy,sortings","['constructive algorithms', 'greedy', 'sortings']","  (0, 56)	0.468599534293003
  (0, 33)	0.39348664245489945
  (0, 14)	0.4566482010877195
  (0, 13)	0.4566482010877195
  (0, 2)	0.4566482010877195",3282,1
3000.0,"combinatorics,dp,number theory","['combinatorics', 'dp', 'number theory']","  (0, 68)	0.4689289045778192
  (0, 43)	0.4689289045778192
  (0, 42)	0.4689289045778192
  (0, 21)	0.3417968568937973
  (0, 11)	0.47274935851025807",4709,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3015,0
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",127,0
500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",4542,0
500.0,"implementation,math,number theory","['implementation', 'math', 'number theory']","  (0, 68)	0.5052449415657008
  (0, 43)	0.5052449415657008
  (0, 42)	0.5052449415657008
  (0, 37)	0.3695741071140833
  (0, 35)	0.3124061881871792",4690,0
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2322,1
500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",4653,0
3500.0,"constructive algorithms,flows","['constructive algorithms', 'flows']","  (0, 26)	0.6530886323660848
  (0, 14)	0.4372166656911259
  (0, 13)	0.4372166656911259
  (0, 2)	0.4372166656911259",5069,7
500.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",4646,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1647,1
500.0,"geometry,implementation,math","['geometry', 'implementation', 'math']","  (0, 37)	0.5170802635289932
  (0, 35)	0.43709521583461364
  (0, 29)	0.7359183197633277",6186,0
2000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",1904,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",728,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4243,1
1000.0,"constructive algorithms,greedy,implementation","['constructive algorithms', 'greedy', 'implementation']","  (0, 35)	0.35095054957549987
  (0, 33)	0.41708632907337784
  (0, 14)	0.4840360543915258
  (0, 13)	0.4840360543915258
  (0, 2)	0.4840360543915258",4742,1
1500.0,"constructive algorithms,greedy,implementation","['constructive algorithms', 'greedy', 'implementation']","  (0, 35)	0.35095054957549987
  (0, 33)	0.41708632907337784
  (0, 14)	0.4840360543915258
  (0, 13)	0.4840360543915258
  (0, 2)	0.4840360543915258",2136,2
2000.0,"dp,graphs,shortest paths","['dp', 'graphs', 'shortest paths']","  (0, 54)	0.49831103382738545
  (0, 53)	0.49831103382738545
  (0, 45)	0.49831103382738545
  (0, 32)	0.39739499829678016
  (0, 21)	0.31166577615508095",2297,3
2500.0,"dp,games,math,probabilities","['dp', 'games', 'math', 'probabilities']","  (0, 47)	0.5907190931195583
  (0, 37)	0.36889643917145387
  (0, 28)	0.6163136758011826
  (0, 21)	0.36759192484474307",742,4
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1058,4
1000.0,"dfs and similar,dsu","['dfs and similar', 'dsu']","  (0, 55)	0.466655699084791
  (0, 22)	0.5888101353875076
  (0, 18)	0.466655699084791
  (0, 17)	0.466655699084791",1940,1
1500.0,"bitmasks,greedy,implementation,sortings","['bitmasks', 'greedy', 'implementation', 'sortings']","  (0, 56)	0.512676984186083
  (0, 35)	0.3622362707546518
  (0, 33)	0.4304988170243207
  (0, 5)	0.6485506630759742",3112,1
2000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",902,3
2000.0,divide and conquer,['divide and conquer'],"  (0, 20)	0.5773502691896257
  (0, 19)	0.5773502691896257
  (0, 12)	0.5773502691896257",4367,2
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",2451,0
2000.0,"binary search,graphs,math,shortest paths","['binary search', 'graphs', 'math', 'shortest paths']","  (0, 54)	0.4185616937592255
  (0, 53)	0.4185616937592255
  (0, 52)	0.3099446134660462
  (0, 45)	0.4185616937592255
  (0, 37)	0.2627160417747088
  (0, 32)	0.33379618809757866
  (0, 4)	0.31457355923643965
  (0, 3)	0.31457355923643965",3921,2
500.0,greedy,['greedy'],"  (0, 33)	1.0",2089,0
1500.0,"constructive algorithms,graphs,greedy","['constructive algorithms', 'graphs', 'greedy']","  (0, 33)	0.38807709769607496
  (0, 32)	0.4908114373323105
  (0, 14)	0.4503703288138116
  (0, 13)	0.4503703288138116
  (0, 2)	0.4503703288138116",1296,2
1250.0,"binary search,sortings,two pointers","['binary search', 'sortings', 'two pointers']","  (0, 56)	0.4290505876021189
  (0, 52)	0.42309317891641646
  (0, 46)	0.5178015784093971
  (0, 4)	0.42941197039056483
  (0, 3)	0.42941197039056483",4242,1
2000.0,"binary search,sortings,two pointers","['binary search', 'sortings', 'two pointers']","  (0, 56)	0.4290505876021189
  (0, 52)	0.42309317891641646
  (0, 46)	0.5178015784093971
  (0, 4)	0.42941197039056483
  (0, 3)	0.42941197039056483",4806,3
1250.0,"data structures,greedy,implementation,sortings,two pointers","['data structures', 'greedy', 'implementation', 'sortings', 'two pointers']","  (0, 62)	0.35741113679716446
  (0, 56)	0.4068379700494691
  (0, 46)	0.49099418375309956
  (0, 35)	0.28745481778566045
  (0, 33)	0.3416249806979863
  (0, 16)	0.3649157144019195
  (0, 15)	0.3649157144019195",5490,2
2250.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",3603,3
2000.0,"combinatorics,math,probabilities","['combinatorics', 'math', 'probabilities']","  (0, 47)	0.68506407968038
  (0, 37)	0.4278136639595847
  (0, 11)	0.5896292696781168",5166,3
2500.0,"dp,graphs,shortest paths","['dp', 'graphs', 'shortest paths']","  (0, 54)	0.49831103382738545
  (0, 53)	0.49831103382738545
  (0, 45)	0.49831103382738545
  (0, 32)	0.39739499829678016
  (0, 21)	0.31166577615508095",5045,4
2250.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4018,3
1500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",738,2
1000.0,"implementation,math,matrices","['implementation', 'math', 'matrices']","  (0, 38)	0.8003947648978038
  (0, 37)	0.45781921400521985
  (0, 35)	0.38700101758500854",3293,0
500.0,"implementation,sortings,strings","['implementation', 'sortings', 'strings']","  (0, 61)	0.6690274376956302
  (0, 56)	0.6070078994922229
  (0, 35)	0.4288865789045619",2740,0
500.0,"constructive algorithms,strings","['constructive algorithms', 'strings']","  (0, 61)	0.5467493268887392
  (0, 14)	0.4834132716240183
  (0, 13)	0.4834132716240183
  (0, 2)	0.4834132716240183",696,0
2000.0,"dfs and similar,dsu,graphs,sortings","['dfs and similar', 'dsu', 'graphs', 'sortings']","  (0, 56)	0.38664329057732927
  (0, 55)	0.3853519238411382
  (0, 32)	0.410615444558302
  (0, 22)	0.4862238238892905
  (0, 18)	0.3853519238411382
  (0, 17)	0.3853519238411382",6391,3
1500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",1475,2
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",5612,0
1500.0,geometry,['geometry'],"  (0, 29)	1.0",6483,2
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",5819,1
1000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",5620,1
2000.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",4423,3
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2683,0
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",3503,3
1500.0,geometry,['geometry'],"  (0, 29)	1.0",4158,2
2000.0,"dfs and similar,expression parsing","['dfs and similar', 'expression parsing']","  (0, 55)	0.30442119587333144
  (0, 44)	0.49057218514341394
  (0, 24)	0.49057218514341394
  (0, 23)	0.49057218514341394
  (0, 18)	0.30442119587333144
  (0, 17)	0.30442119587333144",950,4
1250.0,math,['math'],"  (0, 37)	1.0",4683,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",3007,0
3250.0,"bitmasks,brute force,combinatorics,dp","['bitmasks', 'brute force', 'combinatorics', 'dp']","  (0, 27)	0.3614577235521561
  (0, 21)	0.34130082778230236
  (0, 11)	0.47206328595127456
  (0, 7)	0.3614577235521561
  (0, 6)	0.3614577235521561
  (0, 5)	0.5183772190842104",1319,6
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1533,1
4.0,"bitmasks,divide and conquer,math","['bitmasks', 'divide and conquer', 'math']","  (0, 37)	0.30008622690608805
  (0, 20)	0.4843139708531915
  (0, 19)	0.4843139708531915
  (0, 12)	0.4843139708531915
  (0, 5)	0.4541675784669242",37,14
2500.0,"combinatorics,dp,math,number theory","['combinatorics', 'dp', 'math', 'number theory']","  (0, 68)	0.4435606142822844
  (0, 43)	0.4435606142822844
  (0, 42)	0.4435606142822844
  (0, 37)	0.3244535560640199
  (0, 21)	0.3233062033999812
  (0, 11)	0.44717438787688807",1487,4
1500.0,implementation,['implementation'],"  (0, 35)	1.0",396,2
3500.0,"combinatorics,divide and conquer,dp,fft,math,number theory","['combinatorics', 'divide and conquer', 'dp', 'fft', 'math', 'number theory']","  (0, 68)	0.294881006554023
  (0, 43)	0.294881006554023
  (0, 42)	0.294881006554023
  (0, 37)	0.21569812131990174
  (0, 25)	0.440993696770922
  (0, 21)	0.21493535632781235
  (0, 20)	0.3481186548248599
  (0, 19)	0.3481186548248599
  (0, 12)	0.3481186548248599
  (0, 11)	0.29728345880231233",2313,5
2500.0,"data structures,strings","['data structures', 'strings']","  (0, 62)	0.46329701031250653
  (0, 61)	0.5812493519918441
  (0, 16)	0.47302487833334644
  (0, 15)	0.47302487833334644",844,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2371,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4190,0
2000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",223,3
1000.0,"implementation,math,number theory","['implementation', 'math', 'number theory']","  (0, 68)	0.5052449415657008
  (0, 43)	0.5052449415657008
  (0, 42)	0.5052449415657008
  (0, 37)	0.3695741071140833
  (0, 35)	0.3124061881871792",1284,2
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",5843,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2949,0
2500.0,"dp,trees","['dp', 'trees']","  (0, 69)	0.7971422900186308
  (0, 21)	0.603791495024444",2518,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",2488,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2231,0
2500.0,matrices,['matrices'],"  (0, 38)	1.0",472,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",3657,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2262,1
2500.0,"binary search,data structures,dfs and similar,dp,sortings","['binary search', 'data structures', 'dfs and similar', 'dp', 'sortings']","  (0, 62)	0.2773886470177272
  (0, 56)	0.3157490700450836
  (0, 55)	0.3146944859982982
  (0, 52)	0.31136486383084244
  (0, 21)	0.26298658826165444
  (0, 18)	0.3146944859982982
  (0, 17)	0.3146944859982982
  (0, 16)	0.283212988830008
  (0, 15)	0.283212988830008
  (0, 4)	0.31601502068745385
  (0, 3)	0.31601502068745385",520,4
3000.0,"constructive algorithms,implementation,trees","['constructive algorithms', 'implementation', 'trees']","  (0, 69)	0.5150939961836125
  (0, 35)	0.33097426129536994
  (0, 14)	0.45648446978167856
  (0, 13)	0.45648446978167856
  (0, 2)	0.45648446978167856",4818,5
1000.0,"constructive algorithms,data structures,dp,trees","['constructive algorithms', 'data structures', 'dp', 'trees']","  (0, 69)	0.4117327425735527
  (0, 62)	0.3289437413846763
  (0, 21)	0.3118649346570104
  (0, 16)	0.33585058781632715
  (0, 15)	0.33585058781632715
  (0, 14)	0.36488408732771804
  (0, 13)	0.36488408732771804
  (0, 2)	0.36488408732771804",2614,2
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",4136,0
1500.0,"geometry,ternary search","['geometry', 'ternary search']","  (0, 66)	0.5897882294530464
  (0, 65)	0.5897882294530464
  (0, 52)	0.3520462515724971
  (0, 29)	0.42469180066377016",2705,2
2000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",1790,3
1500.0,"brute force,greedy,implementation,number theory","['brute force', 'greedy', 'implementation', 'number theory']","  (0, 68)	0.418487550227922
  (0, 43)	0.418487550227922
  (0, 42)	0.418487550227922
  (0, 35)	0.25876181949561383
  (0, 33)	0.3075248565027692
  (0, 27)	0.32304555629042375
  (0, 7)	0.32304555629042375
  (0, 6)	0.32304555629042375",3034,2
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",714,1
2500.0,greedy,['greedy'],"  (0, 33)	1.0",4649,4
1000.0,"combinatorics,math,probabilities","['combinatorics', 'math', 'probabilities']","  (0, 47)	0.68506407968038
  (0, 37)	0.4278136639595847
  (0, 11)	0.5896292696781168",159,2
1500.0,"constructive algorithms,shortest paths,trees","['constructive algorithms', 'shortest paths', 'trees']","  (0, 69)	0.35906998729112016
  (0, 54)	0.4348521643830018
  (0, 53)	0.4348521643830018
  (0, 45)	0.4348521643830018
  (0, 14)	0.31821351826565075
  (0, 13)	0.31821351826565075
  (0, 2)	0.31821351826565075",3708,3
3000.0,"data structures,hashing,string suffix structures,strings","['data structures', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.35264676293046426
  (0, 63)	0.35264676293046426
  (0, 62)	0.35007541787436475
  (0, 61)	0.25939995008218775
  (0, 60)	0.35264676293046426
  (0, 59)	0.35264676293046426
  (0, 58)	0.35264676293046426
  (0, 34)	0.31501183371072583
  (0, 16)	0.21110153397474193
  (0, 15)	0.21110153397474193",2833,5
1000.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",5230,1
3000.0,"bitmasks,combinatorics,constructive algorithms,dp,meet-in-the-middle","['bitmasks', 'combinatorics', 'constructive algorithms', 'dp', 'meet-in-the-middle']","  (0, 41)	0.44155733566857214
  (0, 40)	0.44155733566857214
  (0, 39)	0.44155733566857214
  (0, 21)	0.21096196545434814
  (0, 14)	0.24682692945370877
  (0, 13)	0.24682692945370877
  (0, 11)	0.2917877441734198
  (0, 5)	0.32041491869605965
  (0, 2)	0.24682692945370877",3769,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",1834,0
500.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",2716,0
500.0,math,['math'],"  (0, 37)	1.0",481,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1676,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",3003,0
2000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",6363,4
1500.0,"combinatorics,number theory","['combinatorics', 'number theory']","  (0, 68)	0.4989805785806445
  (0, 43)	0.4989805785806445
  (0, 42)	0.4989805785806445
  (0, 11)	0.5030458692783151",4016,2
1000.0,"brute force,data structures,geometry,math","['brute force', 'data structures', 'geometry', 'math']","  (0, 62)	0.3361800420859891
  (0, 37)	0.3198566222805705
  (0, 29)	0.45522593809208955
  (0, 27)	0.33754914590056906
  (0, 16)	0.3432388294467083
  (0, 15)	0.3432388294467083
  (0, 7)	0.33754914590056906
  (0, 6)	0.33754914590056906",1975,1
2000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",1123,3
2500.0,"dp,geometry","['dp', 'geometry']","  (0, 29)	0.8191749629050964
  (0, 21)	0.5735437037832721",5071,4
500.0,math,['math'],"  (0, 37)	1.0",1171,0
500.0,"dfs and similar,greedy,implementation","['dfs and similar', 'greedy', 'implementation']","  (0, 55)	0.48723020850365795
  (0, 35)	0.3454102864367324
  (0, 33)	0.4105020167893705
  (0, 18)	0.48723020850365795
  (0, 17)	0.48723020850365795",5729,0
1000.0,"constructive algorithms,graphs","['constructive algorithms', 'graphs']","  (0, 32)	0.5325489420502197
  (0, 14)	0.4886688122921944
  (0, 13)	0.4886688122921944
  (0, 2)	0.4886688122921944",708,1
1000.0,"dp,greedy,math","['dp', 'greedy', 'math']","  (0, 37)	0.5771402159408785
  (0, 33)	0.5798016640014267
  (0, 21)	0.5750992971347582",3454,1
1750.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5011,3
1500.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",2755,2
2250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",3619,3
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",89,2
2000.0,"dfs and similar,strings","['dfs and similar', 'strings']","  (0, 61)	0.5381397710839454
  (0, 55)	0.4866229158796775
  (0, 18)	0.4866229158796775
  (0, 17)	0.4866229158796775",5887,3
2500.0,"dfs and similar,dp,implementation,trees","['dfs and similar', 'dp', 'implementation', 'trees']","  (0, 69)	0.47398540065226824
  (0, 55)	0.42960728653000146
  (0, 35)	0.30455988423082575
  (0, 21)	0.3590179034070622
  (0, 18)	0.42960728653000146
  (0, 17)	0.42960728653000146",5204,4
2500.0,dp,['dp'],"  (0, 21)	1.0",2073,4
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",70,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3825,0
1000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",744,1
2500.0,"data structures,dp,geometry","['data structures', 'dp', 'geometry']","  (0, 62)	0.41460778235328183
  (0, 29)	0.5614260010526655
  (0, 21)	0.39308128620293514
  (0, 16)	0.4233133204797319
  (0, 15)	0.4233133204797319",3779,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",416,1
1000.0,greedy,['greedy'],"  (0, 33)	1.0",609,1
2500.0,"bitmasks,dp,probabilities","['bitmasks', 'dp', 'probabilities']","  (0, 47)	0.6621921740240961
  (0, 21)	0.4120681025919987
  (0, 5)	0.625860530379949",4273,4
2000.0,"binary search,brute force,implementation,sortings,two pointers","['binary search', 'brute force', 'implementation', 'sortings', 'two pointers']","  (0, 56)	0.34782343962134155
  (0, 52)	0.3429938776998167
  (0, 46)	0.4197722395633583
  (0, 35)	0.24575760085956824
  (0, 27)	0.30681072283782146
  (0, 7)	0.30681072283782146
  (0, 6)	0.30681072283782146
  (0, 4)	0.3481164060176813
  (0, 3)	0.3481164060176813",4592,2
500.0,"binary search,brute force,math","['binary search', 'brute force', 'math']","  (0, 52)	0.4022888711464306
  (0, 37)	0.3409891163963847
  (0, 27)	0.3598505611055504
  (0, 7)	0.3598505611055504
  (0, 6)	0.3598505611055504
  (0, 4)	0.4082969554546085
  (0, 3)	0.4082969554546085",250,0
500.0,"constructive algorithms,greedy,sortings","['constructive algorithms', 'greedy', 'sortings']","  (0, 56)	0.468599534293003
  (0, 33)	0.39348664245489945
  (0, 14)	0.4566482010877195
  (0, 13)	0.4566482010877195
  (0, 2)	0.4566482010877195",4896,0
2000.0,"data structures,dsu","['data structures', 'dsu']","  (0, 62)	0.44134103236819244
  (0, 22)	0.6317619429480074
  (0, 16)	0.4506078897393701
  (0, 15)	0.4506078897393701",398,4
250.0,greedy,['greedy'],"  (0, 33)	1.0",4957,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",1069,0
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5621,1
2000.0,"combinatorics,dfs and similar,trees","['combinatorics', 'dfs and similar', 'trees']","  (0, 69)	0.4681855106610806
  (0, 55)	0.42435042630211733
  (0, 18)	0.42435042630211733
  (0, 17)	0.42435042630211733
  (0, 11)	0.4904920740426464",2414,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2220,0
1500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",2490,2
1000.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",6222,1
2500.0,"combinatorics,geometry","['combinatorics', 'geometry']","  (0, 29)	0.7183675034884691
  (0, 11)	0.6956638052477248",1549,4
1500.0,"binary search,data structures,greedy,two pointers","['binary search', 'data structures', 'greedy', 'two pointers']","  (0, 62)	0.32039707470022216
  (0, 52)	0.35964122039017515
  (0, 46)	0.4401460502295252
  (0, 33)	0.3062457578714795
  (0, 16)	0.32712446638972303
  (0, 15)	0.32712446638972303
  (0, 4)	0.3650123726336924
  (0, 3)	0.3650123726336924",5000,3
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",2331,0
1000.0,sortings,['sortings'],"  (0, 56)	1.0",6063,1
1000.0,dp,['dp'],"  (0, 21)	1.0",3783,1
2000.0,"bitmasks,brute force,implementation","['bitmasks', 'brute force', 'implementation']","  (0, 35)	0.3355538577715763
  (0, 27)	0.4189149035221328
  (0, 7)	0.4189149035221328
  (0, 6)	0.4189149035221328
  (0, 5)	0.60077826138746",843,3
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",4623,2
2000.0,"binary search,greedy,implementation,strings","['binary search', 'greedy', 'implementation', 'strings']","  (0, 61)	0.47452317556983153
  (0, 52)	0.4245563730943181
  (0, 35)	0.30419772032378506
  (0, 33)	0.3615230425933344
  (0, 4)	0.43089701700986016
  (0, 3)	0.43089701700986016",3307,3
2000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",854,3
1250.0,"data structures,math,matrices","['data structures', 'math', 'matrices']","  (0, 62)	0.3847014100255955
  (0, 38)	0.6399078260407707
  (0, 37)	0.3660220066421607
  (0, 16)	0.3927790027163744
  (0, 15)	0.3927790027163744",2608,2
1500.0,geometry,['geometry'],"  (0, 29)	1.0",5373,2
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",180,1
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",851,1
750.0,ternary search,['ternary search'],"  (0, 66)	0.6514564025535534
  (0, 65)	0.6514564025535534
  (0, 52)	0.38885615739494905",310,2
500.0,math,['math'],"  (0, 37)	1.0",5795,0
1500.0,implementation,['implementation'],"  (0, 35)	1.0",2721,2
1500.0,"brute force,dp,implementation","['brute force', 'dp', 'implementation']","  (0, 35)	0.3762135261786677
  (0, 27)	0.4696755807532483
  (0, 21)	0.4434838545567469
  (0, 7)	0.4696755807532483
  (0, 6)	0.4696755807532483",1954,2
1000.0,"binary search,greedy,number theory","['binary search', 'greedy', 'number theory']","  (0, 68)	0.4145493485916184
  (0, 52)	0.35774477564719226
  (0, 43)	0.4145493485916184
  (0, 42)	0.4145493485916184
  (0, 33)	0.30463087580388426
  (0, 4)	0.36308760495980374
  (0, 3)	0.36308760495980374",2616,1
2250.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",2092,3
2000.0,"dp,sortings","['dp', 'sortings']","  (0, 56)	0.7683859805869373
  (0, 21)	0.6399867067662038",1915,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",3818,0
1000.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",6452,1
1000.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",2595,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6084,2
1000.0,"dfs and similar,dp,greedy,trees","['dfs and similar', 'dp', 'greedy', 'trees']","  (0, 69)	0.4651716581173939
  (0, 55)	0.42161875353010153
  (0, 33)	0.3552229431173043
  (0, 21)	0.35234197760494734
  (0, 18)	0.42161875353010153
  (0, 17)	0.42161875353010153",5410,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4672,0
2000.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",1503,3
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",4001,1
1500.0,"brute force,data structures,dfs and similar,dp,implementation","['brute force', 'data structures', 'dfs and similar', 'dp', 'implementation']","  (0, 62)	0.2946756860025508
  (0, 55)	0.3343064488751132
  (0, 35)	0.23699861841126532
  (0, 27)	0.29587576201916
  (0, 21)	0.27937608167691463
  (0, 18)	0.3343064488751132
  (0, 17)	0.3343064488751132
  (0, 16)	0.30086300454460163
  (0, 15)	0.30086300454460163
  (0, 7)	0.29587576201916
  (0, 6)	0.29587576201916",3433,3
1500.0,math,['math'],"  (0, 37)	1.0",704,2
2000.0,"binary search,graphs","['binary search', 'graphs']","  (0, 52)	0.48679147852954496
  (0, 32)	0.5242521820736425
  (0, 4)	0.494061588277233
  (0, 3)	0.494061588277233",841,3
2500.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",1778,4
2000.0,"combinatorics,dp,math,number theory","['combinatorics', 'dp', 'math', 'number theory']","  (0, 68)	0.4435606142822844
  (0, 43)	0.4435606142822844
  (0, 42)	0.4435606142822844
  (0, 37)	0.3244535560640199
  (0, 21)	0.3233062033999812
  (0, 11)	0.44717438787688807",2494,3
500.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",1979,14
1500.0,greedy,['greedy'],"  (0, 33)	1.0",6356,2
500.0,"dfs and similar,dsu","['dfs and similar', 'dsu']","  (0, 55)	0.466655699084791
  (0, 22)	0.5888101353875076
  (0, 18)	0.466655699084791
  (0, 17)	0.466655699084791",3530,0
2000.0,"dfs and similar,trees","['dfs and similar', 'trees']","  (0, 69)	0.5372515306095824
  (0, 55)	0.4869499607617676
  (0, 18)	0.4869499607617676
  (0, 17)	0.4869499607617676",1206,3
500.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",5505,0
500.0,"binary search,combinatorics,dp","['binary search', 'combinatorics', 'dp']","  (0, 52)	0.441152815302036
  (0, 21)	0.37260875350834644
  (0, 11)	0.5153662055210501
  (0, 4)	0.44774132295717295
  (0, 3)	0.44774132295717295",1359,0
1000.0,"constructive algorithms,data structures,graphs","['constructive algorithms', 'data structures', 'graphs']","  (0, 62)	0.3484172623536259
  (0, 32)	0.4211898183050138
  (0, 16)	0.35573299517493684
  (0, 15)	0.35573299517493684
  (0, 14)	0.3864852824010813
  (0, 13)	0.3864852824010813
  (0, 2)	0.3864852824010813",6430,1
2500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1524,4
1000.0,"brute force,sortings","['brute force', 'sortings']","  (0, 56)	0.5476484688915996
  (0, 27)	0.4830738916979771
  (0, 7)	0.4830738916979771
  (0, 6)	0.4830738916979771",4372,1
2000.0,"data structures,divide and conquer,sortings","['data structures', 'divide and conquer', 'sortings']","  (0, 62)	0.2954711853393713
  (0, 56)	0.3363322652136617
  (0, 20)	0.4537111874873189
  (0, 19)	0.4537111874873189
  (0, 16)	0.301675207016532
  (0, 15)	0.301675207016532
  (0, 12)	0.4537111874873189",783,3
1500.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",2520,2
2250.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5386,3
2000.0,"data structures,probabilities","['data structures', 'probabilities']","  (0, 62)	0.4300882608035963
  (0, 47)	0.6552658780707954
  (0, 16)	0.43911884322757494
  (0, 15)	0.43911884322757494",2615,3
2000.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",6511,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2734,0
1000.0,dp,['dp'],"  (0, 21)	1.0",2070,1
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",4425,1
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",6500,3
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",3455,2
1500.0,probabilities,['probabilities'],"  (0, 47)	1.0",2620,2
500.0,math,['math'],"  (0, 37)	1.0",4268,0
1500.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",1610,2
2750.0,"bitmasks,constructive algorithms,implementation,math","['bitmasks', 'constructive algorithms', 'implementation', 'math']","  (0, 37)	0.3517364928478148
  (0, 35)	0.29732780208812815
  (0, 14)	0.41007878847239454
  (0, 13)	0.41007878847239454
  (0, 5)	0.5323380311790635
  (0, 2)	0.41007878847239454",4049,5
2500.0,geometry,['geometry'],"  (0, 29)	1.0",1502,4
1500.0,"binary search,data structures,dp","['binary search', 'data structures', 'dp']","  (0, 62)	0.35715467238244775
  (0, 52)	0.40090110798876033
  (0, 21)	0.33861115002866804
  (0, 16)	0.36465386499243074
  (0, 15)	0.36465386499243074
  (0, 4)	0.40688846639908455
  (0, 3)	0.40688846639908455",5551,2
1500.0,"brute force,data structures","['brute force', 'data structures']","  (0, 62)	0.40457805626898896
  (0, 27)	0.40622571315158146
  (0, 16)	0.4130729997888229
  (0, 15)	0.4130729997888229
  (0, 7)	0.40622571315158146
  (0, 6)	0.40622571315158146",3273,2
500.0,"implementation,sortings,strings","['implementation', 'sortings', 'strings']","  (0, 61)	0.6690274376956302
  (0, 56)	0.6070078994922229
  (0, 35)	0.4288865789045619",2253,0
40.0,dp,['dp'],"  (0, 21)	1.0",5615,14
1250.0,"brute force,constructive algorithms,dfs and similar,graphs,trees","['brute force', 'constructive algorithms', 'dfs and similar', 'graphs', 'trees']","  (0, 69)	0.33934589377573016
  (0, 55)	0.3075737531566773
  (0, 32)	0.3277381675638385
  (0, 27)	0.2722161624417874
  (0, 18)	0.3075737531566773
  (0, 17)	0.3075737531566773
  (0, 14)	0.3007337137309314
  (0, 13)	0.3007337137309314
  (0, 7)	0.2722161624417874
  (0, 6)	0.2722161624417874
  (0, 2)	0.3007337137309314",1971,2
500.0,greedy,['greedy'],"  (0, 33)	1.0",777,0
500.0,"bitmasks,math,matrices,probabilities","['bitmasks', 'math', 'matrices', 'probabilities']","  (0, 47)	0.5364233718629582
  (0, 38)	0.5856543461974784
  (0, 37)	0.3349894629671961
  (0, 5)	0.5069921228186173",4022,0
1000.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",2152,1
750.0,"dfs and similar,dp,games","['dfs and similar', 'dp', 'games']","  (0, 55)	0.42027352506481214
  (0, 28)	0.5888603905088485
  (0, 21)	0.3512177855384844
  (0, 18)	0.42027352506481214
  (0, 17)	0.42027352506481214",2782,0
1500.0,"dfs and similar,dsu,implementation","['dfs and similar', 'dsu', 'implementation']","  (0, 55)	0.44304079517666356
  (0, 35)	0.3140832511906538
  (0, 22)	0.5590136606105415
  (0, 18)	0.44304079517666356
  (0, 17)	0.44304079517666356",3055,2
1000.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",4615,1
2500.0,"data structures,dfs and similar,dp,trees","['data structures', 'dfs and similar', 'dp', 'trees']","  (0, 69)	0.4080011136965529
  (0, 62)	0.3259624483337839
  (0, 55)	0.3698009498081276
  (0, 21)	0.30903843077340964
  (0, 18)	0.3698009498081276
  (0, 17)	0.3698009498081276
  (0, 16)	0.3328066964220719
  (0, 15)	0.3328066964220719",3677,5
2500.0,"binary search,data structures,trees","['binary search', 'data structures', 'trees']","  (0, 69)	0.4291381111254199
  (0, 62)	0.34284933221974967
  (0, 52)	0.3848435643953208
  (0, 16)	0.3500481549633222
  (0, 15)	0.3500481549633222
  (0, 4)	0.3905911073829198
  (0, 3)	0.3905911073829198",2384,4
2000.0,"constructive algorithms,data structures,greedy","['constructive algorithms', 'data structures', 'greedy']","  (0, 62)	0.3606125778423107
  (0, 33)	0.3446850203068654
  (0, 16)	0.36818437624769784
  (0, 15)	0.36818437624769784
  (0, 14)	0.400013056308652
  (0, 13)	0.400013056308652
  (0, 2)	0.400013056308652",2143,3
1500.0,"binary search,data structures,dp,two pointers","['binary search', 'data structures', 'dp', 'two pointers']","  (0, 62)	0.3206400683310379
  (0, 52)	0.3599139773309661
  (0, 46)	0.44047986316128973
  (0, 21)	0.3039923895117974
  (0, 16)	0.32737256216865945
  (0, 15)	0.32737256216865945
  (0, 4)	0.36528920313160473
  (0, 3)	0.36528920313160473",5845,1
2000.0,"data structures,dfs and similar,dsu,hashing,trees","['data structures', 'dfs and similar', 'dsu', 'hashing', 'trees']","  (0, 69)	0.3487255227029886
  (0, 62)	0.2786056737611918
  (0, 55)	0.31607518996581235
  (0, 34)	0.4244728538080255
  (0, 22)	0.39881282016141506
  (0, 18)	0.31607518996581235
  (0, 17)	0.31607518996581235
  (0, 16)	0.2844555695383692
  (0, 15)	0.2844555695383692",440,3
2250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1223,4
3000.0,"data structures,graphs,implementation,shortest paths","['data structures', 'graphs', 'implementation', 'shortest paths']","  (0, 62)	0.2876405004749541
  (0, 54)	0.4360199319642077
  (0, 53)	0.4360199319642077
  (0, 45)	0.4360199319642077
  (0, 35)	0.2313404344160886
  (0, 32)	0.3477188509943768
  (0, 16)	0.2936801009122228
  (0, 15)	0.2936801009122228",2064,5
2500.0,"bitmasks,brute force,dfs and similar,dp","['bitmasks', 'brute force', 'dfs and similar', 'dp']","  (0, 55)	0.36133071019811347
  (0, 27)	0.3197934098505203
  (0, 21)	0.3019599482581221
  (0, 18)	0.36133071019811347
  (0, 17)	0.36133071019811347
  (0, 7)	0.3197934098505203
  (0, 6)	0.3197934098505203
  (0, 5)	0.45862519370359994",3117,4
1000.0,"binary search,math,sortings","['binary search', 'math', 'sortings']","  (0, 56)	0.4625248062720955
  (0, 52)	0.45610260483977055
  (0, 37)	0.3866028502533253
  (0, 4)	0.46291438388612516
  (0, 3)	0.46291438388612516",4499,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",2081,0
500.0,math,['math'],"  (0, 37)	1.0",3671,0
2000.0,"2-sat,dfs and similar,dsu,graphs","['2-sat', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.25109443661209574
  (0, 50)	0.46148026231845224
  (0, 32)	0.26755608921806373
  (0, 22)	0.3168223371247297
  (0, 18)	0.25109443661209574
  (0, 17)	0.25109443661209574
  (0, 1)	0.46148026231845224
  (0, 0)	0.46148026231845224",6525,3
500.0,"binary search,greedy,sortings,two pointers","['binary search', 'greedy', 'sortings', 'two pointers']","  (0, 56)	0.4036526395357395
  (0, 52)	0.3980478838023504
  (0, 46)	0.4871499536892677
  (0, 33)	0.3389502341025855
  (0, 4)	0.40399263001857333
  (0, 3)	0.40399263001857333",605,0
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",158,0
2000.0,"data structures,dp,number theory","['data structures', 'dp', 'number theory']","  (0, 68)	0.43215096416133353
  (0, 62)	0.33223977881124805
  (0, 43)	0.43215096416133353
  (0, 42)	0.43215096416133353
  (0, 21)	0.3149898413426882
  (0, 16)	0.33921583228797736
  (0, 15)	0.33921583228797736",4297,3
1000.0,"brute force,combinatorics,dp","['brute force', 'combinatorics', 'dp']","  (0, 27)	0.4226823944461041
  (0, 21)	0.39911127004219316
  (0, 11)	0.5520226212767295
  (0, 7)	0.4226823944461041
  (0, 6)	0.4226823944461041",4510,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4152,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",1490,0
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",2604,1
2000.0,"brute force,data structures,dsu,sortings","['brute force', 'data structures', 'dsu', 'sortings']","  (0, 62)	0.32522880893128564
  (0, 56)	0.3702051078008284
  (0, 27)	0.3265533135037648
  (0, 22)	0.4655519635928222
  (0, 16)	0.33205765276026794
  (0, 15)	0.33205765276026794
  (0, 7)	0.3265533135037648
  (0, 6)	0.3265533135037648",5720,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",797,0
2250.0,"data structures,divide and conquer,dp","['data structures', 'divide and conquer', 'dp']","  (0, 62)	0.30072665844050306
  (0, 21)	0.2851128867488997
  (0, 20)	0.4617812364796882
  (0, 19)	0.4617812364796882
  (0, 16)	0.3070410295211283
  (0, 15)	0.3070410295211283
  (0, 12)	0.4617812364796882",3703,3
1750.0,"dp,greedy,strings,trees","['dp', 'greedy', 'strings', 'trees']","  (0, 69)	0.5624082566582391
  (0, 61)	0.563716691748647
  (0, 33)	0.42947654414748115
  (0, 21)	0.4259933594714098",767,2
1500.0,"constructive algorithms,dfs and similar,graphs,greedy","['constructive algorithms', 'dfs and similar', 'graphs', 'greedy']","  (0, 55)	0.3600638847851622
  (0, 33)	0.30336163131439936
  (0, 32)	0.38366953159782075
  (0, 18)	0.3600638847851622
  (0, 17)	0.3600638847851622
  (0, 14)	0.35205653323958613
  (0, 13)	0.35205653323958613
  (0, 2)	0.35205653323958613",5639,2
2000.0,"binary search,greedy,sortings,two pointers","['binary search', 'greedy', 'sortings', 'two pointers']","  (0, 56)	0.4036526395357395
  (0, 52)	0.3980478838023504
  (0, 46)	0.4871499536892677
  (0, 33)	0.3389502341025855
  (0, 4)	0.40399263001857333
  (0, 3)	0.40399263001857333",1612,3
3000.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",636,1
1000.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",1571,1
2250.0,"binary search,trees","['binary search', 'trees']","  (0, 69)	0.5375210964097894
  (0, 52)	0.4820395330014557
  (0, 4)	0.48923867362370094
  (0, 3)	0.48923867362370094",565,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6181,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5692,0
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",3366,0
2000.0,"constructive algorithms,dfs and similar,trees","['constructive algorithms', 'dfs and similar', 'trees']","  (0, 69)	0.4144895335980709
  (0, 55)	0.37568187454530827
  (0, 18)	0.37568187454530827
  (0, 17)	0.37568187454530827
  (0, 14)	0.36732719926155916
  (0, 13)	0.36732719926155916
  (0, 2)	0.36732719926155916",6335,3
2000.0,flows,['flows'],"  (0, 26)	1.0",1119,3
3000.0,"dfs and similar,dp,graphs,trees","['dfs and similar', 'dp', 'graphs', 'trees']","  (0, 69)	0.4485155734186616
  (0, 55)	0.4065221380187604
  (0, 32)	0.4331735696593523
  (0, 21)	0.3397259084195246
  (0, 18)	0.4065221380187604
  (0, 17)	0.4065221380187604",3697,5
500.0,implementation,['implementation'],"  (0, 35)	1.0",1730,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2135,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1737,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5789,1
1500.0,"constructive algorithms,math,number theory","['constructive algorithms', 'math', 'number theory']","  (0, 68)	0.4182350129787219
  (0, 43)	0.4182350129787219
  (0, 42)	0.4182350129787219
  (0, 37)	0.3059285086684207
  (0, 14)	0.3566726647501791
  (0, 13)	0.3566726647501791
  (0, 2)	0.3566726647501791",5468,2
1500.0,"brute force,math,number theory","['brute force', 'math', 'number theory']","  (0, 68)	0.43344456504257106
  (0, 43)	0.43344456504257106
  (0, 42)	0.43344456504257106
  (0, 37)	0.31705391767535335
  (0, 27)	0.3345914127170029
  (0, 7)	0.3345914127170029
  (0, 6)	0.3345914127170029",528,2
2000.0,sortings,['sortings'],"  (0, 56)	1.0",2428,3
1500.0,math,['math'],"  (0, 37)	1.0",447,2
1500.0,dp,['dp'],"  (0, 21)	1.0",230,2
3000.0,"dsu,graphs,greedy,implementation","['dsu', 'graphs', 'greedy', 'implementation']","  (0, 35)	0.3571569145130332
  (0, 33)	0.4244622684238549
  (0, 32)	0.5368287314434642
  (0, 22)	0.6356773035092617",3536,5
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3857,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4558,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5727,0
2500.0,"bitmasks,constructive algorithms,data structures,dfs and similar,dp,trees","['bitmasks', 'constructive algorithms', 'data structures', 'dfs and similar', 'dp', 'trees']","  (0, 69)	0.3212977820731998
  (0, 62)	0.25669295541846854
  (0, 55)	0.29121544278499834
  (0, 21)	0.24336541996972869
  (0, 18)	0.29121544278499834
  (0, 17)	0.29121544278499834
  (0, 16)	0.2620827488697707
  (0, 15)	0.2620827488697707
  (0, 14)	0.2847391908630056
  (0, 13)	0.2847391908630056
  (0, 5)	0.3696301894281855
  (0, 2)	0.2847391908630056",733,4
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",3757,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",6439,0
1500.0,"constructive algorithms,dfs and similar,divide and conquer,greedy,trees","['constructive algorithms', 'dfs and similar', 'divide and conquer', 'greedy', 'trees']","  (0, 69)	0.3026295571952751
  (0, 55)	0.2742950789444655
  (0, 33)	0.23109955240235752
  (0, 20)	0.37126321287015135
  (0, 19)	0.37126321287015135
  (0, 18)	0.2742950789444655
  (0, 17)	0.2742950789444655
  (0, 14)	0.26819511386287903
  (0, 13)	0.26819511386287903
  (0, 12)	0.37126321287015135
  (0, 2)	0.26819511386287903",3255,2
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",108,1
500.0,"combinatorics,number theory","['combinatorics', 'number theory']","  (0, 68)	0.4989805785806445
  (0, 43)	0.4989805785806445
  (0, 42)	0.4989805785806445
  (0, 11)	0.5030458692783151",333,0
1750.0,"dp,graphs,greedy,math","['dp', 'graphs', 'greedy', 'math']","  (0, 37)	0.4654182376933567
  (0, 33)	0.4675644864416499
  (0, 32)	0.5913412540919722
  (0, 21)	0.46377239703317813",3724,3
2500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",5763,5
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4732,1
2250.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",5487,4
2500.0,"data structures,hashing,strings","['data structures', 'hashing', 'strings']","  (0, 62)	0.37850249650971574
  (0, 61)	0.4748667181667513
  (0, 34)	0.5766717981653713
  (0, 16)	0.3864499303364985
  (0, 15)	0.3864499303364985",4451,4
250.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3469,1
2000.0,dp,['dp'],"  (0, 21)	1.0",2418,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",346,0
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",513,1
2500.0,"constructive algorithms,dfs and similar,dp","['constructive algorithms', 'dfs and similar', 'dp']","  (0, 55)	0.3902432887690831
  (0, 21)	0.3261218599996181
  (0, 18)	0.3902432887690831
  (0, 17)	0.3902432887690831
  (0, 14)	0.38156478661011134
  (0, 13)	0.38156478661011134
  (0, 2)	0.38156478661011134",1481,4
1500.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",5528,2
1500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",3045,2
2500.0,math,['math'],"  (0, 37)	1.0",3221,4
3000.0,"brute force,data structures,implementation,number theory","['brute force', 'data structures', 'implementation', 'number theory']","  (0, 68)	0.3781447142482483
  (0, 62)	0.2907195092444079
  (0, 43)	0.3781447142482483
  (0, 42)	0.3781447142482483
  (0, 35)	0.2338167867556244
  (0, 27)	0.29190347360650865
  (0, 16)	0.29682375976634706
  (0, 15)	0.29682375976634706
  (0, 7)	0.29190347360650865
  (0, 6)	0.29190347360650865",568,5
2500.0,"brute force,dp,flows,sortings","['brute force', 'dp', 'flows', 'sortings']","  (0, 56)	0.40334208818626005
  (0, 27)	0.35578303107479764
  (0, 26)	0.5871226805556995
  (0, 21)	0.3359425877621441
  (0, 7)	0.35578303107479764
  (0, 6)	0.35578303107479764",1726,4
2500.0,"binary search,data structures,implementation,sortings","['binary search', 'data structures', 'implementation', 'sortings']","  (0, 62)	0.3355179190717274
  (0, 56)	0.3819171118549391
  (0, 52)	0.3766141560144662
  (0, 35)	0.26984677409568764
  (0, 16)	0.34256280380593934
  (0, 15)	0.34256280380593934
  (0, 4)	0.3822387948331835
  (0, 3)	0.3822387948331835",3725,4
500.0,math,['math'],"  (0, 37)	1.0",5182,0
1000.0,math,['math'],"  (0, 37)	1.0",904,1
1500.0,"dfs and similar,dp,greedy,trees","['dfs and similar', 'dp', 'greedy', 'trees']","  (0, 69)	0.4651716581173939
  (0, 55)	0.42161875353010153
  (0, 33)	0.3552229431173043
  (0, 21)	0.35234197760494734
  (0, 18)	0.42161875353010153
  (0, 17)	0.42161875353010153",6020,2
3000.0,"data structures,number theory","['data structures', 'number theory']","  (0, 68)	0.4553294925936493
  (0, 62)	0.35005954504610454
  (0, 43)	0.4553294925936493
  (0, 42)	0.4553294925936493
  (0, 16)	0.3574097609504696
  (0, 15)	0.3574097609504696",6041,5
500.0,implementation,['implementation'],"  (0, 35)	1.0",4218,1
2500.0,"dp,shortest paths","['dp', 'shortest paths']","  (0, 54)	0.5430309031115874
  (0, 53)	0.5430309031115874
  (0, 45)	0.5430309031115874
  (0, 21)	0.33963556173852155",1754,5
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4933,1
3000.0,"combinatorics,math,number theory","['combinatorics', 'math', 'number theory']","  (0, 68)	0.468734267535072
  (0, 43)	0.468734267535072
  (0, 42)	0.468734267535072
  (0, 37)	0.3428674572400869
  (0, 11)	0.47255313572210667",5280,5
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5447,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",1292,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2423,0
1000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",2404,1
2000.0,graphs,['graphs'],"  (0, 32)	1.0",5083,4
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",1744,0
2500.0,"constructive algorithms,greedy,math","['constructive algorithms', 'greedy', 'math']","  (0, 37)	0.4053203601812274
  (0, 33)	0.40718947111252246
  (0, 14)	0.47255057586028626
  (0, 13)	0.47255057586028626
  (0, 2)	0.47255057586028626",2804,2
2500.0,"games,implementation,math","['games', 'implementation', 'math']","  (0, 37)	0.4711020757234185
  (0, 35)	0.3982292073248241
  (0, 28)	0.7870681880768201",3113,4
1750.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",1581,2
2000.0,"data structures,hashing","['data structures', 'hashing']","  (0, 62)	0.4300882608035963
  (0, 34)	0.6552658780707954
  (0, 16)	0.43911884322757494
  (0, 15)	0.43911884322757494",1959,3
2500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",2692,3
1000.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",4596,1
1500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4777,2
1000.0,"binary search,dp,hashing,string suffix structures,strings","['binary search', 'dp', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.34674547329020533
  (0, 63)	0.34674547329020533
  (0, 62)	0.2033001984672017
  (0, 61)	0.25505907870885386
  (0, 60)	0.34674547329020533
  (0, 59)	0.34674547329020533
  (0, 58)	0.34674547329020533
  (0, 52)	0.22820161997645896
  (0, 34)	0.3097403375104257
  (0, 21)	0.1927448226977717
  (0, 4)	0.2316097544549847
  (0, 3)	0.2316097544549847",6347,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5520,1
1000.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",816,1
12.0,dp,['dp'],"  (0, 21)	1.0",1496,14
1000.0,"combinatorics,constructive algorithms,greedy,math","['combinatorics', 'constructive algorithms', 'greedy', 'math']","  (0, 37)	0.3538512059645812
  (0, 33)	0.3554829699273503
  (0, 14)	0.41254426763228785
  (0, 13)	0.41254426763228785
  (0, 11)	0.48769136127294677
  (0, 2)	0.41254426763228785",1380,1
2500.0,"brute force,dp,two pointers","['brute force', 'dp', 'two pointers']","  (0, 46)	0.5699020670961601
  (0, 27)	0.41654032514017686
  (0, 21)	0.3933117167284381
  (0, 7)	0.41654032514017686
  (0, 6)	0.41654032514017686",364,4
1500.0,"graphs,greedy,sortings","['graphs', 'greedy', 'sortings']","  (0, 56)	0.5941282438760824
  (0, 33)	0.49889406788067336
  (0, 32)	0.6309646098333855",1616,2
1500.0,"binary search,data structures,sortings,strings","['binary search', 'data structures', 'sortings', 'strings']","  (0, 62)	0.31926993895651645
  (0, 61)	0.40055394487388357
  (0, 56)	0.36342217824231365
  (0, 52)	0.3583760263343586
  (0, 16)	0.325973664126458
  (0, 15)	0.325973664126458
  (0, 4)	0.3637282832190958
  (0, 3)	0.3637282832190958",887,2
1000.0,probabilities,['probabilities'],"  (0, 47)	1.0",2011,1
1000.0,"binary search,brute force,greedy,two pointers","['binary search', 'brute force', 'greedy', 'two pointers']","  (0, 52)	0.36076109743709617
  (0, 46)	0.4415166090837362
  (0, 33)	0.3071993682351223
  (0, 27)	0.3227036407142854
  (0, 7)	0.3227036407142854
  (0, 6)	0.3227036407142854
  (0, 4)	0.36614897476598185
  (0, 3)	0.36614897476598185",2430,0
500.0,"brute force,implementation,sortings","['brute force', 'implementation', 'sortings']","  (0, 56)	0.5107454681239295
  (0, 35)	0.3608715417013904
  (0, 27)	0.4505222144655873
  (0, 7)	0.4505222144655873
  (0, 6)	0.4505222144655873",1949,1
3000.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",3290,6
1000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",2950,1
2500.0,"constructive algorithms,fft,math","['constructive algorithms', 'fft', 'math']","  (0, 37)	0.3286609775958271
  (0, 25)	0.6719456739234755
  (0, 14)	0.38317575301736817
  (0, 13)	0.38317575301736817
  (0, 2)	0.38317575301736817",6007,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4189,0
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1724,2
500.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",4852,1
1000.0,"binary search,geometry,math","['binary search', 'geometry', 'math']","  (0, 52)	0.4371050670948565
  (0, 37)	0.3705001089796616
  (0, 29)	0.5273026972864807
  (0, 4)	0.44363312263652166
  (0, 3)	0.44363312263652166",2432,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",1973,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2271,4
1000.0,math,['math'],"  (0, 37)	1.0",5647,1
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",3405,0
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1878,1
1750.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",977,3
1000.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",172,1
500.0,strings,['strings'],"  (0, 61)	1.0",3516,0
1000.0,"binary search,bitmasks,brute force","['binary search', 'bitmasks', 'brute force']","  (0, 52)	0.3751269966862282
  (0, 27)	0.3355540506469636
  (0, 7)	0.3355540506469636
  (0, 6)	0.3355540506469636
  (0, 5)	0.48122799512324244
  (0, 4)	0.3807294251499877
  (0, 3)	0.3807294251499877",4474,1
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",3840,1
2000.0,"constructive algorithms,dp,greedy,two pointers","['constructive algorithms', 'dp', 'greedy', 'two pointers']","  (0, 46)	0.5053073297473444
  (0, 33)	0.35158381195467214
  (0, 21)	0.3487323608967659
  (0, 14)	0.40801922591073975
  (0, 13)	0.40801922591073975
  (0, 2)	0.40801922591073975",1982,2
2000.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",3111,3
1000.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",1910,1
2000.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",938,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",6083,0
2500.0,"dfs and similar,dp,implementation,trees","['dfs and similar', 'dp', 'implementation', 'trees']","  (0, 69)	0.47398540065226824
  (0, 55)	0.42960728653000146
  (0, 35)	0.30455988423082575
  (0, 21)	0.3590179034070622
  (0, 18)	0.42960728653000146
  (0, 17)	0.42960728653000146",618,4
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5631,2
1500.0,"combinatorics,constructive algorithms,math","['combinatorics', 'constructive algorithms', 'math']","  (0, 37)	0.3785789380815557
  (0, 14)	0.4413735720530441
  (0, 13)	0.4413735720530441
  (0, 11)	0.5217720741094241
  (0, 2)	0.4413735720530441",5111,2
2000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1918,3
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",4004,1
3500.0,"data structures,string suffix structures","['data structures', 'string suffix structures']","  (0, 64)	0.38627136634781206
  (0, 63)	0.38627136634781206
  (0, 62)	0.3834548454759982
  (0, 60)	0.38627136634781206
  (0, 59)	0.38627136634781206
  (0, 58)	0.38627136634781206
  (0, 16)	0.2312299063485842
  (0, 15)	0.2312299063485842",3436,5
2500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",3973,5
500.0,math,['math'],"  (0, 37)	1.0",4871,0
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5923,3
500.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",882,0
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1453,1
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",5474,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3422,0
2500.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",750,4
1000.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",4770,1
2500.0,"data structures,dfs and similar,dp,graphs,trees","['data structures', 'dfs and similar', 'dp', 'graphs', 'trees']","  (0, 69)	0.3795939942176779
  (0, 62)	0.303267279363409
  (0, 55)	0.34405352066651523
  (0, 32)	0.3666095342982389
  (0, 21)	0.28752159826526724
  (0, 18)	0.34405352066651523
  (0, 17)	0.34405352066651523
  (0, 16)	0.3096349959750411
  (0, 15)	0.3096349959750411",6044,4
1000.0,sortings,['sortings'],"  (0, 56)	1.0",3080,1
1500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",2086,2
2500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",2871,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",715,1
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",2053,0
1000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",3924,1
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",3161,0
500.0,"brute force,implementation,strings","['brute force', 'implementation', 'strings']","  (0, 61)	0.5477926738161532
  (0, 35)	0.35116784840874854
  (0, 27)	0.4384078499743209
  (0, 7)	0.4384078499743209
  (0, 6)	0.4384078499743209",4021,0
500.0,"brute force,greedy,math","['brute force', 'greedy', 'math']","  (0, 37)	0.4323253151547875
  (0, 33)	0.43431895784293195
  (0, 27)	0.4562389230562364
  (0, 7)	0.4562389230562364
  (0, 6)	0.4562389230562364",5459,0
500.0,math,['math'],"  (0, 37)	1.0",3670,0
2000.0,"dp,graphs,implementation,shortest paths","['dp', 'graphs', 'implementation', 'shortest paths']","  (0, 54)	0.4817574558784093
  (0, 53)	0.4817574558784093
  (0, 45)	0.4817574558784093
  (0, 35)	0.25560753294931854
  (0, 32)	0.384193787337607
  (0, 21)	0.3013124358327023",229,3
1000.0,greedy,['greedy'],"  (0, 33)	1.0",6,1
2000.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",6399,3
1000.0,two pointers,['two pointers'],"  (0, 46)	1.0",5562,1
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",4211,1
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4631,0
1000.0,"brute force,dfs and similar,dp,strings","['brute force', 'dfs and similar', 'dp', 'strings']","  (0, 61)	0.41010857492075425
  (0, 55)	0.37084832097285303
  (0, 27)	0.3282169097562305
  (0, 21)	0.3099137068952043
  (0, 18)	0.37084832097285303
  (0, 17)	0.37084832097285303
  (0, 7)	0.3282169097562305
  (0, 6)	0.3282169097562305",2215,1
750.0,"brute force,dp,implementation","['brute force', 'dp', 'implementation']","  (0, 35)	0.3762135261786677
  (0, 27)	0.4696755807532483
  (0, 21)	0.4434838545567469
  (0, 7)	0.4696755807532483
  (0, 6)	0.4696755807532483",5159,0
1000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",203,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4774,1
1750.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",1391,2
2000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4000,3
1500.0,"bitmasks,shortest paths","['bitmasks', 'shortest paths']","  (0, 54)	0.5062145870176533
  (0, 53)	0.5062145870176533
  (0, 45)	0.5062145870176533
  (0, 5)	0.4808745945375363",4399,2
2500.0,"brute force,math,matrices","['brute force', 'math', 'matrices']","  (0, 38)	0.642786462357257
  (0, 37)	0.3676685629086662
  (0, 27)	0.3880057523881652
  (0, 7)	0.3880057523881652
  (0, 6)	0.3880057523881652",1025,4
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1064,2
1000.0,"constructive algorithms,graph matchings,greedy,math","['constructive algorithms', 'graph matchings', 'greedy', 'math']","  (0, 37)	0.24237166955071227
  (0, 36)	0.46275451702327686
  (0, 33)	0.24348935220744067
  (0, 31)	0.46275451702327686
  (0, 30)	0.46275451702327686
  (0, 14)	0.2825736954521554
  (0, 13)	0.2825736954521554
  (0, 2)	0.2825736954521554",1924,1
1000.0,"brute force,implementation,two pointers","['brute force', 'implementation', 'two pointers']","  (0, 46)	0.5826776578799998
  (0, 35)	0.3411313321338572
  (0, 27)	0.4258779798815845
  (0, 7)	0.4258779798815845
  (0, 6)	0.4258779798815845",3930,1
1000.0,"dfs and similar,dsu,math,number theory","['dfs and similar', 'dsu', 'math', 'number theory']","  (0, 68)	0.37720035777288025
  (0, 55)	0.3289945395011216
  (0, 43)	0.37720035777288025
  (0, 42)	0.37720035777288025
  (0, 37)	0.2759126790958625
  (0, 22)	0.41511401173353774
  (0, 18)	0.3289945395011216
  (0, 17)	0.3289945395011216",3899,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4601,0
500.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",4489,4
2500.0,"data structures,geometry","['data structures', 'geometry']","  (0, 62)	0.45090386319704645
  (0, 29)	0.610575014624812
  (0, 16)	0.46037151175430574
  (0, 15)	0.46037151175430574",1036,4
500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",3866,0
3000.0,"data structures,divide and conquer,dsu,trees","['data structures', 'divide and conquer', 'dsu', 'trees']","  (0, 69)	0.33725416010898157
  (0, 62)	0.2694409109423134
  (0, 22)	0.38569383067148716
  (0, 20)	0.4137403636191812
  (0, 19)	0.4137403636191812
  (0, 16)	0.27509837378519625
  (0, 15)	0.27509837378519625
  (0, 12)	0.4137403636191812",946,4
1500.0,"graphs,hashing,sortings","['graphs', 'hashing', 'sortings']","  (0, 56)	0.5051194214254642
  (0, 34)	0.6760839621660627
  (0, 32)	0.5364371782423752",5165,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",3582,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5870,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4528,0
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",4658,1
1500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",999,2
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5594,1
2000.0,math,['math'],"  (0, 37)	1.0",6354,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",4085,0
750.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1466,1
1000.0,"bitmasks,greedy","['bitmasks', 'greedy']","  (0, 33)	0.553037490281613
  (0, 5)	0.8331563684825406",2932,1
2500.0,"dp,greedy,strings","['dp', 'greedy', 'strings']","  (0, 61)	0.6817561626665942
  (0, 33)	0.5194067959652529
  (0, 21)	0.5151942497458901",2649,4
1000.0,"brute force,constructive algorithms,geometry","['brute force', 'constructive algorithms', 'geometry']","  (0, 29)	0.46311111627118556
  (0, 27)	0.3433959901528604
  (0, 14)	0.3793703888580245
  (0, 13)	0.3793703888580245
  (0, 7)	0.3433959901528604
  (0, 6)	0.3433959901528604
  (0, 2)	0.3793703888580245",1248,1
2250.0,"data structures,divide and conquer,implementation,trees","['data structures', 'divide and conquer', 'implementation', 'trees']","  (0, 69)	0.35585303366670834
  (0, 62)	0.28430002322806086
  (0, 35)	0.22865379099773372
  (0, 20)	0.4365572940499116
  (0, 19)	0.4365572940499116
  (0, 16)	0.29026948351535864
  (0, 15)	0.29026948351535864
  (0, 12)	0.4365572940499116",4717,3
3500.0,"flows,graph matchings","['flows', 'graph matchings']","  (0, 36)	0.5108440917899533
  (0, 31)	0.5108440917899533
  (0, 30)	0.5108440917899533
  (0, 26)	0.4659559438937262",382,6
500.0,math,['math'],"  (0, 37)	1.0",6256,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",3011,1
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",579,1
2000.0,dp,['dp'],"  (0, 21)	1.0",852,3
2000.0,"dfs and similar,expression parsing","['dfs and similar', 'expression parsing']","  (0, 55)	0.30442119587333144
  (0, 44)	0.49057218514341394
  (0, 24)	0.49057218514341394
  (0, 23)	0.49057218514341394
  (0, 18)	0.30442119587333144
  (0, 17)	0.30442119587333144",5019,4
3000.0,"dp,fft","['dp', 'fft']","  (0, 25)	0.8989157998227854
  (0, 21)	0.43812142703702817",2631,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3334,0
1500.0,"binary search,data structures,greedy","['binary search', 'data structures', 'greedy']","  (0, 62)	0.3568189411645963
  (0, 52)	0.4005242544078587
  (0, 33)	0.3410589411969274
  (0, 16)	0.3643110844112011
  (0, 15)	0.3643110844112011
  (0, 4)	0.40650598460361304
  (0, 3)	0.40650598460361304",5013,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",6286,0
2500.0,"math,probabilities,sortings","['math', 'probabilities', 'sortings']","  (0, 56)	0.5352773415095499
  (0, 47)	0.7164492406255544
  (0, 37)	0.44741329134653035",1556,4
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",1605,1
2750.0,"data structures,math,two pointers","['data structures', 'math', 'two pointers']","  (0, 62)	0.4124874013015429
  (0, 46)	0.5666552999030529
  (0, 37)	0.3924588327579973
  (0, 16)	0.42114841769233297
  (0, 15)	0.42114841769233297",3215,4
1750.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",3322,2
500.0,"binary search,math,two pointers","['binary search', 'math', 'two pointers']","  (0, 52)	0.43534042961524294
  (0, 46)	0.5327903469810614
  (0, 37)	0.3690043624698996
  (0, 4)	0.44184213073472217
  (0, 3)	0.44184213073472217",1027,0
1500.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",5032,2
1500.0,"data structures,greedy,trees","['data structures', 'greedy', 'trees']","  (0, 69)	0.5305835094594386
  (0, 62)	0.4238966365115371
  (0, 33)	0.40517394495286485
  (0, 16)	0.43279721312367775
  (0, 15)	0.43279721312367775",2327,2
1500.0,implementation,['implementation'],"  (0, 35)	1.0",551,1
500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4997,0
2500.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",2058,3
2000.0,"dsu,implementation","['dsu', 'implementation']","  (0, 35)	0.48983239404811424
  (0, 22)	0.8718166239187534",5456,3
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1358,2
1000.0,"constructive algorithms,dp,greedy,implementation","['constructive algorithms', 'dp', 'greedy', 'implementation']","  (0, 35)	0.3242944651373064
  (0, 33)	0.3854069702028931
  (0, 21)	0.382281203101161
  (0, 14)	0.44727159867946886
  (0, 13)	0.44727159867946886
  (0, 2)	0.44727159867946886",1873,1
500.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",1213,0
500.0,"implementation,two pointers","['implementation', 'two pointers']","  (0, 46)	0.862981066565313
  (0, 35)	0.5052362603275765",17,0
2500.0,dsu,['dsu'],"  (0, 22)	1.0",2629,4
70.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5685,14
1500.0,"binary search,greedy,implementation,math,sortings","['binary search', 'greedy', 'implementation', 'math', 'sortings']","  (0, 56)	0.41243591906631694
  (0, 52)	0.4067092066516497
  (0, 37)	0.34473589242278785
  (0, 35)	0.2914100961349644
  (0, 33)	0.3463256216548676
  (0, 4)	0.41278330757199516
  (0, 3)	0.41278330757199516",5107,2
2500.0,"bitmasks,games","['bitmasks', 'games']","  (0, 28)	0.741121803834302
  (0, 5)	0.6713705920588048",3200,4
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",5932,0
2500.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",5093,4
1500.0,"constructive algorithms,data structures,greedy,sortings,trees","['constructive algorithms', 'data structures', 'greedy', 'sortings', 'trees']","  (0, 69)	0.3853193585387535
  (0, 62)	0.30784141827884515
  (0, 56)	0.350413193142303
  (0, 33)	0.2942446604209607
  (0, 16)	0.3143051782896098
  (0, 15)	0.3143051782896098
  (0, 14)	0.3414761274299149
  (0, 13)	0.3414761274299149
  (0, 2)	0.3414761274299149",3687,2
2000.0,"brute force,probabilities","['brute force', 'probabilities']","  (0, 47)	0.6589564075811242
  (0, 27)	0.4342719781073375
  (0, 7)	0.4342719781073375
  (0, 6)	0.4342719781073375",1415,3
1500.0,"constructive algorithms,geometry","['constructive algorithms', 'geometry']","  (0, 29)	0.5760883600361106
  (0, 14)	0.4719188494613965
  (0, 13)	0.4719188494613965
  (0, 2)	0.4719188494613965",4441,1
1000.0,"dfs and similar,dp,graph matchings,greedy,sortings,two pointers","['dfs and similar', 'dp', 'graph matchings', 'greedy', 'sortings', 'two pointers']","  (0, 56)	0.26283257521538167
  (0, 55)	0.26195472927031493
  (0, 46)	0.3172006430862632
  (0, 36)	0.4194478997315448
  (0, 33)	0.22070254018777757
  (0, 31)	0.4194478997315448
  (0, 30)	0.4194478997315448
  (0, 21)	0.2189125758313351
  (0, 18)	0.26195472927031493
  (0, 17)	0.26195472927031493",3407,1
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",4750,1
70.0,"data structures,sortings","['data structures', 'sortings']","  (0, 62)	0.4777870182358637
  (0, 56)	0.5438607827303986
  (0, 16)	0.48781913360033374
  (0, 15)	0.48781913360033374",4364,14
1500.0,"implementation,math,sortings","['implementation', 'math', 'sortings']","  (0, 56)	0.6745256301510891
  (0, 37)	0.5638044222690247
  (0, 35)	0.4765918040621001",145,2
2000.0,"chinese remainder theorem,math,number theory","['chinese remainder theorem', 'math', 'number theory']","  (0, 68)	0.21124100651991157
  (0, 67)	0.3746678619732898
  (0, 49)	0.3746678619732898
  (0, 48)	0.3746678619732898
  (0, 43)	0.21124100651991157
  (0, 42)	0.21124100651991157
  (0, 37)	0.1545175417858679
  (0, 10)	0.3746678619732898
  (0, 9)	0.3746678619732898
  (0, 8)	0.3746678619732898",6200,3
2000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",494,2
2500.0,"math,two pointers","['math', 'two pointers']","  (0, 46)	0.8220842158403352
  (0, 37)	0.5693659122797756",4972,4
2000.0,"brute force,greedy,math","['brute force', 'greedy', 'math']","  (0, 37)	0.4323253151547875
  (0, 33)	0.43431895784293195
  (0, 27)	0.4562389230562364
  (0, 7)	0.4562389230562364
  (0, 6)	0.4562389230562364",3902,3
2000.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",769,3
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",4897,0
2000.0,"data structures,divide and conquer,dp","['data structures', 'divide and conquer', 'dp']","  (0, 62)	0.30072665844050306
  (0, 21)	0.2851128867488997
  (0, 20)	0.4617812364796882
  (0, 19)	0.4617812364796882
  (0, 16)	0.3070410295211283
  (0, 15)	0.3070410295211283
  (0, 12)	0.4617812364796882",1220,3
2500.0,"greedy,implementation,math,ternary search","['greedy', 'implementation', 'math', 'ternary search']","  (0, 66)	0.5722662104226877
  (0, 65)	0.5722662104226877
  (0, 52)	0.3415873091732221
  (0, 37)	0.2895371040100152
  (0, 35)	0.24474978430943442
  (0, 33)	0.2908722872854832",4140,4
2000.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",989,3
500.0,"brute force,geometry,implementation","['brute force', 'geometry', 'implementation']","  (0, 35)	0.3427871435501305
  (0, 29)	0.5771358952904511
  (0, 27)	0.4279451415715304
  (0, 7)	0.4279451415715304
  (0, 6)	0.4279451415715304",4338,0
2000.0,dp,['dp'],"  (0, 21)	1.0",5064,3
2000.0,"constructive algorithms,dfs and similar,graphs","['constructive algorithms', 'dfs and similar', 'graphs']","  (0, 55)	0.3778708596869703
  (0, 32)	0.40264392477759575
  (0, 18)	0.3778708596869703
  (0, 17)	0.3778708596869703
  (0, 14)	0.36946750422645813
  (0, 13)	0.36946750422645813
  (0, 2)	0.36946750422645813",138,3
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",160,2
500.0,"greedy,implementation,two pointers","['greedy', 'implementation', 'two pointers']","  (0, 46)	0.7398542788524585
  (0, 35)	0.4331511124832791
  (0, 33)	0.5147773886042455",3885,0
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",6105,2
1250.0,implementation,['implementation'],"  (0, 35)	1.0",296,2
500.0,"dp,greedy,math","['dp', 'greedy', 'math']","  (0, 37)	0.5771402159408785
  (0, 33)	0.5798016640014267
  (0, 21)	0.5750992971347582",3794,0
500.0,"dfs and similar,graphs,implementation","['dfs and similar', 'graphs', 'implementation']","  (0, 55)	0.4643387440546784
  (0, 35)	0.32918192630167115
  (0, 32)	0.4947806096700768
  (0, 18)	0.4643387440546784
  (0, 17)	0.4643387440546784",5779,0
2000.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",437,3
2250.0,"combinatorics,dp,trees","['combinatorics', 'dp', 'trees']","  (0, 69)	0.6118431370042294
  (0, 21)	0.46343756571188216
  (0, 11)	0.6409942264855969",4791,3
1000.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",4236,1
2500.0,"binary search,dfs and similar,divide and conquer,trees","['binary search', 'dfs and similar', 'divide and conquer', 'trees']","  (0, 69)	0.30948274549382737
  (0, 55)	0.28050661969016905
  (0, 52)	0.2775387219334746
  (0, 20)	0.37967064250030763
  (0, 19)	0.37967064250030763
  (0, 18)	0.28050661969016905
  (0, 17)	0.28050661969016905
  (0, 12)	0.37967064250030763
  (0, 4)	0.2816836937677894
  (0, 3)	0.2816836937677894",27,4
1000.0,"hashing,implementation,math","['hashing', 'implementation', 'math']","  (0, 37)	0.4834381160619552
  (0, 35)	0.4086570356420711
  (0, 34)	0.774136302700437",5734,2
500.0,"dp,math,number theory","['dp', 'math', 'number theory']","  (0, 68)	0.4959049743237831
  (0, 43)	0.4959049743237831
  (0, 42)	0.4959049743237831
  (0, 37)	0.3627421534022664
  (0, 21)	0.3614594022402384",3896,5
3250.0,greedy,['greedy'],"  (0, 33)	1.0",3423,5
1000.0,"constructive algorithms,geometry","['constructive algorithms', 'geometry']","  (0, 29)	0.5760883600361106
  (0, 14)	0.4719188494613965
  (0, 13)	0.4719188494613965
  (0, 2)	0.4719188494613965",136,1
1500.0,greedy,['greedy'],"  (0, 33)	1.0",3938,2
1500.0,"implementation,number theory,sortings","['implementation', 'number theory', 'sortings']","  (0, 68)	0.49098901168012227
  (0, 56)	0.4296762145901645
  (0, 43)	0.49098901168012227
  (0, 42)	0.49098901168012227
  (0, 35)	0.30359137313763923",2858,2
6.0,flows,['flows'],"  (0, 26)	1.0",1053,14
750.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4478,0
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",6437,2
2500.0,"data structures,divide and conquer,trees","['data structures', 'divide and conquer', 'trees']","  (0, 69)	0.36553690922114707
  (0, 62)	0.29203671726912717
  (0, 20)	0.44843738528982896
  (0, 19)	0.44843738528982896
  (0, 16)	0.2981686252668005
  (0, 15)	0.2981686252668005
  (0, 12)	0.44843738528982896",5127,4
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",6402,2
1000.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",5448,1
50.0,greedy,['greedy'],"  (0, 33)	1.0",2855,14
1500.0,geometry,['geometry'],"  (0, 29)	1.0",2054,2
1500.0,"brute force,dp,greedy,math,meet-in-the-middle","['brute force', 'dp', 'greedy', 'math', 'meet-in-the-middle']","  (0, 41)	0.4736083031693313
  (0, 40)	0.4736083031693313
  (0, 39)	0.4736083031693313
  (0, 37)	0.2270778989808043
  (0, 33)	0.22812505531672275
  (0, 27)	0.23963846772142397
  (0, 21)	0.2262748921175091
  (0, 7)	0.23963846772142397
  (0, 6)	0.23963846772142397",3847,2
1500.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",478,2
1000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",1882,1
500.0,"dp,graph matchings,greedy","['dp', 'graph matchings', 'greedy']","  (0, 36)	0.5308013135089618
  (0, 33)	0.27929380097364803
  (0, 31)	0.5308013135089618
  (0, 30)	0.5308013135089618
  (0, 21)	0.2770286437702338",1428,0
1000.0,"dfs and similar,divide and conquer,dp,trees","['dfs and similar', 'divide and conquer', 'dp', 'trees']","  (0, 69)	0.3419267206216833
  (0, 55)	0.30991294338651965
  (0, 21)	0.2589907077043251
  (0, 20)	0.419472618737793
  (0, 19)	0.419472618737793
  (0, 18)	0.30991294338651965
  (0, 17)	0.30991294338651965
  (0, 12)	0.419472618737793",4652,1
2500.0,strings,['strings'],"  (0, 61)	1.0",1389,4
2500.0,"math,matrices","['math', 'matrices']","  (0, 38)	0.8680324737481504
  (0, 37)	0.49650742644865503",2501,4
2500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",2203,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",342,0
500.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",713,0
2000.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",5586,3
1000.0,"data structures,dsu","['data structures', 'dsu']","  (0, 62)	0.44134103236819244
  (0, 22)	0.6317619429480074
  (0, 16)	0.4506078897393701
  (0, 15)	0.4506078897393701",458,3
2500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",162,4
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",3249,1
2250.0,math,['math'],"  (0, 37)	1.0",1128,4
30.0,flows,['flows'],"  (0, 26)	1.0",5003,14
1500.0,"binary search,dp,two pointers","['binary search', 'dp', 'two pointers']","  (0, 52)	0.4355498317399732
  (0, 46)	0.533046623272221
  (0, 21)	0.3678763327947699
  (0, 4)	0.4420546602281417
  (0, 3)	0.4420546602281417",5672,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",2810,0
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1727,0
2500.0,"string suffix structures,strings","['string suffix structures', 'strings']","  (0, 64)	0.41222353058540717
  (0, 63)	0.41222353058540717
  (0, 62)	0.24169061180713372
  (0, 61)	0.30322343630201615
  (0, 60)	0.41222353058540717
  (0, 59)	0.41222353058540717
  (0, 58)	0.41222353058540717",4359,4
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",5378,0
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",6275,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5844,1
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2301,1
1500.0,dp,['dp'],"  (0, 21)	1.0",6223,2
1500.0,sortings,['sortings'],"  (0, 56)	1.0",5568,2
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1218,0
2000.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",655,3
750.0,"combinatorics,implementation,math","['combinatorics', 'implementation', 'math']","  (0, 37)	0.5260173654138973
  (0, 35)	0.4446498736949964
  (0, 11)	0.7249773935137882",3571,0
1500.0,"binary search,graphs,greedy","['binary search', 'graphs', 'greedy']","  (0, 52)	0.44968823712077544
  (0, 33)	0.3829236115747082
  (0, 32)	0.48429368623203556
  (0, 4)	0.45640421917943425
  (0, 3)	0.45640421917943425",5303,3
2000.0,"dfs and similar,dsu,shortest paths,trees","['dfs and similar', 'dsu', 'shortest paths', 'trees']","  (0, 69)	0.3301866626475017
  (0, 55)	0.29927207883024354
  (0, 54)	0.3998729773709967
  (0, 53)	0.3998729773709967
  (0, 45)	0.3998729773709967
  (0, 22)	0.37761123157679155
  (0, 18)	0.29927207883024354
  (0, 17)	0.29927207883024354",4260,3
2500.0,dp,['dp'],"  (0, 21)	1.0",2133,3
2500.0,greedy,['greedy'],"  (0, 33)	1.0",2005,4
1000.0,"binary search,graphs,shortest paths","['binary search', 'graphs', 'shortest paths']","  (0, 54)	0.4337996911521126
  (0, 53)	0.4337996911521126
  (0, 52)	0.321228338857916
  (0, 45)	0.4337996911521126
  (0, 32)	0.34594824481902453
  (0, 4)	0.3260258042626496
  (0, 3)	0.3260258042626496",1723,1
1500.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",5299,2
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",4034,2
2500.0,"dfs and similar,dp,probabilities,trees","['dfs and similar', 'dp', 'probabilities', 'trees']","  (0, 69)	0.4256336389990484
  (0, 55)	0.3857825841357933
  (0, 47)	0.518086327671802
  (0, 21)	0.3223941000770684
  (0, 18)	0.3857825841357933
  (0, 17)	0.3857825841357933",5829,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4115,0
500.0,"greedy,implementation,math,number theory","['greedy', 'implementation', 'math', 'number theory']","  (0, 68)	0.47365259276793936
  (0, 43)	0.47365259276793936
  (0, 42)	0.47365259276793936
  (0, 37)	0.34646508980776936
  (0, 35)	0.29287181099340964
  (0, 33)	0.3480627931315853",598,0
3000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",5986,4
2500.0,"brute force,dfs and similar,divide and conquer,flows,greedy","['brute force', 'dfs and similar', 'divide and conquer', 'flows', 'greedy']","  (0, 55)	0.27028108359703534
  (0, 33)	0.22771767427422648
  (0, 27)	0.23921052626331882
  (0, 26)	0.3947516130057726
  (0, 20)	0.3658301995807132
  (0, 19)	0.3658301995807132
  (0, 18)	0.27028108359703534
  (0, 17)	0.27028108359703534
  (0, 12)	0.3658301995807132
  (0, 7)	0.23921052626331882
  (0, 6)	0.23921052626331882",1158,4
1500.0,"binary search,brute force,data structures,dp,implementation,math,number theory","['binary search', 'brute force', 'data structures', 'dp', 'implementation', 'math', 'number theory']","  (0, 68)	0.3110055156640669
  (0, 62)	0.23910256438704244
  (0, 52)	0.26838927332602375
  (0, 43)	0.3110055156640669
  (0, 42)	0.3110055156640669
  (0, 37)	0.22749279864716096
  (0, 35)	0.19230286077226316
  (0, 27)	0.24007631711473834
  (0, 21)	0.22668832459009147
  (0, 16)	0.2441230116121014
  (0, 15)	0.2441230116121014
  (0, 7)	0.24007631711473834
  (0, 6)	0.24007631711473834
  (0, 4)	0.2723976004193338
  (0, 3)	0.2723976004193338",1880,2
1250.0,"geometry,implementation,math","['geometry', 'implementation', 'math']","  (0, 37)	0.5170802635289932
  (0, 35)	0.43709521583461364
  (0, 29)	0.7359183197633277",6366,3
500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",171,0
1750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",267,4
2000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",467,3
2000.0,"dfs and similar,divide and conquer,dp,trees","['dfs and similar', 'divide and conquer', 'dp', 'trees']","  (0, 69)	0.3419267206216833
  (0, 55)	0.30991294338651965
  (0, 21)	0.2589907077043251
  (0, 20)	0.419472618737793
  (0, 19)	0.419472618737793
  (0, 18)	0.30991294338651965
  (0, 17)	0.30991294338651965
  (0, 12)	0.419472618737793",5750,3
1500.0,"combinatorics,graphs,matrices","['combinatorics', 'graphs', 'matrices']","  (0, 38)	0.6820504846367894
  (0, 32)	0.49567963753377864
  (0, 11)	0.5376884165956177",314,2
500.0,"binary search,brute force,implementation,math","['binary search', 'brute force', 'implementation', 'math']","  (0, 52)	0.3865511371824396
  (0, 37)	0.327649458296548
  (0, 35)	0.2769666931683107
  (0, 27)	0.34577303422459765
  (0, 7)	0.34577303422459765
  (0, 6)	0.34577303422459765
  (0, 4)	0.39232418234522465
  (0, 3)	0.39232418234522465",2601,0
2500.0,"constructive algorithms,data structures,graphs,sortings","['constructive algorithms', 'data structures', 'graphs', 'sortings']","  (0, 62)	0.323875594542836
  (0, 56)	0.3686647557016406
  (0, 32)	0.3915222279672039
  (0, 16)	0.3306760248688564
  (0, 15)	0.3306760248688564
  (0, 14)	0.3592621954897907
  (0, 13)	0.3592621954897907
  (0, 2)	0.3592621954897907",1130,4
500.0,strings,['strings'],"  (0, 61)	1.0",4976,0
1000.0,"binary search,greedy,math","['binary search', 'greedy', 'math']","  (0, 52)	0.4712079821500611
  (0, 37)	0.39940650859761767
  (0, 33)	0.40124834815119054
  (0, 4)	0.4782453562523476
  (0, 3)	0.4782453562523476",5745,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1309,1
2000.0,"data structures,dp,matrices,strings","['data structures', 'dp', 'matrices', 'strings']","  (0, 62)	0.34659202127515476
  (0, 61)	0.4348320478818529
  (0, 38)	0.576517114513577
  (0, 21)	0.3285969132977479
  (0, 16)	0.35386942942800814
  (0, 15)	0.35386942942800814",370,3
2000.0,"combinatorics,constructive algorithms,math","['combinatorics', 'constructive algorithms', 'math']","  (0, 37)	0.3785789380815557
  (0, 14)	0.4413735720530441
  (0, 13)	0.4413735720530441
  (0, 11)	0.5217720741094241
  (0, 2)	0.4413735720530441",3985,2
2000.0,"binary search,data structures,hashing","['binary search', 'data structures', 'hashing']","  (0, 62)	0.32858729771072076
  (0, 52)	0.3688346307904398
  (0, 34)	0.5006229273847804
  (0, 16)	0.3354866598786273
  (0, 15)	0.3354866598786273
  (0, 4)	0.3743430843334115
  (0, 3)	0.3743430843334115",5026,3
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4786,2
2000.0,"bitmasks,brute force,constructive algorithms,implementation,math","['bitmasks', 'brute force', 'constructive algorithms', 'implementation', 'math']","  (0, 37)	0.2958641518421599
  (0, 35)	0.25009812678708565
  (0, 27)	0.3122295578714483
  (0, 14)	0.34493893982260215
  (0, 13)	0.34493893982260215
  (0, 7)	0.3122295578714483
  (0, 6)	0.3122295578714483
  (0, 5)	0.44777764971991135
  (0, 2)	0.34493893982260215",4918,3
1000.0,greedy,['greedy'],"  (0, 33)	1.0",1988,1
1750.0,"bitmasks,number theory","['bitmasks', 'number theory']","  (0, 68)	0.48647125722749707
  (0, 43)	0.48647125722749707
  (0, 42)	0.48647125722749707
  (0, 5)	0.5385509703588838",5370,2
3000.0,"brute force,dfs and similar,implementation,number theory","['brute force', 'dfs and similar', 'implementation', 'number theory']","  (0, 68)	0.36631790843236633
  (0, 55)	0.31950285600812134
  (0, 43)	0.36631790843236633
  (0, 42)	0.36631790843236633
  (0, 35)	0.22650396277777327
  (0, 27)	0.2827739378249792
  (0, 18)	0.31950285600812134
  (0, 17)	0.31950285600812134
  (0, 7)	0.2827739378249792
  (0, 6)	0.2827739378249792",3732,4
500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",23,0
1000.0,"dfs and similar,dsu,greedy","['dfs and similar', 'dsu', 'greedy']","  (0, 55)	0.43429459421761624
  (0, 33)	0.36590261378613653
  (0, 22)	0.547978004599219
  (0, 18)	0.43429459421761624
  (0, 17)	0.43429459421761624",2407,1
3000.0,"combinatorics,divide and conquer,fft,number theory","['combinatorics', 'divide and conquer', 'fft', 'number theory']","  (0, 68)	0.30958279905938896
  (0, 43)	0.30958279905938896
  (0, 42)	0.30958279905938896
  (0, 25)	0.46298018515776423
  (0, 20)	0.365474700540692
  (0, 19)	0.365474700540692
  (0, 12)	0.365474700540692
  (0, 11)	0.31210502963749054",5684,4
1500.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",6203,2
2500.0,"dfs and similar,trees","['dfs and similar', 'trees']","  (0, 69)	0.5372515306095824
  (0, 55)	0.4869499607617676
  (0, 18)	0.4869499607617676
  (0, 17)	0.4869499607617676",3545,5
2500.0,"data structures,math,probabilities","['data structures', 'math', 'probabilities']","  (0, 62)	0.39805095372316535
  (0, 47)	0.6064550732470178
  (0, 37)	0.3787233553884953
  (0, 16)	0.4064088473792814
  (0, 15)	0.4064088473792814",577,4
2000.0,"dfs and similar,dp,dsu","['dfs and similar', 'dp', 'dsu']","  (0, 55)	0.43476502202377254
  (0, 22)	0.548571574249769
  (0, 21)	0.3633281640598981
  (0, 18)	0.43476502202377254
  (0, 17)	0.43476502202377254",6232,3
1000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",3566,5
1500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1412,2
2000.0,"dfs and similar,divide and conquer,graphs,sortings,trees","['dfs and similar', 'divide and conquer', 'graphs', 'sortings', 'trees']","  (0, 69)	0.3204311131242223
  (0, 56)	0.2914031881445384
  (0, 55)	0.29042991796719236
  (0, 32)	0.30947038927537024
  (0, 20)	0.39310200122090067
  (0, 19)	0.39310200122090067
  (0, 18)	0.29042991796719236
  (0, 17)	0.29042991796719236
  (0, 12)	0.39310200122090067",4802,3
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",464,0
2750.0,"data structures,dp,dsu","['data structures', 'dp', 'dsu']","  (0, 62)	0.4071368824202538
  (0, 22)	0.5828000775351234
  (0, 21)	0.3859982764772137
  (0, 16)	0.4156855537270877
  (0, 15)	0.4156855537270877",1534,4
500.0,"constructive algorithms,number theory","['constructive algorithms', 'number theory']","  (0, 68)	0.4392973494418518
  (0, 43)	0.4392973494418518
  (0, 42)	0.4392973494418518
  (0, 14)	0.37463471823457156
  (0, 13)	0.37463471823457156
  (0, 2)	0.37463471823457156",3064,0
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",4865,1
750.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",1062,0
1500.0,"brute force,dfs and similar,shortest paths","['brute force', 'dfs and similar', 'shortest paths']","  (0, 55)	0.30562592066726796
  (0, 54)	0.4083626756517259
  (0, 53)	0.4083626756517259
  (0, 45)	0.4083626756517259
  (0, 27)	0.2704922458854994
  (0, 18)	0.30562592066726796
  (0, 17)	0.30562592066726796
  (0, 7)	0.2704922458854994
  (0, 6)	0.2704922458854994",4737,2
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",93,2
500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",4663,0
500.0,"dp,implementation,math","['dp', 'implementation', 'math']","  (0, 37)	0.6077375925301162
  (0, 35)	0.5137291304928426
  (0, 21)	0.6055884733949006",2252,0
3500.0,"dp,matrices,probabilities","['dp', 'matrices', 'probabilities']","  (0, 47)	0.6226685801482573
  (0, 38)	0.6798148241341037
  (0, 21)	0.3874734109376679",4718,6
1500.0,"greedy,shortest paths","['greedy', 'shortest paths']","  (0, 54)	0.542517356308492
  (0, 53)	0.542517356308492
  (0, 45)	0.542517356308492
  (0, 33)	0.3420888105626",773,2
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",218,1
2500.0,"data structures,dfs and similar,dp,strings,trees","['data structures', 'dfs and similar', 'dp', 'strings', 'trees']","  (0, 69)	0.3776427916679872
  (0, 62)	0.3017084141080427
  (0, 61)	0.37852137243988776
  (0, 55)	0.34228500452300215
  (0, 21)	0.2860436695198914
  (0, 18)	0.34228500452300215
  (0, 17)	0.34228500452300215
  (0, 16)	0.308043399156274
  (0, 15)	0.308043399156274",227,4
500.0,"brute force,constructive algorithms,strings","['brute force', 'constructive algorithms', 'strings']","  (0, 61)	0.4357419180035313
  (0, 27)	0.34873171282996784
  (0, 14)	0.3852650854907713
  (0, 13)	0.3852650854907713
  (0, 7)	0.34873171282996784
  (0, 6)	0.34873171282996784
  (0, 2)	0.3852650854907713",6039,0
1500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",459,2
3000.0,"data structures,greedy,sortings","['data structures', 'greedy', 'sortings']","  (0, 62)	0.43461045807336557
  (0, 56)	0.494713282046338
  (0, 33)	0.41541455781417724
  (0, 16)	0.44373599327542246
  (0, 15)	0.44373599327542246",505,2
2000.0,"brute force,combinatorics,implementation","['brute force', 'combinatorics', 'implementation']","  (0, 35)	0.34639481781601333
  (0, 27)	0.43244906391373866
  (0, 11)	0.5647778780641151
  (0, 7)	0.43244906391373866
  (0, 6)	0.43244906391373866",4187,3
1500.0,"dp,math,number theory","['dp', 'math', 'number theory']","  (0, 68)	0.4959049743237831
  (0, 43)	0.4959049743237831
  (0, 42)	0.4959049743237831
  (0, 37)	0.3627421534022664
  (0, 21)	0.3614594022402384",6070,2
2500.0,"binary search,combinatorics","['binary search', 'combinatorics']","  (0, 52)	0.4753860632544818
  (0, 11)	0.5553583771403883
  (0, 4)	0.4824858359596684
  (0, 3)	0.4824858359596684",3416,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",5395,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5675,0
1500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1889,2
2000.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",1304,3
2500.0,"brute force,dp,two pointers","['brute force', 'dp', 'two pointers']","  (0, 46)	0.5699020670961601
  (0, 27)	0.41654032514017686
  (0, 21)	0.3933117167284381
  (0, 7)	0.41654032514017686
  (0, 6)	0.41654032514017686",3775,4
1500.0,dp,['dp'],"  (0, 21)	1.0",4919,2
2000.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",2562,3
2500.0,"data structures,dfs and similar,dsu,trees","['data structures', 'dfs and similar', 'dsu', 'trees']","  (0, 69)	0.38514453402925597
  (0, 62)	0.30770174653964755
  (0, 55)	0.3490843767729424
  (0, 22)	0.44046267848534876
  (0, 18)	0.3490843767729424
  (0, 17)	0.3490843767729424
  (0, 16)	0.31416257385666513
  (0, 15)	0.31416257385666513",1859,4
2250.0,"data structures,implementation,sortings","['data structures', 'implementation', 'sortings']","  (0, 62)	0.4459920873339933
  (0, 56)	0.5076688910565779
  (0, 35)	0.3586977600846166
  (0, 16)	0.4553566031140488
  (0, 15)	0.4553566031140488",1230,3
1000.0,"dfs and similar,dp,graphs,trees","['dfs and similar', 'dp', 'graphs', 'trees']","  (0, 69)	0.4485155734186616
  (0, 55)	0.4065221380187604
  (0, 32)	0.4331735696593523
  (0, 21)	0.3397259084195246
  (0, 18)	0.4065221380187604
  (0, 17)	0.4065221380187604",6184,1
2500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",6012,4
2500.0,"dp,hashing,implementation,string suffix structures,strings","['dp', 'hashing', 'implementation', 'string suffix structures', 'strings']","  (0, 64)	0.37231274969856537
  (0, 63)	0.37231274969856537
  (0, 62)	0.21829053797694095
  (0, 61)	0.27386585909428407
  (0, 60)	0.37231274969856537
  (0, 59)	0.37231274969856537
  (0, 58)	0.37231274969856537
  (0, 35)	0.1755643861039116
  (0, 34)	0.33257904034568914
  (0, 21)	0.20695686160756266",5273,4
2000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",6459,3
1000.0,"combinatorics,greedy","['combinatorics', 'greedy']","  (0, 33)	0.5890365818293197
  (0, 11)	0.8081063700199567",1460,1
1500.0,"games,math,number theory","['games', 'math', 'number theory']","  (0, 68)	0.44594372413433014
  (0, 43)	0.44594372413433014
  (0, 42)	0.44594372413433014
  (0, 37)	0.32619674164247475
  (0, 28)	0.54497547693217",5292,2
500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",5375,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2977,0
1500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",1328,2
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3352,0
1000.0,"combinatorics,dp,probabilities","['combinatorics', 'dp', 'probabilities']","  (0, 47)	0.6855071140834587
  (0, 21)	0.4265764937950003
  (0, 11)	0.5900105859071787",564,1
2500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",1830,4
3000.0,"dp,games,greedy,trees","['dp', 'games', 'greedy', 'trees']","  (0, 69)	0.5150506354291158
  (0, 33)	0.3933124458012352
  (0, 28)	0.6540890985464278
  (0, 21)	0.39012256290124486",1372,5
500.0,"binary search,brute force,implementation","['binary search', 'brute force', 'implementation']","  (0, 52)	0.4091356886482583
  (0, 35)	0.2931486880830613
  (0, 27)	0.3659750932428642
  (0, 7)	0.3659750932428642
  (0, 6)	0.3659750932428642
  (0, 4)	0.4152460284741602
  (0, 3)	0.4152460284741602",2592,0
1000.0,"constructive algorithms,hashing,implementation","['constructive algorithms', 'hashing', 'implementation']","  (0, 35)	0.3116606532746067
  (0, 34)	0.5903919540847576
  (0, 14)	0.42984686333329875
  (0, 13)	0.42984686333329875
  (0, 2)	0.42984686333329875",146,1
2000.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",1965,3
2000.0,"data structures,divide and conquer,dp,probabilities","['data structures', 'divide and conquer', 'dp', 'probabilities']","  (0, 62)	0.27339636496804653
  (0, 47)	0.4165361519457047
  (0, 21)	0.2592015860746087
  (0, 20)	0.4198141665215035
  (0, 19)	0.4198141665215035
  (0, 16)	0.2791368806557964
  (0, 15)	0.2791368806557964
  (0, 12)	0.4198141665215035",985,3
1500.0,"dp,implementation,trees","['dp', 'implementation', 'trees']","  (0, 69)	0.7094884405124822
  (0, 35)	0.45588264323802563
  (0, 21)	0.5373985191396391",5232,2
3000.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",794,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",3134,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",512,0
2500.0,math,['math'],"  (0, 37)	1.0",2139,4
1500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",5202,2
2000.0,"dfs and similar,graphs,hashing","['dfs and similar', 'graphs', 'hashing']","  (0, 55)	0.41034195633405923
  (0, 34)	0.5510683115024816
  (0, 32)	0.437243813762545
  (0, 18)	0.41034195633405923
  (0, 17)	0.41034195633405923",3731,3
2500.0,"dsu,graphs,greedy","['dsu', 'graphs', 'greedy']","  (0, 33)	0.45443478821161326
  (0, 32)	0.5747357751851221
  (0, 22)	0.6805643334655607",5508,4
1000.0,"dp,two pointers","['dp', 'two pointers']","  (0, 46)	0.8230265855448435
  (0, 21)	0.5680028516534017",5046,1
2000.0,"binary search,bitmasks,brute force,implementation,sortings","['binary search', 'bitmasks', 'brute force', 'implementation', 'sortings']","  (0, 56)	0.3448368365877679
  (0, 52)	0.3400487439366906
  (0, 35)	0.24364739115935363
  (0, 27)	0.3041762775095885
  (0, 7)	0.3041762775095885
  (0, 6)	0.3041762775095885
  (0, 5)	0.4362282020072966
  (0, 4)	0.34512728741376825
  (0, 3)	0.34512728741376825",3594,3
1000.0,"greedy,two pointers","['greedy', 'two pointers']","  (0, 46)	0.8208551890856012
  (0, 33)	0.5711363747400808",4058,1
1500.0,"data structures,schedules","['data structures', 'schedules']","  (0, 62)	0.3556164349330269
  (0, 51)	0.7809468249894554
  (0, 16)	0.36308332910257196
  (0, 15)	0.36308332910257196",917,2
2500.0,"binary search,data structures,sortings","['binary search', 'data structures', 'sortings']","  (0, 62)	0.3484440519734711
  (0, 56)	0.39663081584709964
  (0, 52)	0.39112355881116245
  (0, 16)	0.3557603472976266
  (0, 15)	0.3557603472976266
  (0, 4)	0.39696489195457096
  (0, 3)	0.39696489195457096",161,4
2750.0,"constructive algorithms,two pointers","['constructive algorithms', 'two pointers']","  (0, 46)	0.5816302291393685
  (0, 14)	0.4696474835985268
  (0, 13)	0.4696474835985268
  (0, 2)	0.4696474835985268",1976,5
750.0,"constructive algorithms,graphs,math","['constructive algorithms', 'graphs', 'math']","  (0, 37)	0.38656243198738366
  (0, 32)	0.4911503134238374
  (0, 14)	0.4506812827263725
  (0, 13)	0.4506812827263725
  (0, 2)	0.4506812827263725",4056,2
2500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",4540,5
3000.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",918,4
2500.0,bitmasks,['bitmasks'],"  (0, 5)	1.0",5760,3
1500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",2213,2
1500.0,greedy,['greedy'],"  (0, 33)	1.0",4444,2
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",2456,1
1000.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",2343,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3270,1
1500.0,"binary search,data structures,implementation","['binary search', 'data structures', 'implementation']","  (0, 62)	0.36303739496445786
  (0, 52)	0.40750438153796636
  (0, 35)	0.29197984470784116
  (0, 16)	0.3706601073632744
  (0, 15)	0.3706601073632744
  (0, 4)	0.4135903581976111
  (0, 3)	0.4135903581976111",2417,2
2500.0,"constructive algorithms,dfs and similar,greedy,trees","['constructive algorithms', 'dfs and similar', 'greedy', 'trees']","  (0, 69)	0.3951670370847694
  (0, 55)	0.3581684969504679
  (0, 33)	0.30176472596009146
  (0, 18)	0.3581684969504679
  (0, 17)	0.3581684969504679
  (0, 14)	0.3502032963601776
  (0, 13)	0.3502032963601776
  (0, 2)	0.3502032963601776",1513,4
500.0,"binary search,math,sortings","['binary search', 'math', 'sortings']","  (0, 56)	0.4625248062720955
  (0, 52)	0.45610260483977055
  (0, 37)	0.3866028502533253
  (0, 4)	0.46291438388612516
  (0, 3)	0.46291438388612516",4169,0
1500.0,"constructive algorithms,number theory","['constructive algorithms', 'number theory']","  (0, 68)	0.4392973494418518
  (0, 43)	0.4392973494418518
  (0, 42)	0.4392973494418518
  (0, 14)	0.37463471823457156
  (0, 13)	0.37463471823457156
  (0, 2)	0.37463471823457156",2732,2
1500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",795,2
1750.0,"data structures,dfs and similar,graphs,trees","['data structures', 'dfs and similar', 'graphs', 'trees']","  (0, 69)	0.39632933561327377
  (0, 62)	0.31663756849224534
  (0, 55)	0.3592219722606387
  (0, 32)	0.382772423618988
  (0, 18)	0.3592219722606387
  (0, 17)	0.3592219722606387
  (0, 16)	0.3232860216619616
  (0, 15)	0.3232860216619616",63,3
2000.0,dp,['dp'],"  (0, 21)	1.0",2739,3
1000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",4455,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2249,1
1250.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",1178,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",301,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2266,0
2000.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",4468,3
2500.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",4045,4
1000.0,"2-sat,brute force,graph matchings,greedy,implementation","['2-sat', 'brute force', 'graph matchings', 'greedy', 'implementation']","  (0, 50)	0.3974081589390824
  (0, 36)	0.34623623713577645
  (0, 35)	0.15329281467548642
  (0, 33)	0.1821804736412577
  (0, 31)	0.34623623713577645
  (0, 30)	0.34623623713577645
  (0, 27)	0.1913750749190676
  (0, 7)	0.1913750749190676
  (0, 6)	0.1913750749190676
  (0, 1)	0.3974081589390824
  (0, 0)	0.3974081589390824",3729,1
2500.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",5961,5
3000.0,"dp,graph matchings,greedy","['dp', 'graph matchings', 'greedy']","  (0, 36)	0.5308013135089618
  (0, 33)	0.27929380097364803
  (0, 31)	0.5308013135089618
  (0, 30)	0.5308013135089618
  (0, 21)	0.2770286437702338",2697,4
2500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",2046,4
2500.0,"constructive algorithms,dfs and similar,flows,graphs,greedy","['constructive algorithms', 'dfs and similar', 'flows', 'graphs', 'greedy']","  (0, 55)	0.3186841269880759
  (0, 33)	0.26849828800461756
  (0, 32)	0.33957693313821097
  (0, 26)	0.4654453485743659
  (0, 18)	0.3186841269880759
  (0, 17)	0.3186841269880759
  (0, 14)	0.311597007327877
  (0, 13)	0.311597007327877
  (0, 2)	0.311597007327877",3406,4
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",112,1
1500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",634,2
2500.0,"data structures,divide and conquer","['data structures', 'divide and conquer']","  (0, 62)	0.31374914796161846
  (0, 20)	0.48177793828287807
  (0, 19)	0.48177793828287807
  (0, 16)	0.32033695283642843
  (0, 15)	0.32033695283642843
  (0, 12)	0.48177793828287807",1781,4
500.0,dp,['dp'],"  (0, 21)	1.0",4937,0
1000.0,"graphs,sortings","['graphs', 'sortings']","  (0, 56)	0.6855355106667984
  (0, 32)	0.7280391909882405",2007,1
2000.0,"brute force,combinatorics,dfs and similar,math","['brute force', 'combinatorics', 'dfs and similar', 'math']","  (0, 55)	0.3678740529830319
  (0, 37)	0.30851914953456405
  (0, 27)	0.3255845530939567
  (0, 18)	0.3678740529830319
  (0, 17)	0.3678740529830319
  (0, 11)	0.4252129750558033
  (0, 7)	0.3255845530939567
  (0, 6)	0.3255845530939567",5766,3
1750.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",4377,2
2500.0,"constructive algorithms,graphs,greedy","['constructive algorithms', 'graphs', 'greedy']","  (0, 33)	0.38807709769607496
  (0, 32)	0.4908114373323105
  (0, 14)	0.4503703288138116
  (0, 13)	0.4503703288138116
  (0, 2)	0.4503703288138116",1222,3
1250.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",1355,1
1500.0,"dp,greedy,number theory","['dp', 'greedy', 'number theory']","  (0, 68)	0.4956036491532467
  (0, 43)	0.4956036491532467
  (0, 42)	0.4956036491532467
  (0, 33)	0.3641934891613699
  (0, 21)	0.36123976980728983",1048,2
1500.0,"brute force,dp,strings","['brute force', 'dp', 'strings']","  (0, 61)	0.5350895793692757
  (0, 27)	0.42824134612957365
  (0, 21)	0.40436022361973706
  (0, 7)	0.42824134612957365
  (0, 6)	0.42824134612957365",6307,2
2500.0,"combinatorics,graphs","['combinatorics', 'graphs']","  (0, 32)	0.6778014313072432
  (0, 11)	0.7352450065915799",2217,3
500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5851,0
1000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",75,2
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",6419,0
30.0,greedy,['greedy'],"  (0, 33)	1.0",155,14
2000.0,"data structures,dfs and similar,graphs,shortest paths","['data structures', 'dfs and similar', 'graphs', 'shortest paths']","  (0, 62)	0.2556480444866914
  (0, 55)	0.29003000238531024
  (0, 54)	0.3875241587322151
  (0, 53)	0.3875241587322151
  (0, 45)	0.3875241587322151
  (0, 32)	0.309044255385072
  (0, 18)	0.29003000238531024
  (0, 17)	0.29003000238531024
  (0, 16)	0.26101589789648316
  (0, 15)	0.26101589789648316",597,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2713,0
2000.0,"binary search,greedy,sortings","['binary search', 'greedy', 'sortings']","  (0, 56)	0.4622056140844986
  (0, 52)	0.4557878446664063
  (0, 33)	0.38811761835041586
  (0, 4)	0.4625949228478003
  (0, 3)	0.4625949228478003",6152,3
2000.0,"combinatorics,probabilities","['combinatorics', 'probabilities']","  (0, 47)	0.7579257957391671
  (0, 11)	0.652340776092642",5840,3
1000.0,sortings,['sortings'],"  (0, 56)	1.0",4701,1
1500.0,"hashing,string suffix structures,strings","['hashing', 'string suffix structures', 'strings']","  (0, 64)	0.3868310196854611
  (0, 63)	0.3868310196854611
  (0, 62)	0.22680273899208162
  (0, 61)	0.2845452099511727
  (0, 60)	0.3868310196854611
  (0, 59)	0.3868310196854611
  (0, 58)	0.3868310196854611
  (0, 34)	0.345547901346637",5721,5
2000.0,"greedy,implementation,math","['greedy', 'implementation', 'math']","  (0, 37)	0.6059159597578303
  (0, 35)	0.5121892787020597
  (0, 33)	0.6087101054635212",2346,3
1000.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",2672,1
1750.0,meet-in-the-middle,['meet-in-the-middle'],"  (0, 41)	0.5773502691896257
  (0, 40)	0.5773502691896257
  (0, 39)	0.5773502691896257",4170,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2854,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1618,0
500.0,"dfs and similar,dp,graphs,trees","['dfs and similar', 'dp', 'graphs', 'trees']","  (0, 69)	0.4485155734186616
  (0, 55)	0.4065221380187604
  (0, 32)	0.4331735696593523
  (0, 21)	0.3397259084195246
  (0, 18)	0.4065221380187604
  (0, 17)	0.4065221380187604",6410,0
1000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",2982,1
1500.0,"data structures,dp,math","['data structures', 'dp', 'math']","  (0, 62)	0.45226318142987776
  (0, 37)	0.43030327647179045
  (0, 21)	0.4287816115019447
  (0, 16)	0.461759371652792
  (0, 15)	0.461759371652792",3811,2
2000.0,"constructive algorithms,dp,greedy","['constructive algorithms', 'dp', 'greedy']","  (0, 33)	0.40742581653175064
  (0, 21)	0.4041214699262887
  (0, 14)	0.4728248588952898
  (0, 13)	0.4728248588952898
  (0, 2)	0.4728248588952898",1141,3
2000.0,games,['games'],"  (0, 28)	1.0",5390,2
2000.0,"dp,greedy,probabilities","['dp', 'greedy', 'probabilities']","  (0, 47)	0.7493591054145539
  (0, 33)	0.4701230699241752
  (0, 21)	0.4663102296297698",5320,3
2000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",5984,3
1500.0,"dp,implementation,two pointers","['dp', 'implementation', 'two pointers']","  (0, 46)	0.7414430253177952
  (0, 35)	0.43408125145602633
  (0, 21)	0.5116988443820889",6204,2
1500.0,dp,['dp'],"  (0, 21)	1.0",4437,2
1500.0,implementation,['implementation'],"  (0, 35)	1.0",3580,2
500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4535,0
1500.0,"dfs and similar,graphs,sortings","['dfs and similar', 'graphs', 'sortings']","  (0, 56)	0.44246751156544467
  (0, 55)	0.44098969508652
  (0, 32)	0.4699008062257157
  (0, 18)	0.44098969508652
  (0, 17)	0.44098969508652",4385,2
1000.0,expression parsing,['expression parsing'],"  (0, 44)	0.5773502691896258
  (0, 24)	0.5773502691896258
  (0, 23)	0.5773502691896258",3451,1
2250.0,"dfs and similar,dp,hashing,math,number theory","['dfs and similar', 'dp', 'hashing', 'math', 'number theory']","  (0, 68)	0.3598954722882592
  (0, 55)	0.313901200606251
  (0, 43)	0.3598954722882592
  (0, 42)	0.3598954722882592
  (0, 37)	0.26325458581169914
  (0, 34)	0.4215532970161713
  (0, 21)	0.2623236487185274
  (0, 18)	0.313901200606251
  (0, 17)	0.313901200606251",2246,3
3000.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",5031,3
2000.0,"brute force,combinatorics,dfs and similar,graphs","['brute force', 'combinatorics', 'dfs and similar', 'graphs']","  (0, 55)	0.3575684338219995
  (0, 32)	0.38101047985000874
  (0, 27)	0.3164636314587034
  (0, 18)	0.3575684338219995
  (0, 17)	0.3575684338219995
  (0, 11)	0.4133010640424522
  (0, 7)	0.3164636314587034
  (0, 6)	0.3164636314587034",5557,3
2500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",2204,4
2000.0,"graphs,greedy","['graphs', 'greedy']","  (0, 33)	0.6202293253313756
  (0, 32)	0.7844205402709612",1120,3
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1068,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",5450,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",3210,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1469,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3186,0
3000.0,"binary search,data structures,dfs and similar,trees","['binary search', 'data structures', 'dfs and similar', 'trees']","  (0, 69)	0.3559055167810596
  (0, 62)	0.28434195332059203
  (0, 55)	0.32258293845118075
  (0, 52)	0.31916985258377895
  (0, 18)	0.32258293845118075
  (0, 17)	0.32258293845118075
  (0, 16)	0.2903122940159157
  (0, 15)	0.2903122940159157
  (0, 4)	0.3239365750076117
  (0, 3)	0.3239365750076117",4988,4
1000.0,"brute force,constructive algorithms,greedy,strings","['brute force', 'constructive algorithms', 'greedy', 'strings']","  (0, 61)	0.4135490541879553
  (0, 33)	0.31506893662693947
  (0, 27)	0.3309703841827999
  (0, 14)	0.3656430679112654
  (0, 13)	0.3656430679112654
  (0, 7)	0.3309703841827999
  (0, 6)	0.3309703841827999
  (0, 2)	0.3656430679112654",1948,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4639,0
500.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",4065,0
2500.0,"divide and conquer,dp","['divide and conquer', 'dp']","  (0, 21)	0.33577214919058945
  (0, 20)	0.5438311820862343
  (0, 19)	0.5438311820862343
  (0, 12)	0.5438311820862343",4799,4
3250.0,"bitmasks,combinatorics,dp","['bitmasks', 'combinatorics', 'dp']","  (0, 21)	0.43769289963437547
  (0, 11)	0.60538601614742
  (0, 5)	0.6647801870263645",6086,6
2500.0,"brute force,graphs,math,meet-in-the-middle","['brute force', 'graphs', 'math', 'meet-in-the-middle']","  (0, 41)	0.47841662841591875
  (0, 40)	0.47841662841591875
  (0, 39)	0.47841662841591875
  (0, 37)	0.22938331547647128
  (0, 32)	0.2914449981889208
  (0, 27)	0.24207140584072565
  (0, 7)	0.24207140584072565
  (0, 6)	0.24207140584072565",6093,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4288,0
2500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",5023,4
2000.0,"data structures,hashing,trees","['data structures', 'hashing', 'trees']","  (0, 69)	0.4740123870889288
  (0, 62)	0.37870053058473785
  (0, 34)	0.576973515240408
  (0, 16)	0.38665212254184
  (0, 15)	0.38665212254184",2844,3
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",3698,1
2500.0,dp,['dp'],"  (0, 21)	1.0",4466,4
2000.0,"binary search,brute force,greedy,math","['binary search', 'brute force', 'greedy', 'math']","  (0, 52)	0.380578024455265
  (0, 37)	0.32258651329095794
  (0, 33)	0.324074101967754
  (0, 27)	0.34043003788394544
  (0, 7)	0.34043003788394544
  (0, 6)	0.34043003788394544
  (0, 4)	0.38626186266399026
  (0, 3)	0.38626186266399026",3269,2
2000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5104,3
2500.0,"data structures,dp,greedy,hashing,math","['data structures', 'dp', 'greedy', 'hashing', 'math']","  (0, 62)	0.3508485585332894
  (0, 37)	0.3338129002784785
  (0, 34)	0.5345393253646005
  (0, 33)	0.3353522587766275
  (0, 21)	0.3326324505245253
  (0, 16)	0.35821534138908984
  (0, 15)	0.35821534138908984",4234,4
2000.0,"math,sortings","['math', 'sortings']","  (0, 56)	0.7672695625273075
  (0, 37)	0.6413247371021598",2684,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",5483,0
1500.0,"binary search,geometry","['binary search', 'geometry']","  (0, 52)	0.470596263078465
  (0, 29)	0.5677048781508689
  (0, 4)	0.47762450130845013
  (0, 3)	0.47762450130845013",3644,2
2000.0,"dp,number theory","['dp', 'number theory']","  (0, 68)	0.5321499476551752
  (0, 43)	0.5321499476551752
  (0, 42)	0.5321499476551752
  (0, 21)	0.38787794424507116",4788,3
1500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",4030,2
2500.0,"combinatorics,constructive algorithms,graphs","['combinatorics', 'constructive algorithms', 'graphs']","  (0, 32)	0.4611345814501909
  (0, 14)	0.423138739805952
  (0, 13)	0.423138739805952
  (0, 11)	0.5002156719026802
  (0, 2)	0.423138739805952",788,4
1500.0,"binary search,number theory","['binary search', 'number theory']","  (0, 68)	0.43523589869065804
  (0, 52)	0.3755967038898434
  (0, 43)	0.43523589869065804
  (0, 42)	0.43523589869065804
  (0, 4)	0.38120614731395075
  (0, 3)	0.38120614731395075",4027,2
1500.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",4447,2
1500.0,"chinese remainder theorem,geometry","['chinese remainder theorem', 'geometry']","  (0, 67)	0.3970094493535849
  (0, 49)	0.3970094493535849
  (0, 48)	0.3970094493535849
  (0, 29)	0.23302571262369345
  (0, 10)	0.3970094493535849
  (0, 9)	0.3970094493535849
  (0, 8)	0.3970094493535849",2644,2
2500.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",3329,4
1500.0,games,['games'],"  (0, 28)	1.0",1916,2
1000.0,"binary search,bitmasks,constructive algorithms,implementation","['binary search', 'bitmasks', 'constructive algorithms', 'implementation']","  (0, 52)	0.35030694451064315
  (0, 35)	0.25099746626593383
  (0, 14)	0.34617932178931154
  (0, 13)	0.34617932178931154
  (0, 5)	0.4493878341835551
  (0, 4)	0.35553869166378294
  (0, 3)	0.35553869166378294
  (0, 2)	0.34617932178931154",2718,1
2000.0,"data structures,flows","['data structures', 'flows']","  (0, 62)	0.41414544721071384
  (0, 26)	0.6862172078569684
  (0, 16)	0.42284127766552304
  (0, 15)	0.42284127766552304",5137,3
1000.0,"brute force,greedy,implementation,sortings","['brute force', 'greedy', 'implementation', 'sortings']","  (0, 56)	0.46939722548242857
  (0, 35)	0.33165659022371813
  (0, 33)	0.3941564698978919
  (0, 27)	0.4140494447559805
  (0, 7)	0.4140494447559805
  (0, 6)	0.4140494447559805",5593,1
1500.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",665,2
2500.0,"dsu,graphs,shortest paths","['dsu', 'graphs', 'shortest paths']","  (0, 54)	0.4699584501195172
  (0, 53)	0.4699584501195172
  (0, 45)	0.4699584501195172
  (0, 32)	0.374784270880697
  (0, 22)	0.44379490283711925",6418,4
2000.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",1978,3
3000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",1388,4
1750.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",5364,3
250.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",4059,0
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",817,1
500.0,math,['math'],"  (0, 37)	1.0",2076,0
1000.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",3388,2
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4204,0
1500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4987,1
1000.0,"brute force,dp,math","['brute force', 'dp', 'math']","  (0, 37)	0.43298554408375645
  (0, 27)	0.4569356718353717
  (0, 21)	0.4314543939138482
  (0, 7)	0.4569356718353717
  (0, 6)	0.4569356718353717",3229,2
2500.0,dp,['dp'],"  (0, 21)	1.0",2475,3
500.0,"binary search,brute force,dp,greedy,sortings","['binary search', 'brute force', 'dp', 'greedy', 'sortings']","  (0, 56)	0.3601679334979994
  (0, 52)	0.35516696709139406
  (0, 33)	0.30243579111931573
  (0, 27)	0.317699647096312
  (0, 21)	0.299982945376102
  (0, 7)	0.317699647096312
  (0, 6)	0.317699647096312
  (0, 4)	0.36047129747389733
  (0, 3)	0.36047129747389733",6257,0
1000.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",3371,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4676,0
2000.0,"dfs and similar,graphs,implementation","['dfs and similar', 'graphs', 'implementation']","  (0, 55)	0.4643387440546784
  (0, 35)	0.32918192630167115
  (0, 32)	0.4947806096700768
  (0, 18)	0.4643387440546784
  (0, 17)	0.4643387440546784",6209,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1802,1
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",3656,2
1000.0,"brute force,constructive algorithms,greedy,math","['brute force', 'constructive algorithms', 'greedy', 'math']","  (0, 37)	0.3256782992074842
  (0, 33)	0.32718014547265106
  (0, 27)	0.3436928425993513
  (0, 14)	0.3796983397697651
  (0, 13)	0.3796983397697651
  (0, 7)	0.3436928425993513
  (0, 6)	0.3436928425993513
  (0, 2)	0.3796983397697651",5377,1
2250.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",5440,3
2000.0,"2-sat,dfs and similar,dsu,graphs","['2-sat', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.25109443661209574
  (0, 50)	0.46148026231845224
  (0, 32)	0.26755608921806373
  (0, 22)	0.3168223371247297
  (0, 18)	0.25109443661209574
  (0, 17)	0.25109443661209574
  (0, 1)	0.46148026231845224
  (0, 0)	0.46148026231845224",4979,3
2500.0,"dp,math,number theory","['dp', 'math', 'number theory']","  (0, 68)	0.4959049743237831
  (0, 43)	0.4959049743237831
  (0, 42)	0.4959049743237831
  (0, 37)	0.3627421534022664
  (0, 21)	0.3614594022402384",2160,4
1500.0,"math,strings","['math', 'strings']","  (0, 61)	0.7967879156268319
  (0, 37)	0.6042590648977049",3000,2
1750.0,"brute force,dp,two pointers","['brute force', 'dp', 'two pointers']","  (0, 46)	0.5699020670961601
  (0, 27)	0.41654032514017686
  (0, 21)	0.3933117167284381
  (0, 7)	0.41654032514017686
  (0, 6)	0.41654032514017686",4561,2
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",5897,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5626,0
2500.0,"data structures,sortings,strings","['data structures', 'sortings', 'strings']","  (0, 62)	0.4098022908678176
  (0, 61)	0.5141352322800908
  (0, 56)	0.4664743623613009
  (0, 16)	0.4184069278748878
  (0, 15)	0.4184069278748878",3711,4
1000.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",5705,1
2000.0,"bitmasks,dfs and similar,dp","['bitmasks', 'dfs and similar', 'dp']","  (0, 55)	0.433986965716912
  (0, 21)	0.36267795128935143
  (0, 18)	0.433986965716912
  (0, 17)	0.433986965716912
  (0, 5)	0.5508453906606123",2351,3
2750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2153,6
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4097,3
3000.0,"brute force,math,number theory","['brute force', 'math', 'number theory']","  (0, 68)	0.43344456504257106
  (0, 43)	0.43344456504257106
  (0, 42)	0.43344456504257106
  (0, 37)	0.31705391767535335
  (0, 27)	0.3345914127170029
  (0, 7)	0.3345914127170029
  (0, 6)	0.3345914127170029",5086,5
2000.0,"constructive algorithms,dfs and similar,dsu,greedy,number theory,sortings,strings","['constructive algorithms', 'dfs and similar', 'dsu', 'greedy', 'number theory', 'sortings', 'strings']","  (0, 68)	0.302733886014742
  (0, 61)	0.29199819203886657
  (0, 56)	0.26492965642117017
  (0, 55)	0.26404480634340993
  (0, 43)	0.302733886014742
  (0, 42)	0.302733886014742
  (0, 33)	0.22246347544748915
  (0, 22)	0.33316266891488716
  (0, 18)	0.26404480634340993
  (0, 17)	0.26404480634340993
  (0, 14)	0.25817279396583764
  (0, 13)	0.25817279396583764
  (0, 2)	0.25817279396583764",6479,2
1000.0,"bitmasks,constructive algorithms,graphs,implementation,math","['bitmasks', 'constructive algorithms', 'graphs', 'implementation', 'math']","  (0, 37)	0.3211273099785585
  (0, 35)	0.2714534295072676
  (0, 32)	0.40801114100521385
  (0, 14)	0.37439248101670064
  (0, 13)	0.37439248101670064
  (0, 5)	0.48601235137059995
  (0, 2)	0.37439248101670064",4048,1
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5,0
1500.0,"brute force,constructive algorithms,implementation,number theory","['brute force', 'constructive algorithms', 'implementation', 'number theory']","  (0, 68)	0.36881018795545073
  (0, 43)	0.36881018795545073
  (0, 42)	0.36881018795545073
  (0, 35)	0.22804500452138962
  (0, 27)	0.28469781781741277
  (0, 14)	0.3145229558573028
  (0, 13)	0.3145229558573028
  (0, 7)	0.28469781781741277
  (0, 6)	0.28469781781741277
  (0, 2)	0.3145229558573028",3431,2
3000.0,"brute force,dp,greedy","['brute force', 'dp', 'greedy']","  (0, 33)	0.434605795394828
  (0, 27)	0.45654023722501946
  (0, 21)	0.43108101093970486
  (0, 7)	0.45654023722501946
  (0, 6)	0.45654023722501946",527,4
2000.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",4748,4
2000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",32,3
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5796,4
2000.0,"constructive algorithms,geometry","['constructive algorithms', 'geometry']","  (0, 29)	0.5760883600361106
  (0, 14)	0.4719188494613965
  (0, 13)	0.4719188494613965
  (0, 2)	0.4719188494613965",4965,3
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2655,0
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1877,1
1500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",939,2
2500.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",1869,4
3000.0,"flows,graphs,shortest paths","['flows', 'graphs', 'shortest paths']","  (0, 54)	0.4549777531801462
  (0, 53)	0.4549777531801462
  (0, 45)	0.4549777531801462
  (0, 32)	0.36283740711374274
  (0, 26)	0.4973276066461763",4692,4
500.0,"games,greedy,implementation","['games', 'greedy', 'implementation']","  (0, 35)	0.3978213273502054
  (0, 33)	0.4727897911893715
  (0, 28)	0.7862620459188089",3460,1
1500.0,"binary search,brute force,data structures,strings","['binary search', 'brute force', 'data structures', 'strings']","  (0, 62)	0.2943836889767451
  (0, 61)	0.36933182093983963
  (0, 52)	0.33044155994750396
  (0, 27)	0.29558257582626574
  (0, 16)	0.3005648764442017
  (0, 15)	0.3005648764442017
  (0, 7)	0.29558257582626574
  (0, 6)	0.29558257582626574
  (0, 4)	0.33537662251941336
  (0, 3)	0.33537662251941336",5613,2
2000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",1134,2
2500.0,"geometry,ternary search","['geometry', 'ternary search']","  (0, 66)	0.5897882294530464
  (0, 65)	0.5897882294530464
  (0, 52)	0.3520462515724971
  (0, 29)	0.42469180066377016",6507,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2302,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",979,0
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",6194,1
500.0,"brute force,strings","['brute force', 'strings']","  (0, 61)	0.5850532379797061
  (0, 27)	0.4682281170289618
  (0, 7)	0.4682281170289618
  (0, 6)	0.4682281170289618",4785,0
2000.0,"brute force,data structures,greedy,sortings","['brute force', 'data structures', 'greedy', 'sortings']","  (0, 62)	0.3467151995109341
  (0, 56)	0.39466287821461127
  (0, 33)	0.3314014621985361
  (0, 27)	0.3481272080860947
  (0, 16)	0.35399519404270646
  (0, 15)	0.35399519404270646
  (0, 7)	0.3481272080860947
  (0, 6)	0.3481272080860947",376,3
1000.0,"brute force,dfs and similar","['brute force', 'dfs and similar']","  (0, 55)	0.4323414917201438
  (0, 27)	0.3826410431076809
  (0, 18)	0.4323414917201438
  (0, 17)	0.4323414917201438
  (0, 7)	0.3826410431076809
  (0, 6)	0.3826410431076809",6155,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1185,1
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1515,2
2000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",4452,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3878,0
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",1538,1
500.0,"brute force,dfs and similar,dsu,graphs","['brute force', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.3518559091485214
  (0, 32)	0.37492344430346386
  (0, 27)	0.3114077984153809
  (0, 22)	0.44395970285791303
  (0, 18)	0.3518559091485214
  (0, 17)	0.3518559091485214
  (0, 7)	0.3114077984153809
  (0, 6)	0.3114077984153809",3395,0
2500.0,math,['math'],"  (0, 37)	1.0",3849,2
1500.0,"dfs and similar,graphs,trees","['dfs and similar', 'graphs', 'trees']","  (0, 69)	0.4768781467201565
  (0, 55)	0.43222919173454066
  (0, 32)	0.46056596771609815
  (0, 18)	0.43222919173454066
  (0, 17)	0.43222919173454066",1849,2
1500.0,"binary search,brute force,expression parsing,implementation","['binary search', 'brute force', 'expression parsing', 'implementation']","  (0, 52)	0.26791047900454645
  (0, 44)	0.43635229489860167
  (0, 35)	0.1919598011685742
  (0, 27)	0.23964803182624217
  (0, 24)	0.43635229489860167
  (0, 23)	0.43635229489860167
  (0, 7)	0.23964803182624217
  (0, 6)	0.23964803182624217
  (0, 4)	0.27191165542366186
  (0, 3)	0.27191165542366186",3543,3
1000.0,"constructive algorithms,dp","['constructive algorithms', 'dp']","  (0, 21)	0.44251480380911207
  (0, 14)	0.5177453197630997
  (0, 13)	0.5177453197630997
  (0, 2)	0.5177453197630997",2318,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",6233,0
1250.0,"binary search,dp,greedy,two pointers","['binary search', 'dp', 'greedy', 'two pointers']","  (0, 52)	0.4083679169258067
  (0, 46)	0.4997801016255893
  (0, 33)	0.34773806537988694
  (0, 21)	0.3449178044899186
  (0, 4)	0.41446679027185107
  (0, 3)	0.41446679027185107",1699,2
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",3939,0
1250.0,"brute force,greedy,math","['brute force', 'greedy', 'math']","  (0, 37)	0.4323253151547875
  (0, 33)	0.43431895784293195
  (0, 27)	0.4562389230562364
  (0, 7)	0.4562389230562364
  (0, 6)	0.4562389230562364",3797,2
2000.0,"bitmasks,brute force,fft,math","['bitmasks', 'brute force', 'fft', 'math']","  (0, 37)	0.3041273996375488
  (0, 27)	0.3209498782944271
  (0, 25)	0.6217869002974741
  (0, 7)	0.3209498782944271
  (0, 6)	0.3209498782944271
  (0, 5)	0.46028371932595963",4076,4
2000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",4745,3
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",5523,0
1500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",2247,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",2664,0
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",764,1
2500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",778,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",996,0
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",1133,1
1000.0,"binary search,brute force,math,number theory","['binary search', 'brute force', 'math', 'number theory']","  (0, 68)	0.3626976162497749
  (0, 52)	0.31299814556184447
  (0, 43)	0.3626976162497749
  (0, 42)	0.3626976162497749
  (0, 37)	0.2653042844180288
  (0, 27)	0.27997930438505453
  (0, 7)	0.27997930438505453
  (0, 6)	0.27997930438505453
  (0, 4)	0.31767269507518264
  (0, 3)	0.31767269507518264",1874,1
1500.0,greedy,['greedy'],"  (0, 33)	1.0",6386,2
1000.0,"binary search,greedy,implementation,sortings","['binary search', 'greedy', 'implementation', 'sortings']","  (0, 56)	0.4393693853789838
  (0, 52)	0.4332686991934288
  (0, 35)	0.31044016515802647
  (0, 33)	0.36894186100950765
  (0, 4)	0.4397394595339533
  (0, 3)	0.4397394595339533",5912,1
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",4383,4
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2237,3
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4439,2
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",578,2
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4042,4
1500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",1987,2
1500.0,"brute force,dp,strings","['brute force', 'dp', 'strings']","  (0, 61)	0.5350895793692757
  (0, 27)	0.42824134612957365
  (0, 21)	0.40436022361973706
  (0, 7)	0.42824134612957365
  (0, 6)	0.42824134612957365",1824,2
500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",6205,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2924,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",265,1
1000.0,geometry,['geometry'],"  (0, 29)	1.0",569,1
1750.0,"binary search,constructive algorithms,greedy","['binary search', 'constructive algorithms', 'greedy']","  (0, 52)	0.38590168113330003
  (0, 33)	0.32860736228825793
  (0, 14)	0.3813546501017828
  (0, 13)	0.3813546501017828
  (0, 4)	0.391665026831403
  (0, 3)	0.391665026831403
  (0, 2)	0.3813546501017828",167,3
2000.0,"combinatorics,dfs and similar,graphs,math","['combinatorics', 'dfs and similar', 'graphs', 'math']","  (0, 55)	0.40242886848242304
  (0, 37)	0.33749869349464773
  (0, 32)	0.4288119469805123
  (0, 18)	0.40242886848242304
  (0, 17)	0.40242886848242304
  (0, 11)	0.46515369874059714",1037,3
2000.0,"binary search,data structures,dfs and similar,trees,two pointers","['binary search', 'data structures', 'dfs and similar', 'trees', 'two pointers']","  (0, 69)	0.33151190327189056
  (0, 62)	0.2648532761669542
  (0, 55)	0.30047324035939516
  (0, 52)	0.2972940859530058
  (0, 46)	0.3638426583772854
  (0, 18)	0.30047324035939516
  (0, 17)	0.30047324035939516
  (0, 16)	0.2704144122375308
  (0, 15)	0.2704144122375308
  (0, 4)	0.3017340992390761
  (0, 3)	0.3017340992390761",232,3
1000.0,sortings,['sortings'],"  (0, 56)	1.0",6504,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",2832,0
500.0,"binary search,brute force,math","['binary search', 'brute force', 'math']","  (0, 52)	0.4022888711464306
  (0, 37)	0.3409891163963847
  (0, 27)	0.3598505611055504
  (0, 7)	0.3598505611055504
  (0, 6)	0.3598505611055504
  (0, 4)	0.4082969554546085
  (0, 3)	0.4082969554546085",3438,0
2000.0,"brute force,combinatorics","['brute force', 'combinatorics']","  (0, 27)	0.46098946675558966
  (0, 11)	0.6020516046164077
  (0, 7)	0.46098946675558966
  (0, 6)	0.46098946675558966",4780,2
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",3262,2
2000.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",5392,3
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5058,4
3000.0,dp,['dp'],"  (0, 21)	1.0",3239,5
500.0,implementation,['implementation'],"  (0, 35)	1.0",898,0
1750.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",523,2
1500.0,"expression parsing,implementation","['expression parsing', 'implementation']","  (0, 44)	0.5595830715849842
  (0, 35)	0.24617139961121315
  (0, 24)	0.5595830715849842
  (0, 23)	0.5595830715849842",3955,2
1500.0,dp,['dp'],"  (0, 21)	1.0",6382,2
1000.0,"binary search,data structures,greedy,sortings","['binary search', 'data structures', 'greedy', 'sortings']","  (0, 62)	0.33059074996812204
  (0, 56)	0.3763085583717865
  (0, 52)	0.37108347783599854
  (0, 33)	0.31598919829094846
  (0, 16)	0.33753217871257074
  (0, 15)	0.33753217871257074
  (0, 4)	0.37662551735068106
  (0, 3)	0.37662551735068106",5539,1
2500.0,"data structures,greedy,sortings","['data structures', 'greedy', 'sortings']","  (0, 62)	0.43461045807336557
  (0, 56)	0.494713282046338
  (0, 33)	0.41541455781417724
  (0, 16)	0.44373599327542246
  (0, 15)	0.44373599327542246",3323,4
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2199,2
1000.0,"bitmasks,brute force","['bitmasks', 'brute force']","  (0, 27)	0.4446980408234418
  (0, 7)	0.4446980408234418
  (0, 6)	0.4446980408234418
  (0, 5)	0.6377546216715152",2808,1
2000.0,"geometry,math,probabilities,two pointers","['geometry', 'math', 'probabilities', 'two pointers']","  (0, 47)	0.5780319421112212
  (0, 46)	0.5211948795227177
  (0, 37)	0.36097347733609164
  (0, 29)	0.5137442166276128",3758,3
500.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",2946,1
1000.0,"constructive algorithms,dsu,graphs,greedy","['constructive algorithms', 'dsu', 'graphs', 'greedy']","  (0, 33)	0.33552586284176333
  (0, 32)	0.42434849152706167
  (0, 22)	0.5024855955768711
  (0, 14)	0.3893836922371705
  (0, 13)	0.3893836922371705
  (0, 2)	0.3893836922371705",431,2
1500.0,greedy,['greedy'],"  (0, 33)	1.0",4912,2
1500.0,"combinatorics,divide and conquer,dp","['combinatorics', 'divide and conquer', 'dp']","  (0, 21)	0.3045331469191971
  (0, 20)	0.4932351348160874
  (0, 19)	0.4932351348160874
  (0, 12)	0.4932351348160874
  (0, 11)	0.42120881730604715",3946,2
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5022,0
2500.0,"combinatorics,graphs,matrices","['combinatorics', 'graphs', 'matrices']","  (0, 38)	0.6820504846367894
  (0, 32)	0.49567963753377864
  (0, 11)	0.5376884165956177",2668,4
2000.0,"bitmasks,combinatorics,dp,implementation,meet-in-the-middle","['bitmasks', 'combinatorics', 'dp', 'implementation', 'meet-in-the-middle']","  (0, 41)	0.47914569533959994
  (0, 40)	0.47914569533959994
  (0, 39)	0.47914569533959994
  (0, 35)	0.19419643004004714
  (0, 21)	0.22892048090375952
  (0, 11)	0.3166266989129707
  (0, 5)	0.34769081297981036",3376,3
2500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",5790,4
1500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",1177,2
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",6008,3
2000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",4181,3
500.0,"brute force,graphs,math","['brute force', 'graphs', 'math']","  (0, 37)	0.409774738727324
  (0, 32)	0.5206429148439983
  (0, 27)	0.4324409858480494
  (0, 7)	0.4324409858480494
  (0, 6)	0.4324409858480494",1785,0
500.0,"bitmasks,brute force,implementation","['bitmasks', 'brute force', 'implementation']","  (0, 35)	0.3355538577715763
  (0, 27)	0.4189149035221328
  (0, 7)	0.4189149035221328
  (0, 6)	0.4189149035221328
  (0, 5)	0.60077826138746",4674,0
1500.0,dp,['dp'],"  (0, 21)	1.0",864,2
1000.0,"brute force,strings","['brute force', 'strings']","  (0, 61)	0.5850532379797061
  (0, 27)	0.4682281170289618
  (0, 7)	0.4682281170289618
  (0, 6)	0.4682281170289618",5670,1
1500.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",3766,2
1500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",5050,2
2500.0,"dfs and similar,graphs,hashing,shortest paths","['dfs and similar', 'graphs', 'hashing', 'shortest paths']","  (0, 55)	0.29755006201371914
  (0, 54)	0.397572101211089
  (0, 53)	0.397572101211089
  (0, 45)	0.397572101211089
  (0, 34)	0.3995945521297623
  (0, 32)	0.3170573271679887
  (0, 18)	0.29755006201371914
  (0, 17)	0.29755006201371914",1232,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5413,0
2000.0,"binary search,geometry","['binary search', 'geometry']","  (0, 52)	0.470596263078465
  (0, 29)	0.5677048781508689
  (0, 4)	0.47762450130845013
  (0, 3)	0.47762450130845013",6049,2
2000.0,"geometry,graphs,shortest paths,sortings","['geometry', 'graphs', 'shortest paths', 'sortings']","  (0, 56)	0.33589615468100004
  (0, 54)	0.44730931404671503
  (0, 53)	0.44730931404671503
  (0, 45)	0.44730931404671503
  (0, 32)	0.35672195080332825
  (0, 29)	0.39958272708759224",1584,3
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3604,2
2000.0,"games,greedy","['games', 'greedy']","  (0, 33)	0.5153230566136275
  (0, 28)	0.8569960019290569",4938,4
2500.0,"geometry,shortest paths","['geometry', 'shortest paths']","  (0, 54)	0.51312489191749
  (0, 53)	0.51312489191749
  (0, 45)	0.51312489191749
  (0, 29)	0.4583759765563558",5578,4
1500.0,"brute force,geometry,math","['brute force', 'geometry', 'math']","  (0, 37)	0.396319773097929
  (0, 29)	0.5640497270514321
  (0, 27)	0.4182417733260716
  (0, 7)	0.4182417733260716
  (0, 6)	0.4182417733260716",4753,2
1500.0,"brute force,constructive algorithms,greedy","['brute force', 'constructive algorithms', 'greedy']","  (0, 33)	0.3460463712851132
  (0, 27)	0.36351124193785384
  (0, 14)	0.40159292817263054
  (0, 13)	0.40159292817263054
  (0, 7)	0.36351124193785384
  (0, 6)	0.36351124193785384
  (0, 2)	0.40159292817263054",1615,2
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3123,0
3000.0,"data structures,math","['data structures', 'math']","  (0, 62)	0.5006188722082621
  (0, 37)	0.4763110282242326
  (0, 16)	0.5111303890304811
  (0, 15)	0.5111303890304811",6010,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",1290,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5583,0
1500.0,"binary search,brute force,number theory","['binary search', 'brute force', 'number theory']","  (0, 68)	0.3761780565036269
  (0, 52)	0.32463139764781135
  (0, 43)	0.3761780565036269
  (0, 42)	0.3761780565036269
  (0, 27)	0.290385339925356
  (0, 7)	0.290385339925356
  (0, 6)	0.290385339925356
  (0, 4)	0.32947968688979673
  (0, 3)	0.32947968688979673",2852,2
1500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1365,2
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",5251,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",5138,0
2500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",1951,4
2000.0,"hashing,trees","['hashing', 'trees']","  (0, 69)	0.6347952820295472
  (0, 34)	0.772680367236691",4118,3
2500.0,graphs,['graphs'],"  (0, 32)	1.0",4188,3
1500.0,"bitmasks,dp,probabilities","['bitmasks', 'dp', 'probabilities']","  (0, 47)	0.6621921740240961
  (0, 21)	0.4120681025919987
  (0, 5)	0.625860530379949",3133,2
2000.0,"dfs and similar,dp,dsu,implementation,sortings,trees","['dfs and similar', 'dp', 'dsu', 'implementation', 'sortings', 'trees']","  (0, 69)	0.38966170995472604
  (0, 56)	0.3543621699889047
  (0, 55)	0.35317862037084496
  (0, 35)	0.25037759625018746
  (0, 22)	0.4456286544541806
  (0, 21)	0.2951473398831299
  (0, 18)	0.35317862037084496
  (0, 17)	0.35317862037084496",4796,3
1000.0,"data structures,implementation,math","['data structures', 'implementation', 'math']","  (0, 62)	0.464390219680928
  (0, 37)	0.44184147924307826
  (0, 35)	0.37349481377683535
  (0, 16)	0.47414104186770994
  (0, 15)	0.47414104186770994",4512,1
1000.0,"dp,greedy,number theory","['dp', 'greedy', 'number theory']","  (0, 68)	0.4956036491532467
  (0, 43)	0.4956036491532467
  (0, 42)	0.4956036491532467
  (0, 33)	0.3641934891613699
  (0, 21)	0.36123976980728983",1103,1
2000.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",297,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2370,0
2500.0,"data structures,sortings","['data structures', 'sortings']","  (0, 62)	0.4777870182358637
  (0, 56)	0.5438607827303986
  (0, 16)	0.48781913360033374
  (0, 15)	0.48781913360033374",1894,4
1500.0,"combinatorics,dp,math,number theory","['combinatorics', 'dp', 'math', 'number theory']","  (0, 68)	0.4435606142822844
  (0, 43)	0.4435606142822844
  (0, 42)	0.4435606142822844
  (0, 37)	0.3244535560640199
  (0, 21)	0.3233062033999812
  (0, 11)	0.44717438787688807",3852,2
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",4685,0
2000.0,greedy,['greedy'],"  (0, 33)	1.0",4438,3
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",3129,0
2250.0,"combinatorics,math,number theory","['combinatorics', 'math', 'number theory']","  (0, 68)	0.468734267535072
  (0, 43)	0.468734267535072
  (0, 42)	0.468734267535072
  (0, 37)	0.3428674572400869
  (0, 11)	0.47255313572210667",5786,4
1750.0,"dp,greedy,strings","['dp', 'greedy', 'strings']","  (0, 61)	0.6817561626665942
  (0, 33)	0.5194067959652529
  (0, 21)	0.5151942497458901",3240,3
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",6301,0
2500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",5208,3
1000.0,"binary search,data structures,number theory","['binary search', 'data structures', 'number theory']","  (0, 68)	0.3752316661236292
  (0, 62)	0.2884799435721012
  (0, 52)	0.32381468857489354
  (0, 43)	0.3752316661236292
  (0, 42)	0.3752316661236292
  (0, 16)	0.29453716983357836
  (0, 15)	0.29453716983357836
  (0, 4)	0.32865078046985474
  (0, 3)	0.32865078046985474",1008,1
2000.0,"data structures,divide and conquer,geometry","['data structures', 'divide and conquer', 'geometry']","  (0, 62)	0.2887684279459321
  (0, 29)	0.39102523066922873
  (0, 20)	0.44341875909730943
  (0, 19)	0.44341875909730943
  (0, 16)	0.294831711526693
  (0, 15)	0.294831711526693
  (0, 12)	0.44341875909730943",4894,3
2000.0,"binary search,brute force,greedy,implementation","['binary search', 'brute force', 'greedy', 'implementation']","  (0, 52)	0.3863594735862269
  (0, 35)	0.27682936481162623
  (0, 33)	0.3289971868932972
  (0, 27)	0.3456015896294636
  (0, 7)	0.3456015896294636
  (0, 6)	0.3456015896294636
  (0, 4)	0.3921296563008374
  (0, 3)	0.3921296563008374",3148,4
2500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",5591,1
1500.0,"data structures,dfs and similar,sortings","['data structures', 'dfs and similar', 'sortings']","  (0, 62)	0.3483289781393279
  (0, 56)	0.39649982830846786
  (0, 55)	0.39517554129337845
  (0, 18)	0.39517554129337845
  (0, 17)	0.39517554129337845
  (0, 16)	0.35564285725304756
  (0, 15)	0.35564285725304756",4469,2
1000.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",6514,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",5238,0
1000.0,"geometry,sortings","['geometry', 'sortings']","  (0, 56)	0.6434690898301128
  (0, 29)	0.7654720964432382",3346,1
1500.0,implementation,['implementation'],"  (0, 35)	1.0",1100,3
1000.0,geometry,['geometry'],"  (0, 29)	1.0",5085,1
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5422,3
1500.0,"constructive algorithms,dfs and similar,graphs","['constructive algorithms', 'dfs and similar', 'graphs']","  (0, 55)	0.3778708596869703
  (0, 32)	0.40264392477759575
  (0, 18)	0.3778708596869703
  (0, 17)	0.3778708596869703
  (0, 14)	0.36946750422645813
  (0, 13)	0.36946750422645813
  (0, 2)	0.36946750422645813",6370,2
2500.0,"data structures,flows,graphs,trees","['data structures', 'flows', 'graphs', 'trees']","  (0, 69)	0.4205483558867618
  (0, 62)	0.33598675867720934
  (0, 32)	0.40616300376218034
  (0, 26)	0.5567123747688592
  (0, 16)	0.34304148765756054
  (0, 15)	0.34304148765756054",5803,4
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",4855,1
500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",5940,0
1500.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",6097,3
1000.0,greedy,['greedy'],"  (0, 33)	1.0",1426,1
1000.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",4219,1
2500.0,"2-sat,dfs and similar,dsu,graphs","['2-sat', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.25109443661209574
  (0, 50)	0.46148026231845224
  (0, 32)	0.26755608921806373
  (0, 22)	0.3168223371247297
  (0, 18)	0.25109443661209574
  (0, 17)	0.25109443661209574
  (0, 1)	0.46148026231845224
  (0, 0)	0.46148026231845224",4501,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5619,0
500.0,strings,['strings'],"  (0, 61)	1.0",5689,1
2000.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",4381,3
2000.0,math,['math'],"  (0, 37)	1.0",554,3
1000.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",1011,1
2000.0,"data structures,dp,greedy,implementation,math,trees","['data structures', 'dp', 'greedy', 'implementation', 'math', 'trees']","  (0, 69)	0.4420903962204637
  (0, 62)	0.3531972416233443
  (0, 37)	0.33604754167875617
  (0, 35)	0.28406571111088497
  (0, 33)	0.337597205093902
  (0, 21)	0.33485918964814165
  (0, 16)	0.36061333988290145
  (0, 15)	0.36061333988290145",2279,3
500.0,"binary search,data structures,shortest paths","['binary search', 'data structures', 'shortest paths']","  (0, 62)	0.26885963901976334
  (0, 54)	0.40755095794837876
  (0, 53)	0.40755095794837876
  (0, 52)	0.30179117203613653
  (0, 45)	0.40755095794837876
  (0, 16)	0.2745048968701232
  (0, 15)	0.2745048968701232
  (0, 4)	0.3062983481851803
  (0, 3)	0.3062983481851803",1294,1
2500.0,"binary search,dp,two pointers","['binary search', 'dp', 'two pointers']","  (0, 52)	0.4355498317399732
  (0, 46)	0.533046623272221
  (0, 21)	0.3678763327947699
  (0, 4)	0.4420546602281417
  (0, 3)	0.4420546602281417",6077,4
3000.0,"constructive algorithms,dfs and similar,geometry","['constructive algorithms', 'dfs and similar', 'geometry']","  (0, 55)	0.3703016759881988
  (0, 29)	0.441987817316551
  (0, 18)	0.3703016759881988
  (0, 17)	0.3703016759881988
  (0, 14)	0.36206664930863414
  (0, 13)	0.36206664930863414
  (0, 2)	0.36206664930863414",4071,4
500.0,two pointers,['two pointers'],"  (0, 46)	1.0",122,1
1750.0,"constructive algorithms,greedy,trees","['constructive algorithms', 'greedy', 'trees']","  (0, 69)	0.5038388063317816
  (0, 33)	0.3847506625107361
  (0, 14)	0.44650994200641453
  (0, 13)	0.44650994200641453
  (0, 2)	0.44650994200641453",368,3
1500.0,"bitmasks,constructive algorithms,dp,greedy,trees","['bitmasks', 'constructive algorithms', 'dp', 'greedy', 'trees']","  (0, 69)	0.41392740717107457
  (0, 33)	0.3160908650524808
  (0, 21)	0.3135272725294422
  (0, 14)	0.36682903390556804
  (0, 13)	0.36682903390556804
  (0, 5)	0.47619396852015816
  (0, 2)	0.36682903390556804",3548,2
2500.0,"binary search,dsu,geometry,graphs,sortings","['binary search', 'dsu', 'geometry', 'graphs', 'sortings']","  (0, 56)	0.35135925906832427
  (0, 52)	0.34648060195361424
  (0, 32)	0.3731437784594393
  (0, 29)	0.41797766651818835
  (0, 22)	0.4418523395246668
  (0, 4)	0.3516552036316403
  (0, 3)	0.3516552036316403",5566,4
2500.0,"combinatorics,dfs and similar,trees","['combinatorics', 'dfs and similar', 'trees']","  (0, 69)	0.4681855106610806
  (0, 55)	0.42435042630211733
  (0, 18)	0.42435042630211733
  (0, 17)	0.42435042630211733
  (0, 11)	0.4904920740426464",4743,4
3000.0,"data structures,string suffix structures","['data structures', 'string suffix structures']","  (0, 64)	0.38627136634781206
  (0, 63)	0.38627136634781206
  (0, 62)	0.3834548454759982
  (0, 60)	0.38627136634781206
  (0, 59)	0.38627136634781206
  (0, 58)	0.38627136634781206
  (0, 16)	0.2312299063485842
  (0, 15)	0.2312299063485842",5284,4
2500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",5461,4
1500.0,"brute force,dfs and similar","['brute force', 'dfs and similar']","  (0, 55)	0.4323414917201438
  (0, 27)	0.3826410431076809
  (0, 18)	0.4323414917201438
  (0, 17)	0.4323414917201438
  (0, 7)	0.3826410431076809
  (0, 6)	0.3826410431076809",690,2
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",4840,1
2250.0,"dp,sortings","['dp', 'sortings']","  (0, 56)	0.7683859805869373
  (0, 21)	0.6399867067662038",98,4
2000.0,"math,number theory,probabilities","['math', 'number theory', 'probabilities']","  (0, 68)	0.45142932155529103
  (0, 47)	0.5287688607512789
  (0, 43)	0.45142932155529103
  (0, 42)	0.45142932155529103
  (0, 37)	0.3302093197052188",5607,3
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5062,2
1000.0,"brute force,dfs and similar,graphs","['brute force', 'dfs and similar', 'graphs']","  (0, 55)	0.3926758377958515
  (0, 32)	0.41841951143422373
  (0, 27)	0.34753521245341634
  (0, 18)	0.3926758377958515
  (0, 17)	0.3926758377958515
  (0, 7)	0.34753521245341634
  (0, 6)	0.34753521245341634",5117,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",475,1
1500.0,"brute force,dp,greedy","['brute force', 'dp', 'greedy']","  (0, 33)	0.434605795394828
  (0, 27)	0.45654023722501946
  (0, 21)	0.43108101093970486
  (0, 7)	0.45654023722501946
  (0, 6)	0.45654023722501946",4950,2
2500.0,"dfs and similar,hashing,strings","['dfs and similar', 'hashing', 'strings']","  (0, 61)	0.4504760352005357
  (0, 55)	0.407351349151642
  (0, 34)	0.5470520786387862
  (0, 18)	0.407351349151642
  (0, 17)	0.407351349151642",2210,4
3500.0,"combinatorics,divide and conquer,dp,fft,math,number theory","['combinatorics', 'divide and conquer', 'dp', 'fft', 'math', 'number theory']","  (0, 68)	0.294881006554023
  (0, 43)	0.294881006554023
  (0, 42)	0.294881006554023
  (0, 37)	0.21569812131990174
  (0, 25)	0.440993696770922
  (0, 21)	0.21493535632781235
  (0, 20)	0.3481186548248599
  (0, 19)	0.3481186548248599
  (0, 12)	0.3481186548248599
  (0, 11)	0.29728345880231233",6248,6
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",6231,0
1500.0,"data structures,divide and conquer","['data structures', 'divide and conquer']","  (0, 62)	0.31374914796161846
  (0, 20)	0.48177793828287807
  (0, 19)	0.48177793828287807
  (0, 16)	0.32033695283642843
  (0, 15)	0.32033695283642843
  (0, 12)	0.48177793828287807",4581,2
2500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",262,4
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",5810,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3683,0
2500.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",3222,4
500.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",5881,0
1250.0,"combinatorics,data structures,dp,two pointers","['combinatorics', 'data structures', 'dp', 'two pointers']","  (0, 62)	0.3629657082223238
  (0, 46)	0.4986247861104686
  (0, 21)	0.3441204760455239
  (0, 16)	0.3705869154114136
  (0, 15)	0.3705869154114136
  (0, 11)	0.4759632249962867",2298,1
1000.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",2265,1
2000.0,dp,['dp'],"  (0, 21)	1.0",1410,3
3000.0,"constructive algorithms,math,sortings","['constructive algorithms', 'math', 'sortings']","  (0, 56)	0.4689321668071356
  (0, 37)	0.391958463210417
  (0, 14)	0.4569723500210536
  (0, 13)	0.4569723500210536
  (0, 2)	0.4569723500210536",811,6
1500.0,"dfs and similar,graphs,two pointers","['dfs and similar', 'graphs', 'two pointers']","  (0, 55)	0.42251326644382187
  (0, 46)	0.5116207682212114
  (0, 32)	0.4502130701808352
  (0, 18)	0.42251326644382187
  (0, 17)	0.42251326644382187",642,2
1500.0,flows,['flows'],"  (0, 26)	1.0",3189,2
500.0,"constructive algorithms,sortings","['constructive algorithms', 'sortings']","  (0, 56)	0.5097183429994464
  (0, 14)	0.4967183007198006
  (0, 13)	0.4967183007198006
  (0, 2)	0.4967183007198006",761,0
1500.0,"dfs and similar,dp,graphs,implementation","['dfs and similar', 'dp', 'graphs', 'implementation']","  (0, 55)	0.43288951718482277
  (0, 35)	0.3068867437129482
  (0, 32)	0.46126958384345007
  (0, 21)	0.3617608260835146
  (0, 18)	0.43288951718482277
  (0, 17)	0.43288951718482277",128,2
2000.0,"constructive algorithms,dfs and similar,graphs","['constructive algorithms', 'dfs and similar', 'graphs']","  (0, 55)	0.3778708596869703
  (0, 32)	0.40264392477759575
  (0, 18)	0.3778708596869703
  (0, 17)	0.3778708596869703
  (0, 14)	0.36946750422645813
  (0, 13)	0.36946750422645813
  (0, 2)	0.36946750422645813",3039,3
1000.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",5544,2
2750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1464,4
1500.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",5928,2
2500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",1301,4
1500.0,math,['math'],"  (0, 37)	1.0",6298,2
500.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",6106,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",3767,0
1000.0,"greedy,math,number theory","['greedy', 'math', 'number theory']","  (0, 68)	0.49537388813748773
  (0, 43)	0.49537388813748773
  (0, 42)	0.49537388813748773
  (0, 37)	0.36235367706741684
  (0, 33)	0.3640246496741194",751,1
500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",3068,0
500.0,math,['math'],"  (0, 37)	1.0",3146,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2074,0
750.0,"constructive algorithms,graphs,trees","['constructive algorithms', 'graphs', 'trees']","  (0, 69)	0.48286683288490223
  (0, 32)	0.4663498038129799
  (0, 14)	0.42792424648267635
  (0, 13)	0.42792424648267635
  (0, 2)	0.42792424648267635",1712,1
2500.0,"data structures,string suffix structures","['data structures', 'string suffix structures']","  (0, 64)	0.38627136634781206
  (0, 63)	0.38627136634781206
  (0, 62)	0.3834548454759982
  (0, 60)	0.38627136634781206
  (0, 59)	0.38627136634781206
  (0, 58)	0.38627136634781206
  (0, 16)	0.2312299063485842
  (0, 15)	0.2312299063485842",2502,4
1500.0,math,['math'],"  (0, 37)	1.0",3982,2
1750.0,"geometry,implementation","['geometry', 'implementation']","  (0, 35)	0.510662887170297
  (0, 29)	0.8597810277430508",5553,2
2500.0,"bitmasks,dfs and similar,dp,games,implementation","['bitmasks', 'dfs and similar', 'dp', 'games', 'implementation']","  (0, 55)	0.358628636955546
  (0, 35)	0.2542412560905489
  (0, 28)	0.5024875149409699
  (0, 21)	0.29970185650592096
  (0, 18)	0.358628636955546
  (0, 17)	0.358628636955546
  (0, 5)	0.4551955409525388",4759,4
2500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",1863,2
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5401,2
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2972,1
1500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",1378,2
3000.0,"binary search,dfs and similar,hashing,string suffix structures,trees","['binary search', 'dfs and similar', 'hashing', 'string suffix structures', 'trees']","  (0, 69)	0.24021993724253426
  (0, 64)	0.3273318532276499
  (0, 63)	0.3273318532276499
  (0, 62)	0.19191780672540346
  (0, 60)	0.3273318532276499
  (0, 59)	0.3273318532276499
  (0, 58)	0.3273318532276499
  (0, 55)	0.21772872174365468
  (0, 52)	0.21542504496930726
  (0, 34)	0.2923985646722193
  (0, 18)	0.21772872174365468
  (0, 17)	0.21772872174365468
  (0, 4)	0.2186423644755123
  (0, 3)	0.2186423644755123",1249,4
1750.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",5089,2
2500.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",567,4
2000.0,"constructive algorithms,graphs,implementation","['constructive algorithms', 'graphs', 'implementation']","  (0, 35)	0.33396679414160024
  (0, 32)	0.501972559281737
  (0, 14)	0.46061181419894315
  (0, 13)	0.46061181419894315
  (0, 2)	0.46061181419894315",2971,3
500.0,"implementation,math,number theory","['implementation', 'math', 'number theory']","  (0, 68)	0.5052449415657008
  (0, 43)	0.5052449415657008
  (0, 42)	0.5052449415657008
  (0, 37)	0.3695741071140833
  (0, 35)	0.3124061881871792",5895,0
2500.0,"data structures,divide and conquer,trees","['data structures', 'divide and conquer', 'trees']","  (0, 69)	0.36553690922114707
  (0, 62)	0.29203671726912717
  (0, 20)	0.44843738528982896
  (0, 19)	0.44843738528982896
  (0, 16)	0.2981686252668005
  (0, 15)	0.2981686252668005
  (0, 12)	0.44843738528982896",2542,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2168,1
1500.0,"geometry,ternary search,two pointers","['geometry', 'ternary search', 'two pointers']","  (0, 66)	0.5416528632516439
  (0, 65)	0.5416528632516439
  (0, 52)	0.32331411621776407
  (0, 46)	0.3956872103879283
  (0, 29)	0.39003072347231504",2125,3
1500.0,"binary search,brute force,data structures,dp,two pointers","['binary search', 'brute force', 'data structures', 'dp', 'two pointers']","  (0, 62)	0.2800432759422315
  (0, 52)	0.3143446475476103
  (0, 46)	0.3847099475381844
  (0, 27)	0.2811837610077962
  (0, 21)	0.26550338846765376
  (0, 16)	0.28592335711662137
  (0, 15)	0.28592335711662137
  (0, 7)	0.2811837610077962
  (0, 6)	0.2811837610077962
  (0, 4)	0.3190393067334546
  (0, 3)	0.3190393067334546",1528,2
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1353,0
1500.0,"combinatorics,number theory","['combinatorics', 'number theory']","  (0, 68)	0.4989805785806445
  (0, 43)	0.4989805785806445
  (0, 42)	0.4989805785806445
  (0, 11)	0.5030458692783151",3876,2
1000.0,greedy,['greedy'],"  (0, 33)	1.0",4992,1
2500.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",1607,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",4538,1
3000.0,"binary search,geometry,two pointers","['binary search', 'geometry', 'two pointers']","  (0, 52)	0.4077974502139135
  (0, 46)	0.49908193730016853
  (0, 29)	0.4919473866398385
  (0, 4)	0.413887803781396
  (0, 3)	0.413887803781396",693,5
500.0,implementation,['implementation'],"  (0, 35)	1.0",3837,0
1500.0,"binary search,number theory,two pointers","['binary search', 'number theory', 'two pointers']","  (0, 68)	0.39545672051703806
  (0, 52)	0.3412683586168409
  (0, 46)	0.4176604671471055
  (0, 43)	0.39545672051703806
  (0, 42)	0.39545672051703806
  (0, 4)	0.3463651167360511
  (0, 3)	0.3463651167360511",1205,2
2500.0,geometry,['geometry'],"  (0, 29)	1.0",3386,4
500.0,"brute force,strings","['brute force', 'strings']","  (0, 61)	0.5850532379797061
  (0, 27)	0.4682281170289618
  (0, 7)	0.4682281170289618
  (0, 6)	0.4682281170289618",5087,1
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1009,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",825,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",5339,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",1031,0
1250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5536,2
2500.0,"combinatorics,dp,fft,math","['combinatorics', 'dp', 'fft', 'math']","  (0, 37)	0.35196345495905623
  (0, 25)	0.7195874687311848
  (0, 21)	0.3507188200948544
  (0, 11)	0.48508959012702346",672,4
2500.0,"brute force,data structures,math,sortings","['brute force', 'data structures', 'math', 'sortings']","  (0, 62)	0.3468897215026867
  (0, 56)	0.3948615350709418
  (0, 37)	0.33004628690990756
  (0, 27)	0.348302440824158
  (0, 16)	0.35417338048051583
  (0, 15)	0.35417338048051583
  (0, 7)	0.348302440824158
  (0, 6)	0.348302440824158",241,5
500.0,math,['math'],"  (0, 37)	1.0",2028,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2557,0
2000.0,"dp,graphs","['dp', 'graphs']","  (0, 32)	0.7868693546983633
  (0, 21)	0.6171196145291297",850,3
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5451,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4476,1
1250.0,"dp,graphs,greedy","['dp', 'graphs', 'greedy']","  (0, 33)	0.528267206854269
  (0, 32)	0.6681136007019028
  (0, 21)	0.523982800022603",2968,1
2500.0,"constructive algorithms,graphs","['constructive algorithms', 'graphs']","  (0, 32)	0.5325489420502197
  (0, 14)	0.4886688122921944
  (0, 13)	0.4886688122921944
  (0, 2)	0.4886688122921944",3360,4
1500.0,"constructive algorithms,dfs and similar,graphs","['constructive algorithms', 'dfs and similar', 'graphs']","  (0, 55)	0.3778708596869703
  (0, 32)	0.40264392477759575
  (0, 18)	0.3778708596869703
  (0, 17)	0.3778708596869703
  (0, 14)	0.36946750422645813
  (0, 13)	0.36946750422645813
  (0, 2)	0.36946750422645813",2984,2
1250.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",4902,1
2500.0,"math,matrices","['math', 'matrices']","  (0, 38)	0.8680324737481504
  (0, 37)	0.49650742644865503",1268,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6466,1
2000.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",3444,3
2500.0,"data structures,graphs,trees","['data structures', 'graphs', 'trees']","  (0, 69)	0.5062545584049722
  (0, 62)	0.40445961983465434
  (0, 32)	0.48893752461946627
  (0, 16)	0.41295207653938604
  (0, 15)	0.41295207653938604",92,3
1500.0,"data structures,greedy,implementation","['data structures', 'greedy', 'implementation']","  (0, 62)	0.46397174849106426
  (0, 35)	0.3731582502306941
  (0, 33)	0.4434790170308098
  (0, 16)	0.4737137840195797
  (0, 15)	0.4737137840195797",3358,1
1000.0,math,['math'],"  (0, 37)	1.0",5968,1
2500.0,math,['math'],"  (0, 37)	1.0",1228,3
1500.0,"binary search,dp,greedy,implementation","['binary search', 'dp', 'greedy', 'implementation']","  (0, 52)	0.4466750106200948
  (0, 35)	0.32004588452155724
  (0, 33)	0.38035775487914303
  (0, 21)	0.37727293844091403
  (0, 4)	0.4533459908898546
  (0, 3)	0.4533459908898546",1594,2
1000.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",4429,0
1000.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",5174,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3646,0
1500.0,"brute force,two pointers","['brute force', 'two pointers']","  (0, 46)	0.6198595316156775
  (0, 27)	0.45305413990868426
  (0, 7)	0.45305413990868426
  (0, 6)	0.45305413990868426",3493,2
1500.0,implementation,['implementation'],"  (0, 35)	1.0",4226,1
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",88,1
2500.0,"combinatorics,data structures,math","['combinatorics', 'data structures', 'math']","  (0, 62)	0.41849908521232676
  (0, 37)	0.39817861581825986
  (0, 16)	0.4272863291987313
  (0, 15)	0.4272863291987313
  (0, 11)	0.5487851048828195",4559,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1666,0
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",3942,1
2500.0,"constructive algorithms,dp,dsu,graphs","['constructive algorithms', 'dp', 'dsu', 'graphs']","  (0, 32)	0.4247348939856478
  (0, 22)	0.5029431479740444
  (0, 21)	0.33310769124306694
  (0, 14)	0.38973825651398075
  (0, 13)	0.38973825651398075
  (0, 2)	0.38973825651398075",1265,4
2500.0,"data structures,divide and conquer,dp","['data structures', 'divide and conquer', 'dp']","  (0, 62)	0.30072665844050306
  (0, 21)	0.2851128867488997
  (0, 20)	0.4617812364796882
  (0, 19)	0.4617812364796882
  (0, 16)	0.3070410295211283
  (0, 15)	0.3070410295211283
  (0, 12)	0.4617812364796882",404,4
500.0,"data structures,implementation,trees","['data structures', 'implementation', 'trees']","  (0, 69)	0.543776419462992
  (0, 62)	0.4344367872636841
  (0, 35)	0.34940418656607675
  (0, 16)	0.4435586758919923
  (0, 15)	0.4435586758919923",205,0
500.0,math,['math'],"  (0, 37)	1.0",3302,0
1000.0,math,['math'],"  (0, 37)	1.0",5016,1
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",5264,1
2250.0,"dp,math,probabilities,trees","['dp', 'math', 'probabilities', 'trees']","  (0, 69)	0.5246377324296719
  (0, 47)	0.6385952877027135
  (0, 37)	0.3987945039344139
  (0, 21)	0.397384262228193",5542,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2898,0
500.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",3452,0
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",4334,1
1500.0,"dp,probabilities","['dp', 'probabilities']","  (0, 47)	0.8490350839774898
  (0, 21)	0.5283364706087748",186,2
1000.0,math,['math'],"  (0, 37)	1.0",4100,1
2500.0,geometry,['geometry'],"  (0, 29)	1.0",6325,4
1000.0,"expression parsing,greedy,strings","['expression parsing', 'greedy', 'strings']","  (0, 61)	0.354642905999125
  (0, 44)	0.516793183822853
  (0, 33)	0.2701903489897676
  (0, 24)	0.516793183822853
  (0, 23)	0.516793183822853",4012,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",1952,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",3143,0
500.0,"constructive algorithms,number theory","['constructive algorithms', 'number theory']","  (0, 68)	0.4392973494418518
  (0, 43)	0.4392973494418518
  (0, 42)	0.4392973494418518
  (0, 14)	0.37463471823457156
  (0, 13)	0.37463471823457156
  (0, 2)	0.37463471823457156",1670,0
2500.0,"dfs and similar,dp,graphs","['dfs and similar', 'dp', 'graphs']","  (0, 55)	0.45483721344002315
  (0, 32)	0.48465616244160165
  (0, 21)	0.38010226520993595
  (0, 18)	0.45483721344002315
  (0, 17)	0.45483721344002315",623,4
1000.0,greedy,['greedy'],"  (0, 33)	1.0",1942,1
1000.0,greedy,['greedy'],"  (0, 33)	1.0",4882,1
1000.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",5509,1
2250.0,"binary search,dp,hashing,string suffix structures","['binary search', 'dp', 'hashing', 'string suffix structures']","  (0, 64)	0.35860620462320986
  (0, 63)	0.35860620462320986
  (0, 62)	0.21025425906700046
  (0, 60)	0.35860620462320986
  (0, 59)	0.35860620462320986
  (0, 58)	0.35860620462320986
  (0, 52)	0.23600745541711918
  (0, 34)	0.32033527589951494
  (0, 21)	0.19933782746335243
  (0, 4)	0.239532168107937
  (0, 3)	0.239532168107937",1715,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",547,1
1750.0,dp,['dp'],"  (0, 21)	1.0",1677,3
3000.0,"bitmasks,dp,hashing,meet-in-the-middle","['bitmasks', 'dp', 'hashing', 'meet-in-the-middle']","  (0, 41)	0.4797777548066947
  (0, 40)	0.4797777548066947
  (0, 39)	0.4797777548066947
  (0, 34)	0.3683597864076342
  (0, 21)	0.22922245869167338
  (0, 5)	0.34814946526888085",211,5
1500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",3151,2
2000.0,"dfs and similar,graphs,greedy,sortings","['dfs and similar', 'graphs', 'greedy', 'sortings']","  (0, 56)	0.414764682439334
  (0, 55)	0.41337939184383643
  (0, 33)	0.34828110221697045
  (0, 32)	0.4404803823508947
  (0, 18)	0.41337939184383643
  (0, 17)	0.41337939184383643",3038,3
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",4880,0
1000.0,binary search,['binary search'],"  (0, 52)	0.5716446613374037
  (0, 4)	0.5801820322814406
  (0, 3)	0.5801820322814406",2222,1
1500.0,games,['games'],"  (0, 28)	1.0",6046,2
1500.0,"greedy,math,probabilities","['greedy', 'math', 'probabilities']","  (0, 47)	0.7487804907158363
  (0, 37)	0.4676037391772945
  (0, 33)	0.46976006623675903",3846,1
2750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2380,5
1500.0,"dp,greedy,implementation","['dp', 'greedy', 'implementation']","  (0, 35)	0.5128543624762141
  (0, 33)	0.6095005226611119
  (0, 21)	0.6045572890677503",4945,2
1500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",5205,2
1500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",6214,2
2500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",2113,4
2000.0,"brute force,dfs and similar,implementation","['brute force', 'dfs and similar', 'implementation']","  (0, 55)	0.41336141349693994
  (0, 35)	0.29304275832231913
  (0, 27)	0.3658428475407997
  (0, 18)	0.41336141349693994
  (0, 17)	0.41336141349693994
  (0, 7)	0.3658428475407997
  (0, 6)	0.3658428475407997",1175,3
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",907,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4889,1
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4285,2
500.0,"greedy,implementation,two pointers","['greedy', 'implementation', 'two pointers']","  (0, 46)	0.7398542788524585
  (0, 35)	0.4331511124832791
  (0, 33)	0.5147773886042455",1792,0
2000.0,"bitmasks,combinatorics,dp","['bitmasks', 'combinatorics', 'dp']","  (0, 21)	0.43769289963437547
  (0, 11)	0.60538601614742
  (0, 5)	0.6647801870263645",6128,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2006,1
2000.0,"geometry,probabilities","['geometry', 'probabilities']","  (0, 47)	0.7474490973270902
  (0, 29)	0.6643190851578163",2790,3
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5072,4
2500.0,"binary search,brute force,data structures,math,two pointers","['binary search', 'brute force', 'data structures', 'math', 'two pointers']","  (0, 62)	0.2799731215462639
  (0, 52)	0.31426590022257583
  (0, 46)	0.38461357281216585
  (0, 37)	0.2663788618487647
  (0, 27)	0.28111332090584046
  (0, 16)	0.2858517296856679
  (0, 15)	0.2858517296856679
  (0, 7)	0.28111332090584046
  (0, 6)	0.28111332090584046
  (0, 4)	0.3189593833366921
  (0, 3)	0.3189593833366921",5427,3
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",3341,2
1000.0,"binary search,graphs,matrices","['binary search', 'graphs', 'matrices']","  (0, 52)	0.3947921152427221
  (0, 38)	0.5850341171945385
  (0, 32)	0.42517307103785773
  (0, 4)	0.40068823736467557
  (0, 3)	0.40068823736467557",3079,1
3000.0,"data structures,greedy,hashing,strings","['data structures', 'greedy', 'hashing', 'strings']","  (0, 62)	0.35592533906997353
  (0, 61)	0.44654156639679665
  (0, 34)	0.5422741122893294
  (0, 33)	0.3402048077721472
  (0, 16)	0.36339871931348067
  (0, 15)	0.36339871931348067",4192,3
1000.0,"brute force,dp,implementation","['brute force', 'dp', 'implementation']","  (0, 35)	0.3762135261786677
  (0, 27)	0.4696755807532483
  (0, 21)	0.4434838545567469
  (0, 7)	0.4696755807532483
  (0, 6)	0.4696755807532483",3337,1
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",3071,4
2500.0,greedy,['greedy'],"  (0, 33)	1.0",808,4
3000.0,"combinatorics,dp,probabilities","['combinatorics', 'dp', 'probabilities']","  (0, 47)	0.6855071140834587
  (0, 21)	0.4265764937950003
  (0, 11)	0.5900105859071787",1107,4
2500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",3445,4
2500.0,graphs,['graphs'],"  (0, 32)	1.0",2250,4
2000.0,greedy,['greedy'],"  (0, 33)	1.0",5178,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",498,0
3000.0,"data structures,divide and conquer","['data structures', 'divide and conquer']","  (0, 62)	0.31374914796161846
  (0, 20)	0.48177793828287807
  (0, 19)	0.48177793828287807
  (0, 16)	0.32033695283642843
  (0, 15)	0.32033695283642843
  (0, 12)	0.48177793828287807",4113,5
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",4986,2
500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",244,0
1500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",4282,2
2000.0,"combinatorics,math,sortings","['combinatorics', 'math', 'sortings']","  (0, 56)	0.5748867559899613
  (0, 37)	0.4805209481193953
  (0, 11)	0.6622724788225586",3845,3
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",6189,0
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",2022,4
2000.0,"binary search,data structures,trees","['binary search', 'data structures', 'trees']","  (0, 69)	0.4291381111254199
  (0, 62)	0.34284933221974967
  (0, 52)	0.3848435643953208
  (0, 16)	0.3500481549633222
  (0, 15)	0.3500481549633222
  (0, 4)	0.3905911073829198
  (0, 3)	0.3905911073829198",5655,3
1500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",2310,2
2000.0,"bitmasks,brute force,dp","['bitmasks', 'brute force', 'dp']","  (0, 27)	0.41001838997620654
  (0, 21)	0.3871534809925115
  (0, 7)	0.41001838997620654
  (0, 6)	0.41001838997620654
  (0, 5)	0.588019508009164",2564,3
1500.0,dp,['dp'],"  (0, 21)	1.0",6473,4
2000.0,"binary search,data structures,greedy,sortings,two pointers","['binary search', 'data structures', 'greedy', 'sortings', 'two pointers']","  (0, 62)	0.3010036036077136
  (0, 56)	0.34262976852574895
  (0, 52)	0.3378723212270439
  (0, 46)	0.4135042348833809
  (0, 33)	0.28770885875015995
  (0, 16)	0.3073237897183858
  (0, 15)	0.3073237897183858
  (0, 4)	0.3429183603718677
  (0, 3)	0.3429183603718677",2526,3
2500.0,games,['games'],"  (0, 28)	1.0",2320,4
3000.0,"binary search,constructive algorithms,data structures","['binary search', 'constructive algorithms', 'data structures']","  (0, 62)	0.3066850129982048
  (0, 52)	0.34424962354369026
  (0, 16)	0.3131244919156356
  (0, 15)	0.3131244919156356
  (0, 14)	0.3401933734743868
  (0, 13)	0.3401933734743868
  (0, 4)	0.34939090611363777
  (0, 3)	0.34939090611363777
  (0, 2)	0.3401933734743868",1679,4
1500.0,greedy,['greedy'],"  (0, 33)	1.0",3060,2
1500.0,dp,['dp'],"  (0, 21)	1.0",6436,2
3000.0,"bitmasks,data structures,dfs and similar","['bitmasks', 'data structures', 'dfs and similar']","  (0, 62)	0.332971282061021
  (0, 55)	0.3777523975366262
  (0, 18)	0.3777523975366262
  (0, 17)	0.3777523975366262
  (0, 16)	0.3399626949441618
  (0, 15)	0.3399626949441618
  (0, 5)	0.4794687016701273",6397,6
2250.0,"constructive algorithms,divide and conquer","['constructive algorithms', 'divide and conquer']","  (0, 20)	0.46800962638069854
  (0, 19)	0.46800962638069854
  (0, 14)	0.3380833077043767
  (0, 13)	0.3380833077043767
  (0, 12)	0.46800962638069854
  (0, 2)	0.3380833077043767",3449,4
30.0,"brute force,dfs and similar","['brute force', 'dfs and similar']","  (0, 55)	0.4323414917201438
  (0, 27)	0.3826410431076809
  (0, 18)	0.4323414917201438
  (0, 17)	0.4323414917201438
  (0, 7)	0.3826410431076809
  (0, 6)	0.3826410431076809",1651,14
2000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",1650,3
2000.0,"dp,math,matrices","['dp', 'math', 'matrices']","  (0, 38)	0.7780183010729851
  (0, 37)	0.4450200609750239
  (0, 21)	0.44344635360468576",6469,3
2000.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",1700,3
2000.0,math,['math'],"  (0, 37)	1.0",5197,3
500.0,"binary search,combinatorics,constructive algorithms,implementation,math","['binary search', 'combinatorics', 'constructive algorithms', 'implementation', 'math']","  (0, 52)	0.34126506763154774
  (0, 37)	0.2892639648146688
  (0, 35)	0.24451889590783882
  (0, 14)	0.3372439842096347
  (0, 13)	0.3372439842096347
  (0, 11)	0.3986747378269391
  (0, 4)	0.3463617766007105
  (0, 3)	0.3463617766007105
  (0, 2)	0.3372439842096347",3925,1
2000.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",1511,3
1000.0,"constructive algorithms,implementation,sortings","['constructive algorithms', 'implementation', 'sortings']","  (0, 56)	0.4795652823376886
  (0, 35)	0.33884091702145436
  (0, 14)	0.4673342747001098
  (0, 13)	0.4673342747001098
  (0, 2)	0.4673342747001098",2750,1
2500.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",2196,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",3780,0
2000.0,"binary search,flows","['binary search', 'flows']","  (0, 52)	0.43688634507773566
  (0, 26)	0.6449057713085654
  (0, 4)	0.4434111340604349
  (0, 3)	0.4434111340604349",3784,3
1000.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",5708,1
1000.0,shortest paths,['shortest paths'],"  (0, 54)	0.5773502691896257
  (0, 53)	0.5773502691896257
  (0, 45)	0.5773502691896257",2027,1
2000.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",2867,3
2500.0,"dp,flows","['dp', 'flows']","  (0, 26)	0.8679603090656582
  (0, 21)	0.4966335690291655",2373,4
1500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",5527,2
2000.0,greedy,['greedy'],"  (0, 33)	1.0",1493,3
2000.0,"binary search,data structures,dfs and similar,graph matchings,graphs","['binary search', 'data structures', 'dfs and similar', 'graph matchings', 'graphs']","  (0, 62)	0.21241543010251915
  (0, 55)	0.24098305865397493
  (0, 52)	0.23843333957793142
  (0, 36)	0.38586758141322836
  (0, 32)	0.2567818132939025
  (0, 31)	0.38586758141322836
  (0, 30)	0.38586758141322836
  (0, 18)	0.24098305865397493
  (0, 17)	0.24098305865397493
  (0, 16)	0.21687552637690144
  (0, 15)	0.21687552637690144
  (0, 4)	0.24199428224577668
  (0, 3)	0.24199428224577668",5926,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",142,0
2000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",1809,2
1500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",895,2
500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4139,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3044,0
1000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4337,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",5999,0
2250.0,"constructive algorithms,implementation,math,trees","['constructive algorithms', 'implementation', 'math', 'trees']","  (0, 69)	0.4796392003430384
  (0, 37)	0.36458963041500614
  (0, 35)	0.30819273996206903
  (0, 14)	0.4250638673277277
  (0, 13)	0.4250638673277277
  (0, 2)	0.4250638673277277",5971,4
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",3209,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1101,0
1000.0,"binary search,data structures,games,greedy,sortings","['binary search', 'data structures', 'games', 'greedy', 'sortings']","  (0, 62)	0.29264429746319703
  (0, 56)	0.3331144434764704
  (0, 52)	0.3284891173814972
  (0, 33)	0.27971876693080594
  (0, 28)	0.46517977770973096
  (0, 16)	0.29878896284934564
  (0, 15)	0.29878896284934564
  (0, 4)	0.33339502070893134
  (0, 3)	0.33339502070893134",4150,1
1500.0,"data structures,greedy,sortings","['data structures', 'greedy', 'sortings']","  (0, 62)	0.43461045807336557
  (0, 56)	0.494713282046338
  (0, 33)	0.41541455781417724
  (0, 16)	0.44373599327542246
  (0, 15)	0.44373599327542246",1204,2
2250.0,flows,['flows'],"  (0, 26)	1.0",5687,4
500.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",3101,0
1000.0,strings,['strings'],"  (0, 61)	1.0",2834,1
500.0,geometry,['geometry'],"  (0, 29)	1.0",4849,0
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",6383,1
2000.0,"binary search,dp,two pointers","['binary search', 'dp', 'two pointers']","  (0, 52)	0.4355498317399732
  (0, 46)	0.533046623272221
  (0, 21)	0.3678763327947699
  (0, 4)	0.4420546602281417
  (0, 3)	0.4420546602281417",730,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",688,0
750.0,"constructive algorithms,strings","['constructive algorithms', 'strings']","  (0, 61)	0.5467493268887392
  (0, 14)	0.4834132716240183
  (0, 13)	0.4834132716240183
  (0, 2)	0.4834132716240183",5252,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",294,0
1000.0,"brute force,greedy,implementation,math,strings","['brute force', 'greedy', 'implementation', 'math', 'strings']","  (0, 61)	0.47203206139980275
  (0, 37)	0.3579743698783271
  (0, 35)	0.3026007672336034
  (0, 33)	0.3596251475682607
  (0, 27)	0.37777533553996917
  (0, 7)	0.37777533553996917
  (0, 6)	0.37777533553996917",3662,1
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5719,3
1000.0,"brute force,strings","['brute force', 'strings']","  (0, 61)	0.5850532379797061
  (0, 27)	0.4682281170289618
  (0, 7)	0.4682281170289618
  (0, 6)	0.4682281170289618",4903,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",2463,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",6368,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",4677,0
1500.0,"binary search,implementation,sortings,two pointers","['binary search', 'implementation', 'sortings', 'two pointers']","  (0, 56)	0.41059831629458765
  (0, 52)	0.4048971191711926
  (0, 46)	0.4955323740676037
  (0, 35)	0.290111722313451
  (0, 4)	0.41094415701538245
  (0, 3)	0.41094415701538245",4955,1
1500.0,"data structures,dfs and similar,dsu,graphs,greedy","['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy']","  (0, 62)	0.29656337695833024
  (0, 55)	0.3364480142976327
  (0, 33)	0.2834647482924292
  (0, 32)	0.3585054139201163
  (0, 22)	0.4245185502672965
  (0, 18)	0.3364480142976327
  (0, 17)	0.3364480142976327
  (0, 16)	0.30279033143170203
  (0, 15)	0.30279033143170203",1841,4
2000.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",6345,3
3500.0,"bitmasks,data structures,fft","['bitmasks', 'data structures', 'fft']","  (0, 62)	0.3344074437905002
  (0, 25)	0.6504971155657003
  (0, 16)	0.3414290118256277
  (0, 15)	0.3414290118256277
  (0, 5)	0.4815367316682684",1038,6
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1484,0
1500.0,"brute force,dp,hashing,strings","['brute force', 'dp', 'hashing', 'strings']","  (0, 61)	0.44868228659279963
  (0, 34)	0.544873774294626
  (0, 27)	0.35908811123079853
  (0, 21)	0.3390633582413153
  (0, 7)	0.35908811123079853
  (0, 6)	0.35908811123079853",5513,3
2000.0,"combinatorics,dp,probabilities","['combinatorics', 'dp', 'probabilities']","  (0, 47)	0.6855071140834587
  (0, 21)	0.4265764937950003
  (0, 11)	0.5900105859071787",4635,3
1000.0,"data structures,dp,implementation,sortings","['data structures', 'dp', 'implementation', 'sortings']","  (0, 62)	0.4107795949900678
  (0, 56)	0.4675868190932882
  (0, 35)	0.3303774322369524
  (0, 21)	0.38945185888245176
  (0, 16)	0.4194047524954487
  (0, 15)	0.4194047524954487",2609,1
1500.0,dp,['dp'],"  (0, 21)	1.0",4352,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",5634,0
3000.0,"string suffix structures,strings","['string suffix structures', 'strings']","  (0, 64)	0.41222353058540717
  (0, 63)	0.41222353058540717
  (0, 62)	0.24169061180713372
  (0, 61)	0.30322343630201615
  (0, 60)	0.41222353058540717
  (0, 59)	0.41222353058540717
  (0, 58)	0.41222353058540717",6126,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",2936,0
3000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4573,2
1000.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",5825,1
1000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",315,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",1040,0
2750.0,"binary search,geometry,two pointers","['binary search', 'geometry', 'two pointers']","  (0, 52)	0.4077974502139135
  (0, 46)	0.49908193730016853
  (0, 29)	0.4919473866398385
  (0, 4)	0.413887803781396
  (0, 3)	0.413887803781396",5463,5
1000.0,"dp,expression parsing,graphs,implementation","['dp', 'expression parsing', 'graphs', 'implementation']","  (0, 44)	0.5063908188610113
  (0, 35)	0.22277110041266046
  (0, 32)	0.33483861680194094
  (0, 24)	0.5063908188610113
  (0, 23)	0.5063908188610113
  (0, 21)	0.2626045567748561",1135,1
1000.0,"brute force,two pointers","['brute force', 'two pointers']","  (0, 46)	0.6198595316156775
  (0, 27)	0.45305413990868426
  (0, 7)	0.45305413990868426
  (0, 6)	0.45305413990868426",5407,1
1500.0,"binary search,brute force,dp,math,strings,two pointers","['binary search', 'brute force', 'dp', 'math', 'strings', 'two pointers']","  (0, 61)	0.3599934078792648
  (0, 52)	0.32208647218030845
  (0, 46)	0.3941847611592562
  (0, 37)	0.27300775494735335
  (0, 27)	0.28810888406704965
  (0, 21)	0.27204232809630574
  (0, 7)	0.28810888406704965
  (0, 6)	0.28810888406704965
  (0, 4)	0.32689675359293674
  (0, 3)	0.32689675359293674",1664,2
500.0,"brute force,geometry,implementation","['brute force', 'geometry', 'implementation']","  (0, 35)	0.3427871435501305
  (0, 29)	0.5771358952904511
  (0, 27)	0.4279451415715304
  (0, 7)	0.4279451415715304
  (0, 6)	0.4279451415715304",5267,0
2500.0,"constructive algorithms,flows,greedy","['constructive algorithms', 'flows', 'greedy']","  (0, 33)	0.3525528533568341
  (0, 26)	0.6111550540640205
  (0, 14)	0.40914381557994944
  (0, 13)	0.40914381557994944
  (0, 2)	0.40914381557994944",848,4
2000.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",4638,3
2000.0,"bitmasks,dp,geometry","['bitmasks', 'dp', 'geometry']","  (0, 29)	0.6176799639224233
  (0, 21)	0.4324673852389545
  (0, 5)	0.6568435299775552",3699,3
1250.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",5453,2
2500.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",1701,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",875,0
2500.0,"dp,implementation,math","['dp', 'implementation', 'math']","  (0, 37)	0.6077375925301162
  (0, 35)	0.5137291304928426
  (0, 21)	0.6055884733949006",1405,4
70.0,implementation,['implementation'],"  (0, 35)	1.0",181,14
2000.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",5414,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4293,0
2250.0,"implementation,shortest paths","['implementation', 'shortest paths']","  (0, 54)	0.5520307633822551
  (0, 53)	0.5520307633822551
  (0, 45)	0.5520307633822551
  (0, 35)	0.2928926575365349",2296,3
2000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4233,3
500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",1217,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3568,0
500.0,"constructive algorithms,graph matchings,implementation,shortest paths","['constructive algorithms', 'graph matchings', 'implementation', 'shortest paths']","  (0, 54)	0.3297555033626307
  (0, 53)	0.3297555033626307
  (0, 45)	0.3297555033626307
  (0, 36)	0.3951736487632127
  (0, 35)	0.17495939017134005
  (0, 31)	0.3951736487632127
  (0, 30)	0.3951736487632127
  (0, 14)	0.24130651170006026
  (0, 13)	0.24130651170006026
  (0, 2)	0.24130651170006026",3061,1
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",2445,1
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",1436,0
500.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",4816,0
1500.0,"constructive algorithms,greedy,sortings","['constructive algorithms', 'greedy', 'sortings']","  (0, 56)	0.468599534293003
  (0, 33)	0.39348664245489945
  (0, 14)	0.4566482010877195
  (0, 13)	0.4566482010877195
  (0, 2)	0.4566482010877195",3951,2
1500.0,"math,sortings","['math', 'sortings']","  (0, 56)	0.7672695625273075
  (0, 37)	0.6413247371021598",4183,2
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5313,0
1000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",5336,1
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",5082,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5374,0
1250.0,"constructive algorithms,divide and conquer,geometry,greedy,sortings","['constructive algorithms', 'divide and conquer', 'geometry', 'greedy', 'sortings']","  (0, 56)	0.29580407065094566
  (0, 33)	0.24838895915793582
  (0, 29)	0.35188910497224446
  (0, 20)	0.39903877813615063
  (0, 19)	0.39903877813615063
  (0, 14)	0.2882597758894016
  (0, 13)	0.2882597758894016
  (0, 12)	0.39903877813615063
  (0, 2)	0.2882597758894016",2909,2
1500.0,shortest paths,['shortest paths'],"  (0, 54)	0.5773502691896257
  (0, 53)	0.5773502691896257
  (0, 45)	0.5773502691896257",5791,2
1500.0,"dsu,graphs,greedy,trees","['dsu', 'graphs', 'greedy', 'trees']","  (0, 69)	0.5113908911977595
  (0, 33)	0.3905177245532118
  (0, 32)	0.4938981630959662
  (0, 22)	0.5848417458596584",3976,2
2500.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",5051,4
2000.0,"data structures,strings","['data structures', 'strings']","  (0, 62)	0.46329701031250653
  (0, 61)	0.5812493519918441
  (0, 16)	0.47302487833334644
  (0, 15)	0.47302487833334644",1630,3
3000.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4959,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",1516,0
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1703,3
500.0,math,['math'],"  (0, 37)	1.0",457,0
1000.0,"bitmasks,brute force,dp","['bitmasks', 'brute force', 'dp']","  (0, 27)	0.41001838997620654
  (0, 21)	0.3871534809925115
  (0, 7)	0.41001838997620654
  (0, 6)	0.41001838997620654
  (0, 5)	0.588019508009164",3652,1
1000.0,"dfs and similar,shortest paths","['dfs and similar', 'shortest paths']","  (0, 55)	0.34594194320753285
  (0, 54)	0.4622310085478141
  (0, 53)	0.4622310085478141
  (0, 45)	0.4622310085478141
  (0, 18)	0.34594194320753285
  (0, 17)	0.34594194320753285",5399,1
1000.0,"brute force,greedy,two pointers","['brute force', 'greedy', 'two pointers']","  (0, 46)	0.5691796414024389
  (0, 33)	0.3960250252283512
  (0, 27)	0.4160123055895802
  (0, 7)	0.4160123055895802
  (0, 6)	0.4160123055895802",943,1
1500.0,"implementation,math,sortings","['implementation', 'math', 'sortings']","  (0, 56)	0.6745256301510891
  (0, 37)	0.5638044222690247
  (0, 35)	0.4765918040621001",3788,2
1000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",1635,1
1250.0,"dp,graphs","['dp', 'graphs']","  (0, 32)	0.7868693546983633
  (0, 21)	0.6171196145291297",2326,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",2062,1
3000.0,"data structures,dfs and similar,dsu,graphs,greedy","['data structures', 'dfs and similar', 'dsu', 'graphs', 'greedy']","  (0, 62)	0.29656337695833024
  (0, 55)	0.3364480142976327
  (0, 33)	0.2834647482924292
  (0, 32)	0.3585054139201163
  (0, 22)	0.4245185502672965
  (0, 18)	0.3364480142976327
  (0, 17)	0.3364480142976327
  (0, 16)	0.30279033143170203
  (0, 15)	0.30279033143170203",2513,3
2000.0,dp,['dp'],"  (0, 21)	1.0",6098,3
1500.0,"constructive algorithms,flows,greedy","['constructive algorithms', 'flows', 'greedy']","  (0, 33)	0.3525528533568341
  (0, 26)	0.6111550540640205
  (0, 14)	0.40914381557994944
  (0, 13)	0.40914381557994944
  (0, 2)	0.40914381557994944",3658,3
2500.0,"dfs and similar,dsu,graphs,trees","['dfs and similar', 'dsu', 'graphs', 'trees']","  (0, 69)	0.4186637495568354
  (0, 55)	0.3794652686940885
  (0, 32)	0.4043428626127562
  (0, 22)	0.4787962445820802
  (0, 18)	0.3794652686940885
  (0, 17)	0.3794652686940885",1336,4
1000.0,"games,math","['games', 'math']","  (0, 37)	0.5135825748776551
  (0, 28)	0.8580401731749148",3482,1
2000.0,"string suffix structures,strings","['string suffix structures', 'strings']","  (0, 64)	0.41222353058540717
  (0, 63)	0.41222353058540717
  (0, 62)	0.24169061180713372
  (0, 61)	0.30322343630201615
  (0, 60)	0.41222353058540717
  (0, 59)	0.41222353058540717
  (0, 58)	0.41222353058540717",5853,3
1000.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",649,1
500.0,"binary search,combinatorics,two pointers","['binary search', 'combinatorics', 'two pointers']","  (0, 52)	0.41090238303981413
  (0, 46)	0.5028819019373297
  (0, 11)	0.48002686289511876
  (0, 4)	0.4170391080073706
  (0, 3)	0.4170391080073706",304,0
3000.0,"constructive algorithms,greedy,implementation","['constructive algorithms', 'greedy', 'implementation']","  (0, 35)	0.35095054957549987
  (0, 33)	0.41708632907337784
  (0, 14)	0.4840360543915258
  (0, 13)	0.4840360543915258
  (0, 2)	0.4840360543915258",6080,4
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",5768,0
1500.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",3972,2
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",6476,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",4251,1
1500.0,"expression parsing,implementation,sortings,strings","['expression parsing', 'implementation', 'sortings', 'strings']","  (0, 61)	0.3409054055968715
  (0, 56)	0.3093031204962983
  (0, 44)	0.4967746061196074
  (0, 35)	0.21854074272366614
  (0, 24)	0.4967746061196074
  (0, 23)	0.4967746061196074",4305,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",1385,0
1750.0,"hashing,string suffix structures,strings","['hashing', 'string suffix structures', 'strings']","  (0, 64)	0.3868310196854611
  (0, 63)	0.3868310196854611
  (0, 62)	0.22680273899208162
  (0, 61)	0.2845452099511727
  (0, 60)	0.3868310196854611
  (0, 59)	0.3868310196854611
  (0, 58)	0.3868310196854611
  (0, 34)	0.345547901346637",5295,3
2750.0,"data structures,graphs,shortest paths","['data structures', 'graphs', 'shortest paths']","  (0, 62)	0.29566093581820685
  (0, 54)	0.44817771109097876
  (0, 53)	0.44817771109097876
  (0, 45)	0.44817771109097876
  (0, 32)	0.3574144834154912
  (0, 16)	0.30186894169464773
  (0, 15)	0.30186894169464773",3741,5
1500.0,"games,greedy,sortings","['games', 'greedy', 'sortings']","  (0, 56)	0.5230515163967832
  (0, 33)	0.4392103917227199
  (0, 28)	0.7304186080582836",5532,2
1250.0,"greedy,two pointers","['greedy', 'two pointers']","  (0, 46)	0.8208551890856012
  (0, 33)	0.5711363747400808",2673,3
1500.0,"binary search,data structures,math","['binary search', 'data structures', 'math']","  (0, 62)	0.35700917799965254
  (0, 52)	0.4007377925857176
  (0, 37)	0.33967438724076165
  (0, 16)	0.3645053156575808
  (0, 15)	0.3645053156575808
  (0, 4)	0.4067227119210868
  (0, 3)	0.4067227119210868",4778,2
500.0,"brute force,number theory","['brute force', 'number theory']","  (0, 68)	0.4570235457665541
  (0, 43)	0.4570235457665541
  (0, 42)	0.4570235457665541
  (0, 27)	0.3527928740044217
  (0, 7)	0.3527928740044217
  (0, 6)	0.3527928740044217",659,0
2500.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",2398,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1398,0
2500.0,math,['math'],"  (0, 37)	1.0",5837,4
2500.0,"dfs and similar,greedy,trees","['dfs and similar', 'greedy', 'trees']","  (0, 69)	0.4970465995929952
  (0, 55)	0.45050932082772566
  (0, 33)	0.3795638725894035
  (0, 18)	0.45050932082772566
  (0, 17)	0.45050932082772566",4810,4
1000.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",6280,1
1500.0,sortings,['sortings'],"  (0, 56)	1.0",2890,2
2500.0,"graph matchings,strings","['graph matchings', 'strings']","  (0, 61)	0.37038173728712703
  (0, 36)	0.5362889049396695
  (0, 31)	0.5362889049396695
  (0, 30)	0.5362889049396695",1542,4
3000.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",1454,4
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1697,1
1500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5575,2
1000.0,"binary search,data structures,dp","['binary search', 'data structures', 'dp']","  (0, 62)	0.35715467238244775
  (0, 52)	0.40090110798876033
  (0, 21)	0.33861115002866804
  (0, 16)	0.36465386499243074
  (0, 15)	0.36465386499243074
  (0, 4)	0.40688846639908455
  (0, 3)	0.40688846639908455",941,1
2000.0,"graph matchings,graphs,greedy,schedules","['graph matchings', 'graphs', 'greedy', 'schedules']","  (0, 51)	0.531098946540495
  (0, 36)	0.4393271387437968
  (0, 33)	0.23116247704718734
  (0, 32)	0.29235733901948
  (0, 31)	0.4393271387437968
  (0, 30)	0.4393271387437968",3777,4
2000.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",6413,3
2000.0,"dp,sortings","['dp', 'sortings']","  (0, 56)	0.7683859805869373
  (0, 21)	0.6399867067662038",2630,4
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",976,0
500.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",2389,0
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",2541,0
1500.0,greedy,['greedy'],"  (0, 33)	1.0",872,2
500.0,math,['math'],"  (0, 37)	1.0",2367,1
2500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",2914,4
1500.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",3300,2
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",4069,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3643,0
1000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",909,1
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",6531,1
2000.0,"data structures,dfs and similar,implementation","['data structures', 'dfs and similar', 'implementation']","  (0, 62)	0.362907254273431
  (0, 55)	0.41171444136764734
  (0, 35)	0.29187517654064066
  (0, 18)	0.41171444136764734
  (0, 17)	0.41171444136764734
  (0, 16)	0.3705272341023447
  (0, 15)	0.3705272341023447",2654,3
1500.0,"constructive algorithms,dp,math","['constructive algorithms', 'dp', 'math']","  (0, 37)	0.40586428310676204
  (0, 21)	0.4044290408116558
  (0, 14)	0.4731847189158438
  (0, 13)	0.4731847189158438
  (0, 2)	0.4731847189158438",4378,2
500.0,"binary search,greedy,strings","['binary search', 'greedy', 'strings']","  (0, 61)	0.4981301010013065
  (0, 52)	0.44567751355086066
  (0, 33)	0.3795083548976538
  (0, 4)	0.45233359644980325
  (0, 3)	0.45233359644980325",4640,0
1500.0,"brute force,greedy,sortings,strings","['brute force', 'greedy', 'sortings', 'strings']","  (0, 61)	0.4808385018379957
  (0, 56)	0.43626427340705687
  (0, 33)	0.3663344745422474
  (0, 27)	0.38482328050706605
  (0, 7)	0.38482328050706605
  (0, 6)	0.38482328050706605",5635,2
2500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",1582,4
500.0,strings,['strings'],"  (0, 61)	1.0",3892,0
500.0,sortings,['sortings'],"  (0, 56)	1.0",6259,0
500.0,greedy,['greedy'],"  (0, 33)	1.0",135,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",5151,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",6489,0
750.0,implementation,['implementation'],"  (0, 35)	1.0",3624,1
1000.0,math,['math'],"  (0, 37)	1.0",6421,0
2000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",932,3
2500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",1045,4
2000.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",2681,3
2000.0,"data structures,greedy,hashing,strings","['data structures', 'greedy', 'hashing', 'strings']","  (0, 62)	0.35592533906997353
  (0, 61)	0.44654156639679665
  (0, 34)	0.5422741122893294
  (0, 33)	0.3402048077721472
  (0, 16)	0.36339871931348067
  (0, 15)	0.36339871931348067",6198,3
3000.0,"brute force,data structures,dp","['brute force', 'data structures', 'dp']","  (0, 62)	0.37774301087330125
  (0, 27)	0.3792813811879354
  (0, 21)	0.3581305390011361
  (0, 16)	0.38567449774625023
  (0, 15)	0.38567449774625023
  (0, 7)	0.3792813811879354
  (0, 6)	0.3792813811879354",4117,4
1500.0,"graphs,greedy,shortest paths","['graphs', 'greedy', 'shortest paths']","  (0, 54)	0.49791411181995787
  (0, 53)	0.49791411181995787
  (0, 45)	0.49791411181995787
  (0, 33)	0.3139638654767157
  (0, 32)	0.397078459408901",3357,2
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",622,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",3959,1
1000.0,"greedy,hashing,implementation","['greedy', 'hashing', 'implementation']","  (0, 35)	0.40821630361634664
  (0, 34)	0.7733014053877308
  (0, 33)	0.4851436755098091",930,1
2500.0,"geometry,schedules,sortings","['geometry', 'schedules', 'sortings']","  (0, 56)	0.4036618519132221
  (0, 51)	0.7787605626377391
  (0, 29)	0.4801969339657845",221,4
1500.0,"binary search,geometry","['binary search', 'geometry']","  (0, 52)	0.470596263078465
  (0, 29)	0.5677048781508689
  (0, 4)	0.47762450130845013
  (0, 3)	0.47762450130845013",3735,2
2500.0,"data structures,graphs,shortest paths","['data structures', 'graphs', 'shortest paths']","  (0, 62)	0.29566093581820685
  (0, 54)	0.44817771109097876
  (0, 53)	0.44817771109097876
  (0, 45)	0.44817771109097876
  (0, 32)	0.3574144834154912
  (0, 16)	0.30186894169464773
  (0, 15)	0.30186894169464773",1245,4
1000.0,"binary search,brute force,implementation,two pointers","['binary search', 'brute force', 'implementation', 'two pointers']","  (0, 52)	0.3658367015933954
  (0, 46)	0.44772837513074265
  (0, 35)	0.26212464984187295
  (0, 27)	0.3272438085752281
  (0, 7)	0.3272438085752281
  (0, 6)	0.3272438085752281
  (0, 4)	0.371300381808896
  (0, 3)	0.371300381808896",3893,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5477,1
1000.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",5735,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4099,0
500.0,"brute force,constructive algorithms","['brute force', 'constructive algorithms']","  (0, 27)	0.3874488343122914
  (0, 14)	0.42803823909013083
  (0, 13)	0.42803823909013083
  (0, 7)	0.3874488343122914
  (0, 6)	0.3874488343122914
  (0, 2)	0.42803823909013083",3607,0
2500.0,dp,['dp'],"  (0, 21)	1.0",1073,5
1000.0,"dfs and similar,graphs,greedy,implementation,math,shortest paths","['dfs and similar', 'graphs', 'greedy', 'implementation', 'math', 'shortest paths']","  (0, 55)	0.29608246298218005
  (0, 54)	0.3956111658755169
  (0, 53)	0.3956111658755169
  (0, 45)	0.3956111658755169
  (0, 37)	0.24831082521488568
  (0, 35)	0.20990063128813616
  (0, 33)	0.24945589593761106
  (0, 32)	0.3154935129205809
  (0, 18)	0.29608246298218005
  (0, 17)	0.29608246298218005",4556,1
2500.0,"binary search,brute force,data structures","['binary search', 'brute force', 'data structures']","  (0, 62)	0.3167808600304105
  (0, 52)	0.3555820701677183
  (0, 27)	0.31807096006479213
  (0, 16)	0.3234323218989543
  (0, 15)	0.3234323218989543
  (0, 7)	0.31807096006479213
  (0, 6)	0.31807096006479213
  (0, 4)	0.3608926000114993
  (0, 3)	0.3608926000114993",518,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4515,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",1116,0
500.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",1771,0
2000.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",4932,3
2500.0,"bitmasks,data structures,greedy","['bitmasks', 'data structures', 'greedy']","  (0, 62)	0.40582067417063705
  (0, 33)	0.3878963627791678
  (0, 16)	0.41434170899405925
  (0, 15)	0.41434170899405925
  (0, 5)	0.584369650592967",5348,5
2750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",375,4
2500.0,"bitmasks,data structures","['bitmasks', 'data structures']","  (0, 62)	0.44029440740976256
  (0, 16)	0.4495392887499357
  (0, 15)	0.4495392887499357
  (0, 5)	0.6340107968671272",2547,4
2000.0,"dfs and similar,dp,math,trees","['dfs and similar', 'dp', 'math', 'trees']","  (0, 69)	0.46544070783998936
  (0, 55)	0.4218626127736707
  (0, 37)	0.35379688634730994
  (0, 21)	0.3525457679900215
  (0, 18)	0.4218626127736707
  (0, 17)	0.4218626127736707",3630,3
2000.0,"binary search,dp,trees","['binary search', 'dp', 'trees']","  (0, 69)	0.4978402134754211
  (0, 52)	0.44645441009832426
  (0, 21)	0.3770866136967686
  (0, 4)	0.45312209575411816
  (0, 3)	0.45312209575411816",2132,3
1500.0,"dfs and similar,graphs,greedy,trees","['dfs and similar', 'graphs', 'greedy', 'trees']","  (0, 69)	0.44809118482049315
  (0, 55)	0.406137483905274
  (0, 33)	0.34217963772996185
  (0, 32)	0.43276369777332135
  (0, 18)	0.406137483905274
  (0, 17)	0.406137483905274",1561,2
2500.0,trees,['trees'],"  (0, 69)	1.0",1244,5
1000.0,"bitmasks,brute force,implementation","['bitmasks', 'brute force', 'implementation']","  (0, 35)	0.3355538577715763
  (0, 27)	0.4189149035221328
  (0, 7)	0.4189149035221328
  (0, 6)	0.4189149035221328
  (0, 5)	0.60077826138746",6541,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",6326,0
2000.0,"binary search,brute force,dfs and similar,dp,sortings,trees","['binary search', 'brute force', 'dfs and similar', 'dp', 'sortings', 'trees']","  (0, 69)	0.3286769308572888
  (0, 56)	0.2989020154364526
  (0, 55)	0.29790369959980967
  (0, 52)	0.2947517321962245
  (0, 27)	0.26365774403696285
  (0, 21)	0.2489547198126071
  (0, 18)	0.29790369959980967
  (0, 17)	0.29790369959980967
  (0, 7)	0.26365774403696285
  (0, 6)	0.26365774403696285
  (0, 4)	0.2991537760607982
  (0, 3)	0.2991537760607982",4527,3
1000.0,dp,['dp'],"  (0, 21)	1.0",2812,4
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",3013,0
2000.0,"brute force,dp,meet-in-the-middle","['brute force', 'dp', 'meet-in-the-middle']","  (0, 41)	0.5002299553124128
  (0, 40)	0.5002299553124128
  (0, 39)	0.5002299553124128
  (0, 27)	0.25310861147753944
  (0, 21)	0.23899386563709263
  (0, 7)	0.25310861147753944
  (0, 6)	0.25310861147753944",1661,3
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",6427,3
2000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",3863,4
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",965,0
2500.0,"binary search,data structures,probabilities,two pointers","['binary search', 'data structures', 'probabilities', 'two pointers']","  (0, 62)	0.2994890093855027
  (0, 52)	0.33617221046610296
  (0, 47)	0.45628989812665716
  (0, 46)	0.41142355838147987
  (0, 16)	0.30577739349363475
  (0, 15)	0.30577739349363475
  (0, 4)	0.34119285887924716
  (0, 3)	0.34119285887924716",4390,4
1000.0,"brute force,dfs and similar,graphs,hashing","['brute force', 'dfs and similar', 'graphs', 'hashing']","  (0, 55)	0.3473387536463139
  (0, 34)	0.4664582247481072
  (0, 32)	0.3701101458613817
  (0, 27)	0.30740991913165233
  (0, 18)	0.3473387536463139
  (0, 17)	0.3473387536463139
  (0, 7)	0.30740991913165233
  (0, 6)	0.30740991913165233",3862,1
500.0,"brute force,constructive algorithms,math","['brute force', 'constructive algorithms', 'math']","  (0, 37)	0.34464698527814425
  (0, 27)	0.3637107610540484
  (0, 14)	0.40181334904784716
  (0, 13)	0.40181334904784716
  (0, 7)	0.3637107610540484
  (0, 6)	0.3637107610540484
  (0, 2)	0.40181334904784716",6176,0
2500.0,"brute force,math,matrices","['brute force', 'math', 'matrices']","  (0, 38)	0.642786462357257
  (0, 37)	0.3676685629086662
  (0, 27)	0.3880057523881652
  (0, 7)	0.3880057523881652
  (0, 6)	0.3880057523881652",3379,4
1500.0,"dp,implementation,sortings","['dp', 'implementation', 'sortings']","  (0, 56)	0.6752837938228025
  (0, 35)	0.4771274910336911
  (0, 21)	0.5624421348904951",2743,1
1000.0,"binary search,data structures,sortings","['binary search', 'data structures', 'sortings']","  (0, 62)	0.3484440519734711
  (0, 56)	0.39663081584709964
  (0, 52)	0.39112355881116245
  (0, 16)	0.3557603472976266
  (0, 15)	0.3557603472976266
  (0, 4)	0.39696489195457096
  (0, 3)	0.39696489195457096",6411,1
500.0,"implementation,math,number theory","['implementation', 'math', 'number theory']","  (0, 68)	0.5052449415657008
  (0, 43)	0.5052449415657008
  (0, 42)	0.5052449415657008
  (0, 37)	0.3695741071140833
  (0, 35)	0.3124061881871792",3994,0
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",2941,0
2000.0,flows,['flows'],"  (0, 26)	1.0",36,3
1000.0,"dfs and similar,dsu,graphs,greedy,math,sortings","['dfs and similar', 'dsu', 'graphs', 'greedy', 'math', 'sortings']","  (0, 56)	0.35151535675765305
  (0, 55)	0.3503413153348746
  (0, 37)	0.2938152440420187
  (0, 33)	0.2951701557078785
  (0, 32)	0.3733095543144983
  (0, 22)	0.44204864039747493
  (0, 18)	0.3503413153348746
  (0, 17)	0.3503413153348746",427,1
1000.0,shortest paths,['shortest paths'],"  (0, 54)	0.5773502691896257
  (0, 53)	0.5773502691896257
  (0, 45)	0.5773502691896257",5246,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4496,0
1000.0,"math,probabilities","['math', 'probabilities']","  (0, 47)	0.8481937784236142
  (0, 37)	0.5296860525287339",3485,1
2000.0,"matrices,probabilities","['matrices', 'probabilities']","  (0, 47)	0.6754327962076296
  (0, 38)	0.7374215468828819",1297,3
2500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4749,4
2250.0,"binary search,constructive algorithms","['binary search', 'constructive algorithms']","  (0, 52)	0.40859218509815864
  (0, 14)	0.40377779470882263
  (0, 13)	0.40377779470882263
  (0, 4)	0.4146944078336188
  (0, 3)	0.4146944078336188
  (0, 2)	0.40377779470882263",4491,4
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",6116,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5518,1
2750.0,"dfs and similar,dp,trees","['dfs and similar', 'dp', 'trees']","  (0, 69)	0.49762602572825015
  (0, 55)	0.4510344966862413
  (0, 21)	0.37692437824432856
  (0, 18)	0.4510344966862413
  (0, 17)	0.4510344966862413",4089,5
2500.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",1139,4
2500.0,"constructive algorithms,graphs,greedy","['constructive algorithms', 'graphs', 'greedy']","  (0, 33)	0.38807709769607496
  (0, 32)	0.4908114373323105
  (0, 14)	0.4503703288138116
  (0, 13)	0.4503703288138116
  (0, 2)	0.4503703288138116",4356,4
1000.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",6034,1
2500.0,"brute force,data structures,dp,greedy,sortings","['brute force', 'data structures', 'dp', 'greedy', 'sortings']","  (0, 62)	0.3293765482248498
  (0, 56)	0.3749264431503917
  (0, 33)	0.31482862548164553
  (0, 27)	0.3307179445962991
  (0, 21)	0.31227527010331385
  (0, 16)	0.3362924823210571
  (0, 15)	0.3362924823210571
  (0, 7)	0.3307179445962991
  (0, 6)	0.3307179445962991",6454,4
1000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",3427,1
1000.0,"binary search,bitmasks,greedy","['binary search', 'bitmasks', 'greedy']","  (0, 52)	0.42910276341835424
  (0, 33)	0.3653944362807807
  (0, 5)	0.5504702790409395
  (0, 4)	0.435511306543454
  (0, 3)	0.435511306543454",2606,2
1000.0,"brute force,geometry","['brute force', 'geometry']","  (0, 29)	0.6143579376456108
  (0, 27)	0.45554521343544363
  (0, 7)	0.45554521343544363
  (0, 6)	0.45554521343544363",5192,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1508,1
2000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",3804,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2280,0
2500.0,"combinatorics,divide and conquer,dp","['combinatorics', 'divide and conquer', 'dp']","  (0, 21)	0.3045331469191971
  (0, 20)	0.4932351348160874
  (0, 19)	0.4932351348160874
  (0, 12)	0.4932351348160874
  (0, 11)	0.42120881730604715",2214,4
1000.0,math,['math'],"  (0, 37)	1.0",6079,1
2000.0,"data structures,number theory","['data structures', 'number theory']","  (0, 68)	0.4553294925936493
  (0, 62)	0.35005954504610454
  (0, 43)	0.4553294925936493
  (0, 42)	0.4553294925936493
  (0, 16)	0.3574097609504696
  (0, 15)	0.3574097609504696",1652,3
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",1166,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5997,1
2500.0,"brute force,dp,expression parsing,greedy,implementation","['brute force', 'dp', 'expression parsing', 'greedy', 'implementation']","  (0, 44)	0.4642041258512044
  (0, 35)	0.2042123594668748
  (0, 33)	0.24269568309403194
  (0, 27)	0.2549444713054925
  (0, 24)	0.4642041258512044
  (0, 23)	0.4642041258512044
  (0, 21)	0.24072734769639145
  (0, 7)	0.2549444713054925
  (0, 6)	0.2549444713054925",194,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2900,1
3000.0,"dfs and similar,graphs,trees","['dfs and similar', 'graphs', 'trees']","  (0, 69)	0.4768781467201565
  (0, 55)	0.43222919173454066
  (0, 32)	0.46056596771609815
  (0, 18)	0.43222919173454066
  (0, 17)	0.43222919173454066",2660,4
1000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",5774,1
500.0,math,['math'],"  (0, 37)	1.0",2737,0
250.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",6227,0
2500.0,"data structures,greedy,two pointers","['data structures', 'greedy', 'two pointers']","  (0, 62)	0.41219406061432545
  (0, 46)	0.566252322613166
  (0, 33)	0.3939882491157749
  (0, 16)	0.4208489177176026
  (0, 15)	0.4208489177176026",682,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",1821,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",412,1
1000.0,"dfs and similar,shortest paths","['dfs and similar', 'shortest paths']","  (0, 55)	0.34594194320753285
  (0, 54)	0.4622310085478141
  (0, 53)	0.4622310085478141
  (0, 45)	0.4622310085478141
  (0, 18)	0.34594194320753285
  (0, 17)	0.34594194320753285",360,1
2000.0,"dp,string suffix structures,strings","['dp', 'string suffix structures', 'strings']","  (0, 64)	0.4018097555987966
  (0, 63)	0.4018097555987966
  (0, 62)	0.23558491559866787
  (0, 61)	0.2955632703919534
  (0, 60)	0.4018097555987966
  (0, 59)	0.4018097555987966
  (0, 58)	0.4018097555987966
  (0, 21)	0.22335331263663452",2690,3
2000.0,"binary search,data structures,dp","['binary search', 'data structures', 'dp']","  (0, 62)	0.35715467238244775
  (0, 52)	0.40090110798876033
  (0, 21)	0.33861115002866804
  (0, 16)	0.36465386499243074
  (0, 15)	0.36465386499243074
  (0, 4)	0.40688846639908455
  (0, 3)	0.40688846639908455",4344,3
1500.0,"brute force,geometry,greedy","['brute force', 'geometry', 'greedy']","  (0, 33)	0.39785864325087666
  (0, 29)	0.5636406801399069
  (0, 27)	0.4179384658383715
  (0, 7)	0.4179384658383715
  (0, 6)	0.4179384658383715",863,2
1500.0,dp,['dp'],"  (0, 21)	1.0",4365,2
1000.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",4063,1
1000.0,strings,['strings'],"  (0, 61)	1.0",6120,1
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",3375,3
3250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1286,5
2000.0,greedy,['greedy'],"  (0, 33)	1.0",4264,2
1500.0,implementation,['implementation'],"  (0, 35)	1.0",4029,2
1000.0,"binary search,dp,greedy,two pointers","['binary search', 'dp', 'greedy', 'two pointers']","  (0, 52)	0.4083679169258067
  (0, 46)	0.4997801016255893
  (0, 33)	0.34773806537988694
  (0, 21)	0.3449178044899186
  (0, 4)	0.41446679027185107
  (0, 3)	0.41446679027185107",3419,1
30.0,"constructive algorithms,dfs and similar,implementation","['constructive algorithms', 'dfs and similar', 'implementation']","  (0, 55)	0.3961948986232257
  (0, 35)	0.2808729652426572
  (0, 18)	0.3961948986232257
  (0, 17)	0.3961948986232257
  (0, 14)	0.38738404041751334
  (0, 13)	0.38738404041751334
  (0, 2)	0.38738404041751334",4632,14
1000.0,"binary search,greedy,math","['binary search', 'greedy', 'math']","  (0, 52)	0.4712079821500611
  (0, 37)	0.39940650859761767
  (0, 33)	0.40124834815119054
  (0, 4)	0.4782453562523476
  (0, 3)	0.4782453562523476",6434,1
1000.0,dp,['dp'],"  (0, 21)	1.0",4324,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4322,0
500.0,"binary search,constructive algorithms,greedy","['binary search', 'constructive algorithms', 'greedy']","  (0, 52)	0.38590168113330003
  (0, 33)	0.32860736228825793
  (0, 14)	0.3813546501017828
  (0, 13)	0.3813546501017828
  (0, 4)	0.391665026831403
  (0, 3)	0.391665026831403
  (0, 2)	0.3813546501017828",4419,0
1500.0,"brute force,data structures,dfs and similar,trees","['brute force', 'data structures', 'dfs and similar', 'trees']","  (0, 69)	0.3685041992893001
  (0, 62)	0.29440736064009365
  (0, 55)	0.3340020365895831
  (0, 27)	0.29560634389320917
  (0, 18)	0.3340020365895831
  (0, 17)	0.3340020365895831
  (0, 16)	0.300589045142523
  (0, 15)	0.300589045142523
  (0, 7)	0.29560634389320917
  (0, 6)	0.29560634389320917",5521,2
2500.0,"data structures,hashing,string suffix structures,strings","['data structures', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.35264676293046426
  (0, 63)	0.35264676293046426
  (0, 62)	0.35007541787436475
  (0, 61)	0.25939995008218775
  (0, 60)	0.35264676293046426
  (0, 59)	0.35264676293046426
  (0, 58)	0.35264676293046426
  (0, 34)	0.31501183371072583
  (0, 16)	0.21110153397474193
  (0, 15)	0.21110153397474193",5902,4
2500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2200,4
500.0,"brute force,number theory,sortings","['brute force', 'number theory', 'sortings']","  (0, 68)	0.4243426999136867
  (0, 56)	0.37135243488233177
  (0, 43)	0.4243426999136867
  (0, 42)	0.4243426999136867
  (0, 27)	0.3275653564287347
  (0, 7)	0.3275653564287347
  (0, 6)	0.3275653564287347",1457,0
3000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4173,1
2250.0,"dp,number theory","['dp', 'number theory']","  (0, 68)	0.5321499476551752
  (0, 43)	0.5321499476551752
  (0, 42)	0.5321499476551752
  (0, 21)	0.38787794424507116",6401,4
1500.0,greedy,['greedy'],"  (0, 33)	1.0",5835,2
1500.0,greedy,['greedy'],"  (0, 33)	1.0",4613,2
1750.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",2757,3
2000.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",639,3
1000.0,"brute force,hashing,implementation,math,strings","['brute force', 'hashing', 'implementation', 'math', 'strings']","  (0, 61)	0.43103695900490063
  (0, 37)	0.32688496484004737
  (0, 35)	0.27632045610234196
  (0, 34)	0.523445524219291
  (0, 27)	0.3449662536381948
  (0, 7)	0.3449662536381948
  (0, 6)	0.3449662536381948",4981,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3216,0
2000.0,"data structures,hashing,string suffix structures,strings","['data structures', 'hashing', 'string suffix structures', 'strings']","  (0, 64)	0.35264676293046426
  (0, 63)	0.35264676293046426
  (0, 62)	0.35007541787436475
  (0, 61)	0.25939995008218775
  (0, 60)	0.35264676293046426
  (0, 59)	0.35264676293046426
  (0, 58)	0.35264676293046426
  (0, 34)	0.31501183371072583
  (0, 16)	0.21110153397474193
  (0, 15)	0.21110153397474193",3841,3
1000.0,"brute force,constructive algorithms,geometry,trees","['brute force', 'constructive algorithms', 'geometry', 'trees']","  (0, 69)	0.393536806427731
  (0, 29)	0.42574215283422684
  (0, 27)	0.3156869765931293
  (0, 14)	0.3487585600933725
  (0, 13)	0.3487585600933725
  (0, 7)	0.3156869765931293
  (0, 6)	0.3156869765931293
  (0, 2)	0.3487585600933725",6415,1
1500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4848,2
1500.0,"brute force,number theory","['brute force', 'number theory']","  (0, 68)	0.4570235457665541
  (0, 43)	0.4570235457665541
  (0, 42)	0.4570235457665541
  (0, 27)	0.3527928740044217
  (0, 7)	0.3527928740044217
  (0, 6)	0.3527928740044217",5751,2
1000.0,"greedy,implementation,sortings,two pointers","['greedy', 'implementation', 'sortings', 'two pointers']","  (0, 56)	0.5226490142955015
  (0, 46)	0.6307612490844418
  (0, 35)	0.3692820931927774
  (0, 33)	0.43887240760446145",593,1
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",1411,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1531,1
1500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",784,2
500.0,greedy,['greedy'],"  (0, 33)	1.0",157,0
1000.0,"binary search,implementation","['binary search', 'implementation']","  (0, 52)	0.5289918613907164
  (0, 35)	0.3790265050835606
  (0, 4)	0.5368922233682132
  (0, 3)	0.5368922233682132",1526,1
1750.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",3549,3
1000.0,"dp,shortest paths","['dp', 'shortest paths']","  (0, 54)	0.5430309031115874
  (0, 53)	0.5430309031115874
  (0, 45)	0.5430309031115874
  (0, 21)	0.33963556173852155",4644,1
2000.0,"binary search,implementation,math,sortings","['binary search', 'implementation', 'math', 'sortings']","  (0, 56)	0.4396435381368818
  (0, 52)	0.4335390453139085
  (0, 37)	0.36747746852562546
  (0, 35)	0.3106338701139759
  (0, 4)	0.44001384320655224
  (0, 3)	0.44001384320655224",48,3
1000.0,"dp,number theory","['dp', 'number theory']","  (0, 68)	0.5321499476551752
  (0, 43)	0.5321499476551752
  (0, 42)	0.5321499476551752
  (0, 21)	0.38787794424507116",2861,1
4.0,greedy,['greedy'],"  (0, 33)	1.0",514,14
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3351,1
500.0,math,['math'],"  (0, 37)	1.0",5247,0
1000.0,"brute force,data structures,hashing,strings","['brute force', 'data structures', 'hashing', 'strings']","  (0, 62)	0.3161550785018851
  (0, 61)	0.39664606163591876
  (0, 34)	0.48168167792815686
  (0, 27)	0.3174426300212732
  (0, 16)	0.3227934008077211
  (0, 15)	0.3227934008077211
  (0, 7)	0.3174426300212732
  (0, 6)	0.3174426300212732",4165,1
1500.0,"combinatorics,constructive algorithms,greedy,implementation,math,sortings","['combinatorics', 'constructive algorithms', 'greedy', 'implementation', 'math', 'sortings']","  (0, 56)	0.37584888008272443
  (0, 37)	0.31415449795144934
  (0, 35)	0.26555921347751077
  (0, 33)	0.3156032028869083
  (0, 14)	0.3662630933459143
  (0, 13)	0.3662630933459143
  (0, 11)	0.4329798292994857
  (0, 2)	0.3662630933459143",5183,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",3091,1
2500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",5922,4
1000.0,math,['math'],"  (0, 37)	1.0",5329,1
1500.0,"binary search,brute force,greedy,implementation,math","['binary search', 'brute force', 'greedy', 'implementation', 'math']","  (0, 52)	0.3671716704792707
  (0, 37)	0.3112229854276493
  (0, 35)	0.2630811647301708
  (0, 33)	0.31265817186603345
  (0, 27)	0.32843794874935645
  (0, 7)	0.32843794874935645
  (0, 6)	0.32843794874935645
  (0, 4)	0.37265528812329696
  (0, 3)	0.37265528812329696",1102,2
2000.0,"dp,hashing","['dp', 'hashing']","  (0, 34)	0.8490350839774898
  (0, 21)	0.5283364706087748",3359,3
3500.0,"data structures,divide and conquer,graphs,trees","['data structures', 'divide and conquer', 'graphs', 'trees']","  (0, 69)	0.3446878062294784
  (0, 62)	0.2753798395582932
  (0, 32)	0.33289735360672296
  (0, 20)	0.4228598936730635
  (0, 19)	0.4228598936730635
  (0, 16)	0.28116200235061556
  (0, 15)	0.28116200235061556
  (0, 12)	0.4228598936730635",1899,6
500.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",2899,0
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5742,4
2500.0,"dp,dsu,graphs","['dp', 'dsu', 'graphs']","  (0, 32)	0.5756968828293246
  (0, 22)	0.6817024139740423
  (0, 21)	0.4515029544560725",3267,4
2500.0,"bitmasks,data structures,trees","['bitmasks', 'data structures', 'trees']","  (0, 69)	0.48266379589890374
  (0, 62)	0.38561236073070476
  (0, 16)	0.3937090806941307
  (0, 15)	0.3937090806941307
  (0, 5)	0.5552702827795841",1706,4
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5775,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5114,1
2000.0,"dfs and similar,trees","['dfs and similar', 'trees']","  (0, 69)	0.5372515306095824
  (0, 55)	0.4869499607617676
  (0, 18)	0.4869499607617676
  (0, 17)	0.4869499607617676",2845,3
2500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",113,3
1000.0,games,['games'],"  (0, 28)	1.0",1067,1
3000.0,math,['math'],"  (0, 37)	1.0",3097,4
2000.0,games,['games'],"  (0, 28)	1.0",3745,3
1500.0,"dfs and similar,divide and conquer","['dfs and similar', 'divide and conquer']","  (0, 55)	0.3430773071678545
  (0, 20)	0.4643611683159855
  (0, 19)	0.4643611683159855
  (0, 18)	0.3430773071678545
  (0, 17)	0.3430773071678545
  (0, 12)	0.4643611683159855",2666,2
1000.0,"binary search,dp,two pointers","['binary search', 'dp', 'two pointers']","  (0, 52)	0.4355498317399732
  (0, 46)	0.533046623272221
  (0, 21)	0.3678763327947699
  (0, 4)	0.4420546602281417
  (0, 3)	0.4420546602281417",6313,1
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1970,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",5886,0
1000.0,"dfs and similar,strings","['dfs and similar', 'strings']","  (0, 61)	0.5381397710839454
  (0, 55)	0.4866229158796775
  (0, 18)	0.4866229158796775
  (0, 17)	0.4866229158796775",1740,1
500.0,"combinatorics,dfs and similar,math","['combinatorics', 'dfs and similar', 'math']","  (0, 55)	0.44546340617944524
  (0, 37)	0.37358979278049714
  (0, 18)	0.44546340617944524
  (0, 17)	0.44546340617944524
  (0, 11)	0.5148958418896438",4682,1
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4991,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",5579,0
2500.0,sortings,['sortings'],"  (0, 56)	1.0",2224,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",3203,0
3500.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",3285,6
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4462,3
1000.0,"brute force,dfs and similar,graphs,implementation","['brute force', 'dfs and similar', 'graphs', 'implementation']","  (0, 55)	0.37829156918657036
  (0, 35)	0.2681808249751682
  (0, 32)	0.40309221582668725
  (0, 27)	0.33480450848351107
  (0, 18)	0.37829156918657036
  (0, 17)	0.37829156918657036
  (0, 7)	0.33480450848351107
  (0, 6)	0.33480450848351107",2908,1
8.0,"constructive algorithms,data structures","['constructive algorithms', 'data structures']","  (0, 62)	0.384154158879061
  (0, 16)	0.39222026091307066
  (0, 15)	0.39222026091307066
  (0, 14)	0.426126787108597
  (0, 13)	0.426126787108597
  (0, 2)	0.426126787108597",6262,14
1500.0,"binary search,greedy,math,matrices,number theory","['binary search', 'greedy', 'math', 'matrices', 'number theory']","  (0, 68)	0.353787231166853
  (0, 52)	0.30530872638111334
  (0, 43)	0.353787231166853
  (0, 42)	0.353787231166853
  (0, 38)	0.45243056868131376
  (0, 37)	0.2587865593699388
  (0, 33)	0.25997993832276095
  (0, 4)	0.30986843633006805
  (0, 3)	0.30986843633006805",646,2
1500.0,"graphs,greedy","['graphs', 'greedy']","  (0, 33)	0.6202293253313756
  (0, 32)	0.7844205402709612",3059,2
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",669,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",22,1
1500.0,"dfs and similar,math","['dfs and similar', 'math']","  (0, 55)	0.5196406868445478
  (0, 37)	0.43579888678974393
  (0, 18)	0.5196406868445478
  (0, 17)	0.5196406868445478",4741,2
3000.0,"binary search,data structures,divide and conquer,trees","['binary search', 'data structures', 'divide and conquer', 'trees']","  (0, 69)	0.31709902900304904
  (0, 62)	0.25333846499001045
  (0, 52)	0.2843688719880745
  (0, 20)	0.3890142304563876
  (0, 19)	0.3890142304563876
  (0, 16)	0.2586578240559424
  (0, 15)	0.2586578240559424
  (0, 12)	0.3890142304563876
  (0, 4)	0.2886158504159314
  (0, 3)	0.2886158504159314",787,4
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",867,0
1500.0,"games,graph matchings,greedy","['games', 'graph matchings', 'greedy']","  (0, 36)	0.497361275323981
  (0, 33)	0.2616985254313815
  (0, 31)	0.497361275323981
  (0, 30)	0.497361275323981
  (0, 28)	0.43521163496780496",1441,2
1750.0,"games,greedy,sortings","['games', 'greedy', 'sortings']","  (0, 56)	0.5230515163967832
  (0, 33)	0.4392103917227199
  (0, 28)	0.7304186080582836",5180,2
1000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",4171,2
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",2187,1
2500.0,"binary search,brute force,constructive algorithms,data structures,dp","['binary search', 'brute force', 'constructive algorithms', 'data structures', 'dp']","  (0, 62)	0.2621131711509918
  (0, 52)	0.2942183565230166
  (0, 27)	0.2631806352998085
  (0, 21)	0.2485042173158484
  (0, 16)	0.26761677311414883
  (0, 15)	0.26761677311414883
  (0, 14)	0.2907516185880501
  (0, 13)	0.2907516185880501
  (0, 7)	0.2631806352998085
  (0, 6)	0.2631806352998085
  (0, 4)	0.2986124345544727
  (0, 3)	0.2986124345544727
  (0, 2)	0.2907516185880501",4550,3
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3611,0
500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5910,0
1500.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",2023,2
2000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",4861,3
3000.0,"bitmasks,combinatorics,number theory","['bitmasks', 'combinatorics', 'number theory']","  (0, 68)	0.43677143481945335
  (0, 43)	0.43677143481945335
  (0, 42)	0.43677143481945335
  (0, 11)	0.4403298956638222
  (0, 5)	0.4835304790413481",2254,4
1000.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",5113,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3952,0
1000.0,"binary search,greedy,sortings","['binary search', 'greedy', 'sortings']","  (0, 56)	0.4622056140844986
  (0, 52)	0.4557878446664063
  (0, 33)	0.38811761835041586
  (0, 4)	0.4625949228478003
  (0, 3)	0.4625949228478003",5800,1
2000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",5993,3
1500.0,math,['math'],"  (0, 37)	1.0",5882,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6499,1
500.0,"greedy,implementation,sortings","['greedy', 'implementation', 'sortings']","  (0, 56)	0.6735367664416304
  (0, 35)	0.475893114022469
  (0, 33)	0.5655740166214763",6493,2
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",5213,1
2500.0,"graphs,greedy,shortest paths","['graphs', 'greedy', 'shortest paths']","  (0, 54)	0.49791411181995787
  (0, 53)	0.49791411181995787
  (0, 45)	0.49791411181995787
  (0, 33)	0.3139638654767157
  (0, 32)	0.397078459408901",2255,4
1000.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",6334,1
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",5307,1
2000.0,"data structures,math","['data structures', 'math']","  (0, 62)	0.5006188722082621
  (0, 37)	0.4763110282242326
  (0, 16)	0.5111303890304811
  (0, 15)	0.5111303890304811",309,3
2250.0,"brute force,combinatorics,number theory,probabilities","['brute force', 'combinatorics', 'number theory', 'probabilities']","  (0, 68)	0.3733004288032367
  (0, 47)	0.43725481051207066
  (0, 43)	0.3733004288032367
  (0, 42)	0.3733004288032367
  (0, 27)	0.2881639958477054
  (0, 11)	0.3763417791599319
  (0, 7)	0.2881639958477054
  (0, 6)	0.2881639958477054",1338,5
1500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",5249,2
2000.0,"dfs and similar,graphs,greedy,shortest paths,trees","['dfs and similar', 'graphs', 'greedy', 'shortest paths', 'trees']","  (0, 69)	0.32650514062971375
  (0, 55)	0.29593524887264183
  (0, 54)	0.39541446545320497
  (0, 53)	0.39541446545320497
  (0, 45)	0.39541446545320497
  (0, 33)	0.24933186485782458
  (0, 32)	0.3153366475118637
  (0, 18)	0.29593524887264183
  (0, 17)	0.29593524887264183",1018,3
500.0,"binary search,data structures,math","['binary search', 'data structures', 'math']","  (0, 62)	0.35700917799965254
  (0, 52)	0.4007377925857176
  (0, 37)	0.33967438724076165
  (0, 16)	0.3645053156575808
  (0, 15)	0.3645053156575808
  (0, 4)	0.4067227119210868
  (0, 3)	0.4067227119210868",6496,1
3000.0,"graphs,math,shortest paths","['graphs', 'math', 'shortest paths']","  (0, 54)	0.4981390424529809
  (0, 53)	0.4981390424529809
  (0, 45)	0.4981390424529809
  (0, 37)	0.3126638663737161
  (0, 32)	0.39725783795454656",3327,3
2000.0,"dsu,graphs,shortest paths","['dsu', 'graphs', 'shortest paths']","  (0, 54)	0.4699584501195172
  (0, 53)	0.4699584501195172
  (0, 45)	0.4699584501195172
  (0, 32)	0.374784270880697
  (0, 22)	0.44379490283711925",3680,3
1500.0,"greedy,math,sortings","['greedy', 'math', 'sortings']","  (0, 56)	0.6449922249726618
  (0, 37)	0.5391188303508488
  (0, 33)	0.5416049450346145",757,3
2000.0,"constructive algorithms,sortings","['constructive algorithms', 'sortings']","  (0, 56)	0.5097183429994464
  (0, 14)	0.4967183007198006
  (0, 13)	0.4967183007198006
  (0, 2)	0.4967183007198006",3728,3
2500.0,"data structures,implementation,math,two pointers","['data structures', 'implementation', 'math', 'two pointers']","  (0, 62)	0.3915053623654506
  (0, 46)	0.5378311866613075
  (0, 37)	0.37249558907162383
  (0, 35)	0.3148757579558511
  (0, 16)	0.3997258179474395
  (0, 15)	0.3997258179474395",3702,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3807,0
250.0,bitmasks,['bitmasks'],"  (0, 5)	1.0",6025,0
2750.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",944,4
2500.0,"brute force,combinatorics,dp","['brute force', 'combinatorics', 'dp']","  (0, 27)	0.4226823944461041
  (0, 21)	0.39911127004219316
  (0, 11)	0.5520226212767295
  (0, 7)	0.4226823944461041
  (0, 6)	0.4226823944461041",247,5
2500.0,"data structures,probabilities","['data structures', 'probabilities']","  (0, 62)	0.4300882608035963
  (0, 47)	0.6552658780707954
  (0, 16)	0.43911884322757494
  (0, 15)	0.43911884322757494",3145,4
1750.0,"brute force,hashing,implementation,math","['brute force', 'hashing', 'implementation', 'math']","  (0, 37)	0.3622659303465961
  (0, 35)	0.30622848362784977
  (0, 34)	0.5801015654233346
  (0, 27)	0.38230427904070485
  (0, 7)	0.38230427904070485
  (0, 6)	0.38230427904070485",885,3
2000.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",3675,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",819,0
250.0,"greedy,hashing","['greedy', 'hashing']","  (0, 34)	0.8470959733462488
  (0, 33)	0.5314399419883412",594,0
2500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",6529,4
1000.0,"brute force,dsu,meet-in-the-middle,number theory","['brute force', 'dsu', 'meet-in-the-middle', 'number theory']","  (0, 68)	0.27755024698651887
  (0, 43)	0.27755024698651887
  (0, 42)	0.27755024698651887
  (0, 41)	0.4234338962832036
  (0, 40)	0.4234338962832036
  (0, 39)	0.4234338962832036
  (0, 27)	0.21425099477265686
  (0, 22)	0.30544773913915874
  (0, 7)	0.21425099477265686
  (0, 6)	0.21425099477265686",625,1
3000.0,"dp,implementation,strings","['dp', 'implementation', 'strings']","  (0, 61)	0.7103067408575948
  (0, 35)	0.4553490797157075
  (0, 21)	0.5367695497085503",5485,5
1500.0,"combinatorics,math","['combinatorics', 'math']","  (0, 37)	0.587266654989628
  (0, 11)	0.8093935235330793",3653,2
2250.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",4611,4
2000.0,"math,matrices,probabilities","['math', 'matrices', 'probabilities']","  (0, 47)	0.6223364976023732
  (0, 38)	0.6794522642672247
  (0, 37)	0.3886410996461295",1593,3
2000.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",5674,3
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4320,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3934,0
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2038,1
500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",735,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4952,0
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",2491,2
2500.0,shortest paths,['shortest paths'],"  (0, 54)	0.5773502691896257
  (0, 53)	0.5773502691896257
  (0, 45)	0.5773502691896257",5767,4
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1728,4
2500.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",5732,4
500.0,"implementation,strings,two pointers","['implementation', 'strings', 'two pointers']","  (0, 61)	0.6189923054807784
  (0, 46)	0.6777827836702783
  (0, 35)	0.3968110682878687",747,1
2500.0,"constructive algorithms,graphs,shortest paths","['constructive algorithms', 'graphs', 'shortest paths']","  (0, 54)	0.43674951476911017
  (0, 53)	0.43674951476911017
  (0, 45)	0.43674951476911017
  (0, 32)	0.3483006814934623
  (0, 14)	0.31960194999302394
  (0, 13)	0.31960194999302394
  (0, 2)	0.31960194999302394",2665,4
2000.0,sortings,['sortings'],"  (0, 56)	1.0",4924,3
1500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",106,2
1000.0,"binary search,two pointers","['binary search', 'two pointers']","  (0, 52)	0.4683962475126431
  (0, 46)	0.5732456309133718
  (0, 4)	0.47539162905693094
  (0, 3)	0.47539162905693094",5345,2
1500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1926,2
1000.0,"expression parsing,implementation,strings","['expression parsing', 'implementation', 'strings']","  (0, 61)	0.35848421663739954
  (0, 44)	0.5223908233673795
  (0, 35)	0.22980981138002787
  (0, 24)	0.5223908233673795
  (0, 23)	0.5223908233673795",2202,1
2000.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",986,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",439,1
2500.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",1793,4
1500.0,"brute force,combinatorics,probabilities","['brute force', 'combinatorics', 'probabilities']","  (0, 47)	0.5731857084519932
  (0, 27)	0.37774652248397533
  (0, 11)	0.4933364347787187
  (0, 7)	0.37774652248397533
  (0, 6)	0.37774652248397533",5172,3
1500.0,greedy,['greedy'],"  (0, 33)	1.0",4603,2
500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",2554,0
2000.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",1911,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4201,0
500.0,"constructive algorithms,greedy,implementation","['constructive algorithms', 'greedy', 'implementation']","  (0, 35)	0.35095054957549987
  (0, 33)	0.41708632907337784
  (0, 14)	0.4840360543915258
  (0, 13)	0.4840360543915258
  (0, 2)	0.4840360543915258",3377,0
2000.0,dp,['dp'],"  (0, 21)	1.0",521,3
2500.0,"combinatorics,dp,math","['combinatorics', 'dp', 'math']","  (0, 37)	0.5068584924232472
  (0, 21)	0.5050661081799452
  (0, 11)	0.6985718968197883",3579,4
2250.0,"binary search,brute force,dp,implementation","['binary search', 'brute force', 'dp', 'implementation']","  (0, 52)	0.38669770838176587
  (0, 35)	0.2770717124956033
  (0, 27)	0.3459041433158562
  (0, 21)	0.32661460180417184
  (0, 7)	0.3459041433158562
  (0, 6)	0.3459041433158562
  (0, 4)	0.3924729425489849
  (0, 3)	0.3924729425489849",2381,4
1750.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",441,2
1500.0,"dfs and similar,graphs,implementation,matrices,strings","['dfs and similar', 'graphs', 'implementation', 'matrices', 'strings']","  (0, 61)	0.3907220835068507
  (0, 55)	0.35331772485744634
  (0, 38)	0.518034421007779
  (0, 35)	0.25047621107275597
  (0, 32)	0.3764810960758992
  (0, 18)	0.35331772485744634
  (0, 17)	0.35331772485744634",2123,2
1500.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",2216,2
2500.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",1638,4
1500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",729,2
2000.0,"data structures,dsu,implementation,trees","['data structures', 'dsu', 'implementation', 'trees']","  (0, 69)	0.4617680800741405
  (0, 62)	0.3689182428440742
  (0, 35)	0.2967096303289862
  (0, 22)	0.5280916316289799
  (0, 16)	0.3766644356685144
  (0, 15)	0.3766644356685144",3294,3
1500.0,"dp,games,number theory","['dp', 'games', 'number theory']","  (0, 68)	0.4461113186819205
  (0, 43)	0.4461113186819205
  (0, 42)	0.4461113186819205
  (0, 28)	0.5451802895880304
  (0, 21)	0.325165382346192",3628,2
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",2937,1
1000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",820,1
1000.0,"bitmasks,brute force,constructive algorithms,implementation","['bitmasks', 'brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2618197919154381
  (0, 27)	0.32686321533845675
  (0, 14)	0.3611056292507544
  (0, 13)	0.3611056292507544
  (0, 7)	0.32686321533845675
  (0, 6)	0.32686321533845675
  (0, 5)	0.46876421099250276
  (0, 2)	0.3611056292507544",2646,1
1000.0,"graphs,implementation","['graphs', 'implementation']","  (0, 35)	0.5539173202280622
  (0, 32)	0.8325716800080113",3855,1
2500.0,"binary search,bitmasks,brute force,geometry,sortings","['binary search', 'bitmasks', 'brute force', 'geometry', 'sortings']","  (0, 56)	0.3274646902376833
  (0, 52)	0.3229178115099657
  (0, 29)	0.38955264038177045
  (0, 27)	0.28885252363976205
  (0, 7)	0.28885252363976205
  (0, 6)	0.28885252363976205
  (0, 5)	0.4142519530592635
  (0, 4)	0.3277405087688665
  (0, 3)	0.3277405087688665",3368,4
1250.0,"dp,greedy,sortings","['dp', 'greedy', 'sortings']","  (0, 56)	0.6456550033131226
  (0, 33)	0.5421614851179785
  (0, 21)	0.5377643914870152",6433,1
2250.0,"combinatorics,math,number theory","['combinatorics', 'math', 'number theory']","  (0, 68)	0.468734267535072
  (0, 43)	0.468734267535072
  (0, 42)	0.468734267535072
  (0, 37)	0.3428674572400869
  (0, 11)	0.47255313572210667",86,3
1000.0,"greedy,implementation,math","['greedy', 'implementation', 'math']","  (0, 37)	0.6059159597578303
  (0, 35)	0.5121892787020597
  (0, 33)	0.6087101054635212",4789,1
500.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",821,0
3000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",973,3
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4862,0
2500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",1186,4
1500.0,"constructive algorithms,dp,math","['constructive algorithms', 'dp', 'math']","  (0, 37)	0.40586428310676204
  (0, 21)	0.4044290408116558
  (0, 14)	0.4731847189158438
  (0, 13)	0.4731847189158438
  (0, 2)	0.4731847189158438",176,2
1500.0,dp,['dp'],"  (0, 21)	1.0",6004,2
2000.0,"dfs and similar,dp,graphs,hashing,strings","['dfs and similar', 'dp', 'graphs', 'hashing', 'strings']","  (0, 61)	0.3944432312977183
  (0, 55)	0.35668264208845457
  (0, 34)	0.4790065901959878
  (0, 32)	0.3800666159584519
  (0, 21)	0.2980756108179879
  (0, 18)	0.35668264208845457
  (0, 17)	0.35668264208845457",3132,3
2000.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",5311,3
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5550,1
2000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",6059,3
2750.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",5134,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",1329,1
1000.0,"constructive algorithms,dfs and similar,divide and conquer","['constructive algorithms', 'dfs and similar', 'divide and conquer']","  (0, 55)	0.2966421352732904
  (0, 20)	0.40151034658744833
  (0, 19)	0.40151034658744833
  (0, 18)	0.2966421352732904
  (0, 17)	0.2966421352732904
  (0, 14)	0.2900452007826768
  (0, 13)	0.2900452007826768
  (0, 12)	0.40151034658744833
  (0, 2)	0.2900452007826768",3998,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3995,0
500.0,"greedy,strings","['greedy', 'strings']","  (0, 61)	0.795446608465514
  (0, 33)	0.6060236736965903",3480,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",1429,0
750.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",1014,1
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4298,4
2000.0,"constructive algorithms,data structures,dp","['constructive algorithms', 'data structures', 'dp']","  (0, 62)	0.3609591420787049
  (0, 21)	0.3422180911069003
  (0, 16)	0.3685382173088445
  (0, 15)	0.3685382173088445
  (0, 14)	0.4003974861037435
  (0, 13)	0.4003974861037435
  (0, 2)	0.4003974861037435",3704,2
1500.0,"greedy,hashing,implementation,math,number theory","['greedy', 'hashing', 'implementation', 'math', 'number theory']","  (0, 68)	0.41417973698372107
  (0, 43)	0.41417973698372107
  (0, 42)	0.41417973698372107
  (0, 37)	0.30296217515044577
  (0, 35)	0.25609818567303144
  (0, 34)	0.4851376222453082
  (0, 33)	0.30435926734953844",2396,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",235,0
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3164,0
500.0,"implementation,number theory","['implementation', 'number theory']","  (0, 68)	0.5437411290419024
  (0, 43)	0.5437411290419024
  (0, 42)	0.5437411290419024
  (0, 35)	0.3362093897628555",2904,0
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",2913,2
500.0,sortings,['sortings'],"  (0, 56)	1.0",5939,0
2000.0,"binary search,dp,probabilities","['binary search', 'dp', 'probabilities']","  (0, 52)	0.4219797291116501
  (0, 47)	0.5727573000186581
  (0, 21)	0.35641468311254365
  (0, 4)	0.42828189148969426
  (0, 3)	0.42828189148969426",419,3
2000.0,"brute force,dp,greedy","['brute force', 'dp', 'greedy']","  (0, 33)	0.434605795394828
  (0, 27)	0.45654023722501946
  (0, 21)	0.43108101093970486
  (0, 7)	0.45654023722501946
  (0, 6)	0.45654023722501946",5067,3
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",525,3
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",6480,1
1000.0,"brute force,data structures,implementation","['brute force', 'data structures', 'implementation']","  (0, 62)	0.3847234171033617
  (0, 35)	0.30942124734094417
  (0, 27)	0.38629021534232355
  (0, 16)	0.3928014718777355
  (0, 15)	0.3928014718777355
  (0, 7)	0.38629021534232355
  (0, 6)	0.38629021534232355",4330,2
500.0,math,['math'],"  (0, 37)	1.0",6311,0
2000.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",1024,3
2500.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",4585,4
1000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",5367,1
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",580,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",434,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",1991,0
2500.0,"dp,graphs,shortest paths","['dp', 'graphs', 'shortest paths']","  (0, 54)	0.49831103382738545
  (0, 53)	0.49831103382738545
  (0, 45)	0.49831103382738545
  (0, 32)	0.39739499829678016
  (0, 21)	0.31166577615508095",5125,4
1500.0,"data structures,dfs and similar,trees","['data structures', 'dfs and similar', 'trees']","  (0, 69)	0.42900090042824557
  (0, 62)	0.3427397111101813
  (0, 55)	0.38883457696857643
  (0, 18)	0.38883457696857643
  (0, 17)	0.38883457696857643
  (0, 16)	0.3499362321344195
  (0, 15)	0.3499362321344195",3440,2
3.0,"brute force,dfs and similar,dp,meet-in-the-middle","['brute force', 'dfs and similar', 'dp', 'meet-in-the-middle']","  (0, 55)	0.2562681458456452
  (0, 41)	0.4482517931100189
  (0, 40)	0.4482517931100189
  (0, 39)	0.4482517931100189
  (0, 27)	0.22680846626935067
  (0, 21)	0.21416036300188232
  (0, 18)	0.2562681458456452
  (0, 17)	0.2562681458456452
  (0, 7)	0.22680846626935067
  (0, 6)	0.22680846626935067",2066,14
2000.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",2711,3
1000.0,"divide and conquer,hashing,sortings,strings","['divide and conquer', 'hashing', 'sortings', 'strings']","  (0, 61)	0.358240292395452
  (0, 56)	0.3250310452878208
  (0, 34)	0.43504222487630695
  (0, 20)	0.43846587669517323
  (0, 19)	0.43846587669517323
  (0, 12)	0.43846587669517323",2916,1
1500.0,"brute force,dfs and similar,dsu,hashing,trees","['brute force', 'dfs and similar', 'dsu', 'hashing', 'trees']","  (0, 69)	0.34954567141111376
  (0, 55)	0.31681855012113325
  (0, 34)	0.4254711485700104
  (0, 27)	0.2803982102478489
  (0, 22)	0.3997507664771991
  (0, 18)	0.31681855012113325
  (0, 17)	0.31681855012113325
  (0, 7)	0.2803982102478489
  (0, 6)	0.2803982102478489",4574,2
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",5327,0
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3940,1
2500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",3354,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",1090,0
3000.0,"combinatorics,number theory","['combinatorics', 'number theory']","  (0, 68)	0.4989805785806445
  (0, 43)	0.4989805785806445
  (0, 42)	0.4989805785806445
  (0, 11)	0.5030458692783151",2357,5
1500.0,"dfs and similar,math,trees","['dfs and similar', 'math', 'trees']","  (0, 69)	0.49737487439753286
  (0, 55)	0.45080686005112686
  (0, 37)	0.3780711032472193
  (0, 18)	0.45080686005112686
  (0, 17)	0.45080686005112686",5021,2
1250.0,"brute force,dp,implementation,sortings","['brute force', 'dp', 'implementation', 'sortings']","  (0, 56)	0.46998738391323946
  (0, 35)	0.33207357166763984
  (0, 27)	0.41457001615549005
  (0, 21)	0.3914512831461869
  (0, 7)	0.41457001615549005
  (0, 6)	0.41457001615549005",4133,2
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4494,1
2000.0,"dfs and similar,geometry,trees","['dfs and similar', 'geometry', 'trees']","  (0, 69)	0.4644936265541305
  (0, 55)	0.4210042044328626
  (0, 29)	0.5025057715490927
  (0, 18)	0.4210042044328626
  (0, 17)	0.4210042044328626",143,3
2000.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",3531,2
1500.0,"brute force,dp","['brute force', 'dp']","  (0, 27)	0.5069172771013918
  (0, 21)	0.4786487465024144
  (0, 7)	0.5069172771013918
  (0, 6)	0.5069172771013918",5156,2
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",2050,1
1500.0,"dfs and similar,greedy,trees","['dfs and similar', 'greedy', 'trees']","  (0, 69)	0.4970465995929952
  (0, 55)	0.45050932082772566
  (0, 33)	0.3795638725894035
  (0, 18)	0.45050932082772566
  (0, 17)	0.45050932082772566",1590,2
1500.0,"dp,greedy,implementation","['dp', 'greedy', 'implementation']","  (0, 35)	0.5128543624762141
  (0, 33)	0.6095005226611119
  (0, 21)	0.6045572890677503",4617,2
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4041,1
1500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",1499,2
3000.0,graphs,['graphs'],"  (0, 32)	1.0",2963,4
1000.0,"constructive algorithms,data structures,geometry,sortings","['constructive algorithms', 'data structures', 'geometry', 'sortings']","  (0, 62)	0.31773145193913066
  (0, 56)	0.361670931930546
  (0, 29)	0.43024445286182716
  (0, 16)	0.3244028734284445
  (0, 15)	0.3244028734284445
  (0, 14)	0.35244674474758425
  (0, 13)	0.35244674474758425
  (0, 2)	0.35244674474758425",4370,1
2000.0,"dfs and similar,dp","['dfs and similar', 'dp']","  (0, 55)	0.51998941596248
  (0, 21)	0.4345492168454532
  (0, 18)	0.51998941596248
  (0, 17)	0.51998941596248",95,3
1500.0,"bitmasks,brute force,combinatorics,dp,math,probabilities","['bitmasks', 'brute force', 'combinatorics', 'dp', 'math', 'probabilities']","  (0, 47)	0.4605681287202157
  (0, 37)	0.2876188439813307
  (0, 27)	0.3035281697111344
  (0, 21)	0.28660174849662406
  (0, 11)	0.39640736892965894
  (0, 7)	0.3035281697111344
  (0, 6)	0.3035281697111344
  (0, 5)	0.435298731432072",1813,1
1000.0,"combinatorics,implementation","['combinatorics', 'implementation']","  (0, 35)	0.5228260521499568
  (0, 11)	0.8524393932669294",4606,1
1500.0,"constructive algorithms,dfs and similar,dp,greedy","['constructive algorithms', 'dfs and similar', 'dp', 'greedy']","  (0, 55)	0.37071964975749244
  (0, 33)	0.31233934438561645
  (0, 21)	0.30980617782990216
  (0, 18)	0.37071964975749244
  (0, 17)	0.37071964975749244
  (0, 14)	0.3624753278860216
  (0, 13)	0.3624753278860216
  (0, 2)	0.3624753278860216",6036,2
1000.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",1941,1
1000.0,"binary search,data structures,dp,dsu","['binary search', 'data structures', 'dp', 'dsu']","  (0, 62)	0.31800467747128686
  (0, 52)	0.3569557880719263
  (0, 22)	0.4552109098666571
  (0, 21)	0.30149382852744117
  (0, 16)	0.32468183588930427
  (0, 15)	0.32468183588930427
  (0, 4)	0.3622868340511913
  (0, 3)	0.3622868340511913",3610,1
2500.0,"chinese remainder theorem,implementation,number theory,two pointers","['chinese remainder theorem', 'implementation', 'number theory', 'two pointers']","  (0, 68)	0.20684478714502563
  (0, 67)	0.3668705022603744
  (0, 49)	0.3668705022603744
  (0, 48)	0.3668705022603744
  (0, 46)	0.2184585213597676
  (0, 43)	0.20684478714502563
  (0, 42)	0.20684478714502563
  (0, 35)	0.12789755261698732
  (0, 10)	0.3668705022603744
  (0, 9)	0.3668705022603744
  (0, 8)	0.3668705022603744",4993,5
2000.0,"dfs and similar,dp,graphs","['dfs and similar', 'dp', 'graphs']","  (0, 55)	0.45483721344002315
  (0, 32)	0.48465616244160165
  (0, 21)	0.38010226520993595
  (0, 18)	0.45483721344002315
  (0, 17)	0.45483721344002315",5792,3
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",1182,1
1500.0,"dfs and similar,graphs,sortings","['dfs and similar', 'graphs', 'sortings']","  (0, 56)	0.44246751156544467
  (0, 55)	0.44098969508652
  (0, 32)	0.4699008062257157
  (0, 18)	0.44098969508652
  (0, 17)	0.44098969508652",5126,2
2250.0,geometry,['geometry'],"  (0, 29)	1.0",4626,3
2000.0,implementation,['implementation'],"  (0, 35)	1.0",809,3
1500.0,"dfs and similar,dp,probabilities,trees","['dfs and similar', 'dp', 'probabilities', 'trees']","  (0, 69)	0.4256336389990484
  (0, 55)	0.3857825841357933
  (0, 47)	0.518086327671802
  (0, 21)	0.3223941000770684
  (0, 18)	0.3857825841357933
  (0, 17)	0.3857825841357933",1303,2
500.0,greedy,['greedy'],"  (0, 33)	1.0",4900,0
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",1012,0
500.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",1489,0
1750.0,"bitmasks,brute force,dp","['bitmasks', 'brute force', 'dp']","  (0, 27)	0.41001838997620654
  (0, 21)	0.3871534809925115
  (0, 7)	0.41001838997620654
  (0, 6)	0.41001838997620654
  (0, 5)	0.588019508009164",3700,2
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",1138,0
2750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",5103,4
2250.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4969,4
1500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",3504,2
2000.0,"binary search,constructive algorithms,data structures,greedy","['binary search', 'constructive algorithms', 'data structures', 'greedy']","  (0, 62)	0.294300841879918
  (0, 52)	0.33034856524386447
  (0, 33)	0.2813021449963552
  (0, 16)	0.30048028980318175
  (0, 15)	0.30048028980318175
  (0, 14)	0.32645610959824584
  (0, 13)	0.32645610959824584
  (0, 4)	0.33528223896298737
  (0, 3)	0.33528223896298737
  (0, 2)	0.32645610959824584",5973,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1629,0
1250.0,"brute force,constructive algorithms,implementation,strings","['brute force', 'constructive algorithms', 'implementation', 'strings']","  (0, 61)	0.41967599600500877
  (0, 35)	0.2690373997140004
  (0, 27)	0.3358738805552864
  (0, 14)	0.3710602579162099
  (0, 13)	0.3710602579162099
  (0, 7)	0.3358738805552864
  (0, 6)	0.3358738805552864
  (0, 2)	0.3710602579162099",6064,1
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",1782,0
1500.0,"data structures,greedy,sortings","['data structures', 'greedy', 'sortings']","  (0, 62)	0.43461045807336557
  (0, 56)	0.494713282046338
  (0, 33)	0.41541455781417724
  (0, 16)	0.44373599327542246
  (0, 15)	0.44373599327542246",5858,3
2000.0,"binary search,constructive algorithms,dfs and similar,trees","['binary search', 'constructive algorithms', 'dfs and similar', 'trees']","  (0, 69)	0.3474877821693476
  (0, 55)	0.3149533361041661
  (0, 52)	0.3116209751755026
  (0, 18)	0.3149533361041661
  (0, 17)	0.3149533361041661
  (0, 14)	0.30794918437108465
  (0, 13)	0.30794918437108465
  (0, 4)	0.31627495699139413
  (0, 3)	0.31627495699139413
  (0, 2)	0.30794918437108465",6047,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1057,0
2000.0,dp,['dp'],"  (0, 21)	1.0",1789,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1047,0
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3192,0
1500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",4080,2
3000.0,"binary search,bitmasks,brute force,dp,meet-in-the-middle","['binary search', 'bitmasks', 'brute force', 'dp', 'meet-in-the-middle']","  (0, 52)	0.24115200932900577
  (0, 41)	0.4263220782439843
  (0, 40)	0.4263220782439843
  (0, 39)	0.4263220782439843
  (0, 27)	0.2157123701221821
  (0, 21)	0.20368304697453732
  (0, 7)	0.2157123701221821
  (0, 6)	0.2157123701221821
  (0, 5)	0.3093594942365803
  (0, 4)	0.24475355465390192
  (0, 3)	0.24475355465390192",1562,4
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",1117,0
2000.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",1039,3
3000.0,"binary search,data structures,dp,sortings,trees","['binary search', 'data structures', 'dp', 'sortings', 'trees']","  (0, 69)	0.3826162809473853
  (0, 62)	0.30568186096358285
  (0, 56)	0.3479549879441661
  (0, 52)	0.3431235994615232
  (0, 21)	0.28981081443880624
  (0, 16)	0.3121002766529323
  (0, 15)	0.3121002766529323
  (0, 4)	0.3482480651416586
  (0, 3)	0.3482480651416586",3065,4
1500.0,dp,['dp'],"  (0, 21)	1.0",3054,2
1500.0,"graphs,shortest paths","['graphs', 'shortest paths']","  (0, 54)	0.5244320539952442
  (0, 53)	0.5244320539952442
  (0, 45)	0.5244320539952442
  (0, 32)	0.41822608984493986",2397,2
1500.0,"binary search,constructive algorithms,math","['binary search', 'constructive algorithms', 'math']","  (0, 52)	0.3860926639005131
  (0, 37)	0.3272608460069513
  (0, 14)	0.3815433825430412
  (0, 13)	0.3815433825430412
  (0, 4)	0.39185886187877866
  (0, 3)	0.39185886187877866
  (0, 2)	0.3815433825430412",6260,2
1500.0,"dfs and similar,graphs","['dfs and similar', 'graphs']","  (0, 55)	0.4917454284181643
  (0, 32)	0.5239840654919845
  (0, 18)	0.4917454284181643
  (0, 17)	0.4917454284181643",4017,2
2500.0,math,['math'],"  (0, 37)	1.0",3806,4
2000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",4703,3
2000.0,flows,['flows'],"  (0, 26)	1.0",5588,4
2500.0,"binary search,data structures,implementation,sortings,trees","['binary search', 'data structures', 'implementation', 'sortings', 'trees']","  (0, 69)	0.38720232424564105
  (0, 62)	0.309345767388054
  (0, 56)	0.35212558057186316
  (0, 52)	0.34723628300935244
  (0, 35)	0.24879731503096192
  (0, 16)	0.3158411142842634
  (0, 15)	0.3158411142842634
  (0, 4)	0.3524221705961337
  (0, 3)	0.3524221705961337",3177,4
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",5739,1
1500.0,"constructive algorithms,dfs and similar","['constructive algorithms', 'dfs and similar']","  (0, 55)	0.41281269240172125
  (0, 18)	0.41281269240172125
  (0, 17)	0.41281269240172125
  (0, 14)	0.4036322761194589
  (0, 13)	0.4036322761194589
  (0, 2)	0.4036322761194589",3659,2
1500.0,"data structures,dp,hashing,implementation,sortings,string suffix structures,strings","['data structures', 'dp', 'hashing', 'implementation', 'sortings', 'string suffix structures', 'strings']","  (0, 64)	0.33300145418243365
  (0, 63)	0.33300145418243365
  (0, 62)	0.3305733540752031
  (0, 61)	0.244949251410687
  (0, 60)	0.33300145418243365
  (0, 59)	0.33300145418243365
  (0, 58)	0.33300145418243365
  (0, 56)	0.22224220144561146
  (0, 35)	0.15702711207870862
  (0, 34)	0.2974630983101665
  (0, 21)	0.18510495792622758
  (0, 16)	0.19934145207960646
  (0, 15)	0.19934145207960646",4537,2
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",812,1
2500.0,"divide and conquer,math,trees","['divide and conquer', 'math', 'trees']","  (0, 69)	0.4051256418352905
  (0, 37)	0.3079494084777312
  (0, 20)	0.4970044856087852
  (0, 19)	0.4970044856087852
  (0, 12)	0.4970044856087852",5294,4
2000.0,"binary search,greedy,implementation","['binary search', 'greedy', 'implementation']","  (0, 52)	0.4823172334141437
  (0, 35)	0.3455837956408739
  (0, 33)	0.4107082233820183
  (0, 4)	0.4895205214230345
  (0, 3)	0.4895205214230345",4551,3
2500.0,games,['games'],"  (0, 28)	1.0",2413,4
1250.0,"constructive algorithms,dfs and similar","['constructive algorithms', 'dfs and similar']","  (0, 55)	0.41281269240172125
  (0, 18)	0.41281269240172125
  (0, 17)	0.41281269240172125
  (0, 14)	0.4036322761194589
  (0, 13)	0.4036322761194589
  (0, 2)	0.4036322761194589",3501,2
1500.0,"dp,hashing","['dp', 'hashing']","  (0, 34)	0.8490350839774898
  (0, 21)	0.5283364706087748",1996,2
2500.0,"combinatorics,data structures,implementation","['combinatorics', 'data structures', 'implementation']","  (0, 62)	0.42830294829965937
  (0, 35)	0.34447092797337947
  (0, 16)	0.43729604443724357
  (0, 15)	0.43729604443724357
  (0, 11)	0.5616410804936358",1198,4
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",2442,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2055,1
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",4570,0
500.0,math,['math'],"  (0, 37)	1.0",5852,0
1500.0,"binary search,data structures,dfs and similar,greedy","['binary search', 'data structures', 'dfs and similar', 'greedy']","  (0, 62)	0.29215996940807687
  (0, 55)	0.33145239500835644
  (0, 52)	0.3279454659359414
  (0, 33)	0.27925583070569376
  (0, 18)	0.33145239500835644
  (0, 17)	0.33145239500835644
  (0, 16)	0.2982944653364174
  (0, 15)	0.2982944653364174
  (0, 4)	0.332843249964152
  (0, 3)	0.332843249964152",144,3
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4773,1
1000.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",289,1
1000.0,"math,sortings","['math', 'sortings']","  (0, 56)	0.7672695625273075
  (0, 37)	0.6413247371021598",1259,1
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",3474,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",6396,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4257,1
2500.0,"binary search,data structures,ternary search","['binary search', 'data structures', 'ternary search']","  (0, 66)	0.46485165788982225
  (0, 65)	0.46485165788982225
  (0, 62)	0.24719352307037337
  (0, 52)	0.46979968309950815
  (0, 16)	0.2523838565163264
  (0, 15)	0.2523838565163264
  (0, 4)	0.2816152252326909
  (0, 3)	0.2816152252326909",1448,4
3.0,"constructive algorithms,math","['constructive algorithms', 'math']","  (0, 37)	0.4437763738372296
  (0, 14)	0.5173852626505319
  (0, 13)	0.5173852626505319
  (0, 2)	0.5173852626505319",791,0
3000.0,"binary search,geometry,two pointers","['binary search', 'geometry', 'two pointers']","  (0, 52)	0.4077974502139135
  (0, 46)	0.49908193730016853
  (0, 29)	0.4919473866398385
  (0, 4)	0.413887803781396
  (0, 3)	0.413887803781396",3776,4
1250.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",4495,2
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3312,0
1000.0,"binary search,ternary search","['binary search', 'ternary search']","  (0, 66)	0.5160242183141641
  (0, 65)	0.5160242183141641
  (0, 52)	0.5215169401270056
  (0, 4)	0.3126164530115755
  (0, 3)	0.3126164530115755",5576,1
1000.0,"geometry,sortings","['geometry', 'sortings']","  (0, 56)	0.6434690898301128
  (0, 29)	0.7654720964432382",5443,1
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3466,1
2000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",2218,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",5109,1
1500.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",354,2
1000.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",355,14
1000.0,implementation,['implementation'],"  (0, 35)	1.0",6426,1
30.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",4222,14
1000.0,"brute force,constructive algorithms,math","['brute force', 'constructive algorithms', 'math']","  (0, 37)	0.34464698527814425
  (0, 27)	0.3637107610540484
  (0, 14)	0.40181334904784716
  (0, 13)	0.40181334904784716
  (0, 7)	0.3637107610540484
  (0, 6)	0.3637107610540484
  (0, 2)	0.40181334904784716",509,1
1500.0,"data structures,dp,greedy,hashing,strings,two pointers","['data structures', 'dp', 'greedy', 'hashing', 'strings', 'two pointers']","  (0, 62)	0.3059982131061642
  (0, 61)	0.3839033257707575
  (0, 46)	0.42036558854973005
  (0, 34)	0.46620706974066856
  (0, 33)	0.2924828660426929
  (0, 21)	0.29011074153229477
  (0, 16)	0.3124232712555828
  (0, 15)	0.3124232712555828",4168,2
2500.0,"math,number theory,probabilities","['math', 'number theory', 'probabilities']","  (0, 68)	0.45142932155529103
  (0, 47)	0.5287688607512789
  (0, 43)	0.45142932155529103
  (0, 42)	0.45142932155529103
  (0, 37)	0.3302093197052188",5143,4
1750.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",1157,2
2500.0,graphs,['graphs'],"  (0, 32)	1.0",6123,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",1806,0
500.0,sortings,['sortings'],"  (0, 56)	1.0",4431,0
2000.0,two pointers,['two pointers'],"  (0, 46)	1.0",2142,3
500.0,"greedy,math","['greedy', 'math']","  (0, 37)	0.7054782744958024
  (0, 33)	0.7087315459427675",5491,0
2500.0,"data structures,dsu,string suffix structures,strings","['data structures', 'dsu', 'string suffix structures', 'strings']","  (0, 64)	0.35471634027850685
  (0, 63)	0.35471634027850685
  (0, 62)	0.3521299047748504
  (0, 61)	0.2609222900472914
  (0, 60)	0.35471634027850685
  (0, 59)	0.35471634027850685
  (0, 58)	0.35471634027850685
  (0, 22)	0.2977058382607009
  (0, 16)	0.21234042512241796
  (0, 15)	0.21234042512241796",1051,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",110,0
2500.0,geometry,['geometry'],"  (0, 29)	1.0",1421,4
1000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",3024,1
2000.0,"brute force,two pointers","['brute force', 'two pointers']","  (0, 46)	0.6198595316156775
  (0, 27)	0.45305413990868426
  (0, 7)	0.45305413990868426
  (0, 6)	0.45305413990868426",5341,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",340,0
2500.0,"brute force,dp,number theory","['brute force', 'dp', 'number theory']","  (0, 68)	0.43359845379121864
  (0, 43)	0.43359845379121864
  (0, 42)	0.43359845379121864
  (0, 27)	0.3347102049639565
  (0, 21)	0.3160448997983543
  (0, 7)	0.3347102049639565
  (0, 6)	0.3347102049639565",1016,4
1000.0,"binary search,math,sortings","['binary search', 'math', 'sortings']","  (0, 56)	0.4625248062720955
  (0, 52)	0.45610260483977055
  (0, 37)	0.3866028502533253
  (0, 4)	0.46291438388612516
  (0, 3)	0.46291438388612516",2063,1
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",2596,0
2500.0,"binary search,constructive algorithms,data structures,greedy,hashing,strings","['binary search', 'constructive algorithms', 'data structures', 'greedy', 'hashing', 'strings']","  (0, 62)	0.2544862388985203
  (0, 61)	0.3192767450643173
  (0, 52)	0.28565723209427923
  (0, 34)	0.38772541356324947
  (0, 33)	0.24324607573979729
  (0, 16)	0.25982969782447984
  (0, 15)	0.25982969782447984
  (0, 14)	0.28229136881300126
  (0, 13)	0.28229136881300126
  (0, 4)	0.28992345186012125
  (0, 3)	0.28992345186012125
  (0, 2)	0.28229136881300126",4160,4
1000.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",1945,2
1500.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",5880,3
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",68,2
2000.0,"dp,probabilities,two pointers","['dp', 'probabilities', 'two pointers']","  (0, 47)	0.6741627607954244
  (0, 46)	0.6078732908913632
  (0, 21)	0.41951714408066276",2193,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",960,1
2500.0,matrices,['matrices'],"  (0, 38)	1.0",4235,4
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4980,0
1500.0,"binary search,combinatorics,dp,math","['binary search', 'combinatorics', 'dp', 'math']","  (0, 52)	0.413209284746187
  (0, 37)	0.3502455051536779
  (0, 21)	0.3490069454094711
  (0, 11)	0.4827218455353393
  (0, 4)	0.41938046271738505
  (0, 3)	0.41938046271738505",6229,2
1000.0,"greedy,math,number theory","['greedy', 'math', 'number theory']","  (0, 68)	0.49537388813748773
  (0, 43)	0.49537388813748773
  (0, 42)	0.49537388813748773
  (0, 37)	0.36235367706741684
  (0, 33)	0.3640246496741194",6274,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",4060,1
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5726,0
1500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",5266,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",334,0
1500.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",349,2
2500.0,"bitmasks,divide and conquer,dp","['bitmasks', 'divide and conquer', 'dp']","  (0, 21)	0.29912014396092224
  (0, 20)	0.48446799970815446
  (0, 19)	0.48446799970815446
  (0, 12)	0.48446799970815446
  (0, 5)	0.4543120197101725",4389,4
1000.0,"data structures,greedy,implementation,sortings","['data structures', 'greedy', 'implementation', 'sortings']","  (0, 62)	0.41026902917910696
  (0, 56)	0.46700564649757853
  (0, 35)	0.3299667998110226
  (0, 33)	0.3921482425821431
  (0, 16)	0.4188834663113484
  (0, 15)	0.4188834663113484",4203,1
1000.0,"bitmasks,brute force,dp","['bitmasks', 'brute force', 'dp']","  (0, 27)	0.41001838997620654
  (0, 21)	0.3871534809925115
  (0, 7)	0.41001838997620654
  (0, 6)	0.41001838997620654
  (0, 5)	0.588019508009164",4547,1
1000.0,dp,['dp'],"  (0, 21)	1.0",1180,1
750.0,"data structures,greedy,sortings","['data structures', 'greedy', 'sortings']","  (0, 62)	0.43461045807336557
  (0, 56)	0.494713282046338
  (0, 33)	0.41541455781417724
  (0, 16)	0.44373599327542246
  (0, 15)	0.44373599327542246",6157,1
3000.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",4793,4
2750.0,"binary search,data structures","['binary search', 'data structures']","  (0, 62)	0.37957769344396236
  (0, 52)	0.4260706344800462
  (0, 16)	0.38754770322880217
  (0, 15)	0.38754770322880217
  (0, 4)	0.4324338935130389
  (0, 3)	0.4324338935130389",3121,4
1000.0,"dfs and similar,dp,dsu,graphs","['dfs and similar', 'dp', 'dsu', 'graphs']","  (0, 55)	0.3944889734577687
  (0, 32)	0.42035151555773126
  (0, 22)	0.4977526393143712
  (0, 21)	0.32966993020990515
  (0, 18)	0.3944889734577687
  (0, 17)	0.3944889734577687",2813,1
1500.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",2492,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",2747,0
1500.0,dp,['dp'],"  (0, 21)	1.0",1698,2
2500.0,"flows,graphs","['flows', 'graphs']","  (0, 32)	0.5893870978296795
  (0, 26)	0.8078507590588176",5555,4
2000.0,"binary search,brute force,data structures,implementation","['binary search', 'brute force', 'data structures', 'implementation']","  (0, 62)	0.30697442748807297
  (0, 52)	0.3445744872473685
  (0, 35)	0.2468901190634122
  (0, 27)	0.3082245905169208
  (0, 16)	0.31341998325447556
  (0, 15)	0.31341998325447556
  (0, 7)	0.3082245905169208
  (0, 6)	0.3082245905169208
  (0, 4)	0.3497206215759908
  (0, 3)	0.3497206215759908",4376,3
1250.0,"binary search,greedy,sortings","['binary search', 'greedy', 'sortings']","  (0, 56)	0.4622056140844986
  (0, 52)	0.4557878446664063
  (0, 33)	0.38811761835041586
  (0, 4)	0.4625949228478003
  (0, 3)	0.4625949228478003",6299,2
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5657,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",1435,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",5275,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2829,1
500.0,"brute force,geometry,implementation","['brute force', 'geometry', 'implementation']","  (0, 35)	0.3427871435501305
  (0, 29)	0.5771358952904511
  (0, 27)	0.4279451415715304
  (0, 7)	0.4279451415715304
  (0, 6)	0.4279451415715304",6112,0
2000.0,"data structures,dp,greedy","['data structures', 'dp', 'greedy']","  (0, 62)	0.45187661839596677
  (0, 33)	0.431918105352721
  (0, 21)	0.42841511887678035
  (0, 16)	0.4613646919375904
  (0, 15)	0.4613646919375904",3525,3
1000.0,"greedy,math,sortings","['greedy', 'math', 'sortings']","  (0, 56)	0.6449922249726618
  (0, 37)	0.5391188303508488
  (0, 33)	0.5416049450346145",1992,2
1500.0,implementation,['implementation'],"  (0, 35)	1.0",2638,2
1500.0,"constructive algorithms,dp,math,number theory","['constructive algorithms', 'dp', 'math', 'number theory']","  (0, 68)	0.4000588829053821
  (0, 43)	0.4000588829053821
  (0, 42)	0.4000588829053821
  (0, 37)	0.29263312163925537
  (0, 21)	0.29159829435681833
  (0, 14)	0.341171980811903
  (0, 13)	0.341171980811903
  (0, 2)	0.341171980811903",4463,3
3000.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",4500,4
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4391,0
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",1579,2
2000.0,"bitmasks,brute force,dp,math","['bitmasks', 'brute force', 'dp', 'math']","  (0, 37)	0.3621535697145758
  (0, 27)	0.38218570330167256
  (0, 21)	0.36087289993846405
  (0, 7)	0.38218570330167256
  (0, 6)	0.38218570330167256
  (0, 5)	0.5481038283103036",5304,3
1500.0,"data structures,dp,math,sortings","['data structures', 'dp', 'math', 'sortings']","  (0, 62)	0.4021068077333558
  (0, 56)	0.45771466123662347
  (0, 37)	0.3825822750201098
  (0, 21)	0.38122936399708585
  (0, 16)	0.4105498623372973
  (0, 15)	0.4105498623372973",626,3
1500.0,"brute force,constructive algorithms,greedy","['brute force', 'constructive algorithms', 'greedy']","  (0, 33)	0.3460463712851132
  (0, 27)	0.36351124193785384
  (0, 14)	0.40159292817263054
  (0, 13)	0.40159292817263054
  (0, 7)	0.36351124193785384
  (0, 6)	0.36351124193785384
  (0, 2)	0.40159292817263054",4328,2
1500.0,"binary search,sortings,two pointers","['binary search', 'sortings', 'two pointers']","  (0, 56)	0.4290505876021189
  (0, 52)	0.42309317891641646
  (0, 46)	0.5178015784093971
  (0, 4)	0.42941197039056483
  (0, 3)	0.42941197039056483",6290,2
2250.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",5663,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5283,1
1000.0,"constructive algorithms,math,number theory","['constructive algorithms', 'math', 'number theory']","  (0, 68)	0.4182350129787219
  (0, 43)	0.4182350129787219
  (0, 42)	0.4182350129787219
  (0, 37)	0.3059285086684207
  (0, 14)	0.3566726647501791
  (0, 13)	0.3566726647501791
  (0, 2)	0.3566726647501791",5598,1
500.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",3553,0
2000.0,"data structures,dp,two pointers","['data structures', 'dp', 'two pointers']","  (0, 62)	0.4127118562032928
  (0, 46)	0.566963645222848
  (0, 21)	0.3912837968134368
  (0, 16)	0.42137758548368126
  (0, 15)	0.42137758548368126",461,3
2000.0,"dp,games","['dp', 'games']","  (0, 28)	0.8588402120288889
  (0, 21)	0.5122435848326194",1532,3
1000.0,"brute force,geometry,math","['brute force', 'geometry', 'math']","  (0, 37)	0.396319773097929
  (0, 29)	0.5640497270514321
  (0, 27)	0.4182417733260716
  (0, 7)	0.4182417733260716
  (0, 6)	0.4182417733260716",2167,1
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1271,0
500.0,math,['math'],"  (0, 37)	1.0",264,0
2000.0,"brute force,combinatorics,data structures,geometry,math,sortings","['brute force', 'combinatorics', 'data structures', 'geometry', 'math', 'sortings']","  (0, 62)	0.29033130053470835
  (0, 56)	0.3304815793090311
  (0, 37)	0.2762340933600213
  (0, 29)	0.3931415375621945
  (0, 27)	0.2915136839046062
  (0, 16)	0.2964273998210288
  (0, 15)	0.2964273998210288
  (0, 11)	0.38071646711932244
  (0, 7)	0.2915136839046062
  (0, 6)	0.2915136839046062",2999,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",1855,0
2000.0,"constructive algorithms,dsu,graphs,greedy,trees","['constructive algorithms', 'dsu', 'graphs', 'greedy', 'trees']","  (0, 69)	0.4022614154486266
  (0, 33)	0.30718226573926927
  (0, 32)	0.3885015896726837
  (0, 22)	0.4600380502514177
  (0, 14)	0.3564904469964696
  (0, 13)	0.3564904469964696
  (0, 2)	0.3564904469964696",4552,3
1500.0,math,['math'],"  (0, 37)	1.0",3964,2
1750.0,"divide and conquer,dp","['divide and conquer', 'dp']","  (0, 21)	0.33577214919058945
  (0, 20)	0.5438311820862343
  (0, 19)	0.5438311820862343
  (0, 12)	0.5438311820862343",74,2
2000.0,"binary search,geometry,math,two pointers","['binary search', 'geometry', 'math', 'two pointers']","  (0, 52)	0.3854219112447527
  (0, 46)	0.4716976872735773
  (0, 37)	0.32669230093446033
  (0, 29)	0.46495460403474276
  (0, 4)	0.39117809169880924
  (0, 3)	0.39117809169880924",4232,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",2260,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",532,0
1500.0,"greedy,implementation,two pointers","['greedy', 'implementation', 'two pointers']","  (0, 46)	0.7398542788524585
  (0, 35)	0.4331511124832791
  (0, 33)	0.5147773886042455",2727,2
3000.0,"brute force,constructive algorithms,dfs and similar,graphs","['brute force', 'constructive algorithms', 'dfs and similar', 'graphs']","  (0, 55)	0.32697596301680076
  (0, 32)	0.34841237867900715
  (0, 27)	0.28938796288576935
  (0, 18)	0.32697596301680076
  (0, 17)	0.32697596301680076
  (0, 14)	0.3197044437296304
  (0, 13)	0.3197044437296304
  (0, 7)	0.28938796288576935
  (0, 6)	0.28938796288576935
  (0, 2)	0.3197044437296304",1072,4
1000.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",4593,1
2750.0,"dp,trees","['dp', 'trees']","  (0, 69)	0.7971422900186308
  (0, 21)	0.603791495024444",4368,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4891,0
1500.0,"dfs and similar,dsu,graphs","['dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.41784825617123766
  (0, 32)	0.44524222366772453
  (0, 22)	0.527226580046366
  (0, 18)	0.41784825617123766
  (0, 17)	0.41784825617123766",1637,2
2500.0,"dp,graphs,shortest paths","['dp', 'graphs', 'shortest paths']","  (0, 54)	0.49831103382738545
  (0, 53)	0.49831103382738545
  (0, 45)	0.49831103382738545
  (0, 32)	0.39739499829678016
  (0, 21)	0.31166577615508095",1828,2
1500.0,math,['math'],"  (0, 37)	1.0",4989,2
3000.0,"dp,trees,two pointers","['dp', 'trees', 'two pointers']","  (0, 69)	0.5999452782077653
  (0, 46)	0.658455044146592
  (0, 21)	0.45442559126232823",2987,5
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",6168,1
1500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",1046,2
1500.0,"combinatorics,divide and conquer","['combinatorics', 'divide and conquer']","  (0, 20)	0.5178312172265843
  (0, 19)	0.5178312172265843
  (0, 12)	0.5178312172265843
  (0, 11)	0.4422131741557481",2744,2
1000.0,"constructive algorithms,implementation,math","['constructive algorithms', 'implementation', 'math']","  (0, 37)	0.4155029502925351
  (0, 35)	0.3512304849899789
  (0, 14)	0.4844221453484221
  (0, 13)	0.4844221453484221
  (0, 2)	0.4844221453484221",477,1
500.0,math,['math'],"  (0, 37)	1.0",1494,0
3000.0,math,['math'],"  (0, 37)	1.0",4838,4
2000.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",5644,3
1500.0,"constructive algorithms,dfs and similar,implementation","['constructive algorithms', 'dfs and similar', 'implementation']","  (0, 55)	0.3961948986232257
  (0, 35)	0.2808729652426572
  (0, 18)	0.3961948986232257
  (0, 17)	0.3961948986232257
  (0, 14)	0.38738404041751334
  (0, 13)	0.38738404041751334
  (0, 2)	0.38738404041751334",5424,2
2000.0,"constructive algorithms,dsu,math","['constructive algorithms', 'dsu', 'math']","  (0, 37)	0.36907377539567754
  (0, 22)	0.5552760244008658
  (0, 14)	0.430291794422014
  (0, 13)	0.430291794422014
  (0, 2)	0.430291794422014",6294,3
1750.0,"bitmasks,brute force,dp,matrices","['bitmasks', 'brute force', 'dp', 'matrices']","  (0, 38)	0.5618876941997691
  (0, 27)	0.3391727584711653
  (0, 21)	0.3202585964682317
  (0, 7)	0.3391727584711653
  (0, 6)	0.3391727584711653
  (0, 5)	0.48641769111356004",3385,3
2500.0,"dp,implementation","['dp', 'implementation']","  (0, 35)	0.64690165854566
  (0, 21)	0.7625734352643518",5504,4
2000.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",3927,3
500.0,"constructive algorithms,sortings","['constructive algorithms', 'sortings']","  (0, 56)	0.5097183429994464
  (0, 14)	0.4967183007198006
  (0, 13)	0.4967183007198006
  (0, 2)	0.4967183007198006",4675,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",3402,0
30.0,implementation,['implementation'],"  (0, 35)	1.0",3888,14
1750.0,"constructive algorithms,dfs and similar,greedy","['constructive algorithms', 'dfs and similar', 'greedy']","  (0, 55)	0.38990298052266836
  (0, 33)	0.32850171656698574
  (0, 18)	0.38990298052266836
  (0, 17)	0.38990298052266836
  (0, 14)	0.38123204637559127
  (0, 13)	0.38123204637559127
  (0, 2)	0.38123204637559127",1342,1
1500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",251,2
500.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",859,0
2500.0,"bitmasks,dp,graphs,trees","['bitmasks', 'dp', 'graphs', 'trees']","  (0, 69)	0.5109783365748012
  (0, 32)	0.49349972039007717
  (0, 21)	0.3870380202239577
  (0, 5)	0.5878441429726795",1691,4
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",635,0
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5495,1
2500.0,implementation,['implementation'],"  (0, 35)	1.0",1226,4
1500.0,"dfs and similar,graphs,shortest paths","['dfs and similar', 'graphs', 'shortest paths']","  (0, 55)	0.32459110272609604
  (0, 54)	0.4337030410005036
  (0, 53)	0.4337030410005036
  (0, 45)	0.4337030410005036
  (0, 32)	0.3458711678846869
  (0, 18)	0.32459110272609604
  (0, 17)	0.32459110272609604",3252,2
2000.0,"dfs and similar,shortest paths","['dfs and similar', 'shortest paths']","  (0, 55)	0.34594194320753285
  (0, 54)	0.4622310085478141
  (0, 53)	0.4622310085478141
  (0, 45)	0.4622310085478141
  (0, 18)	0.34594194320753285
  (0, 17)	0.34594194320753285",4291,2
1000.0,"bitmasks,dp,sortings","['bitmasks', 'dp', 'sortings']","  (0, 56)	0.550981867787123
  (0, 21)	0.4589113804283891
  (0, 5)	0.6970074076242831",1306,1
1000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",4311,2
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",5653,0
2000.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",2953,3
1500.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",1417,2
500.0,geometry,['geometry'],"  (0, 29)	1.0",3650,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",5866,0
3000.0,"geometry,graphs,implementation,shortest paths","['geometry', 'graphs', 'implementation', 'shortest paths']","  (0, 54)	0.4605079366383028
  (0, 53)	0.4605079366383028
  (0, 45)	0.4605079366383028
  (0, 35)	0.2443331102641125
  (0, 32)	0.36724763907079044
  (0, 29)	0.41137309550454804",4984,0
2000.0,"data structures,geometry","['data structures', 'geometry']","  (0, 62)	0.45090386319704645
  (0, 29)	0.610575014624812
  (0, 16)	0.46037151175430574
  (0, 15)	0.46037151175430574",2363,3
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",2919,1
500.0,strings,['strings'],"  (0, 61)	1.0",387,0
3.0,"implementation,two pointers","['implementation', 'two pointers']","  (0, 46)	0.862981066565313
  (0, 35)	0.5052362603275765",4249,0
2000.0,dp,['dp'],"  (0, 21)	1.0",5936,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3280,0
1250.0,dp,['dp'],"  (0, 21)	1.0",5652,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",3104,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2311,0
2500.0,geometry,['geometry'],"  (0, 29)	1.0",1305,4
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",2383,1
1000.0,"data structures,implementation,two pointers","['data structures', 'implementation', 'two pointers']","  (0, 62)	0.42186533904591184
  (0, 46)	0.5795382585297644
  (0, 35)	0.33929335625137275
  (0, 16)	0.4307232644144295
  (0, 15)	0.4307232644144295",1239,1
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1318,3
1000.0,"brute force,dfs and similar","['brute force', 'dfs and similar']","  (0, 55)	0.4323414917201438
  (0, 27)	0.3826410431076809
  (0, 18)	0.4323414917201438
  (0, 17)	0.4323414917201438
  (0, 7)	0.3826410431076809
  (0, 6)	0.3826410431076809",613,0
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2439,1
1000.0,"hashing,string suffix structures,strings","['hashing', 'string suffix structures', 'strings']","  (0, 64)	0.3868310196854611
  (0, 63)	0.3868310196854611
  (0, 62)	0.22680273899208162
  (0, 61)	0.2845452099511727
  (0, 60)	0.3868310196854611
  (0, 59)	0.3868310196854611
  (0, 58)	0.3868310196854611
  (0, 34)	0.345547901346637",6297,1
2500.0,"bitmasks,divide and conquer,dp","['bitmasks', 'divide and conquer', 'dp']","  (0, 21)	0.29912014396092224
  (0, 20)	0.48446799970815446
  (0, 19)	0.48446799970815446
  (0, 12)	0.48446799970815446
  (0, 5)	0.4543120197101725",2993,4
1000.0,"constructive algorithms,implementation,sortings","['constructive algorithms', 'implementation', 'sortings']","  (0, 56)	0.4795652823376886
  (0, 35)	0.33884091702145436
  (0, 14)	0.4673342747001098
  (0, 13)	0.4673342747001098
  (0, 2)	0.4673342747001098",4079,1
500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",377,0
500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",1332,0
2250.0,"dp,sortings","['dp', 'sortings']","  (0, 56)	0.7683859805869373
  (0, 21)	0.6399867067662038",2765,4
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",3172,4
2000.0,graph matchings,['graph matchings'],"  (0, 36)	0.5773502691896257
  (0, 31)	0.5773502691896257
  (0, 30)	0.5773502691896257",3331,3
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",5454,1
2000.0,"binary search,data structures,two pointers","['binary search', 'data structures', 'two pointers']","  (0, 62)	0.33656834703372973
  (0, 52)	0.37779324666171993
  (0, 46)	0.46236136430952735
  (0, 16)	0.3436352876507821
  (0, 15)	0.3436352876507821
  (0, 4)	0.3834354949062101
  (0, 3)	0.3834354949062101",6030,3
1500.0,"games,math","['games', 'math']","  (0, 37)	0.5135825748776551
  (0, 28)	0.8580401731749148",4121,2
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",2791,1
2000.0,"data structures,dp","['data structures', 'dp']","  (0, 62)	0.5010202805652976
  (0, 21)	0.47500723498371566
  (0, 16)	0.5115402257767201
  (0, 15)	0.5115402257767201",5992,3
500.0,"dfs and similar,graphs,trees","['dfs and similar', 'graphs', 'trees']","  (0, 69)	0.4768781467201565
  (0, 55)	0.43222919173454066
  (0, 32)	0.46056596771609815
  (0, 18)	0.43222919173454066
  (0, 17)	0.43222919173454066",5807,0
2000.0,"binary search,data structures,sortings","['binary search', 'data structures', 'sortings']","  (0, 62)	0.3484440519734711
  (0, 56)	0.39663081584709964
  (0, 52)	0.39112355881116245
  (0, 16)	0.3557603472976266
  (0, 15)	0.3557603472976266
  (0, 4)	0.39696489195457096
  (0, 3)	0.39696489195457096",1731,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",3636,0
1500.0,"dp,geometry","['dp', 'geometry']","  (0, 29)	0.8191749629050964
  (0, 21)	0.5735437037832721",4227,2
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",2875,3
3000.0,"constructive algorithms,trees","['constructive algorithms', 'trees']","  (0, 69)	0.5458587121431187
  (0, 14)	0.4837486490515006
  (0, 13)	0.4837486490515006
  (0, 2)	0.4837486490515006",4971,6
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4522,1
2000.0,"games,math","['games', 'math']","  (0, 37)	0.5135825748776551
  (0, 28)	0.8580401731749148",5915,3
2500.0,flows,['flows'],"  (0, 26)	1.0",6534,4
1000.0,"constructive algorithms,geometry","['constructive algorithms', 'geometry']","  (0, 29)	0.5760883600361106
  (0, 14)	0.4719188494613965
  (0, 13)	0.4719188494613965
  (0, 2)	0.4719188494613965",4820,1
1000.0,"brute force,implementation,math","['brute force', 'implementation', 'math']","  (0, 37)	0.4447468316342108
  (0, 35)	0.37595074899627445
  (0, 27)	0.46934752230462495
  (0, 7)	0.46934752230462495
  (0, 6)	0.46934752230462495",2841,1
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",970,2
1000.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",2243,1
2000.0,"dp,math","['dp', 'math']","  (0, 37)	0.7083581418227796
  (0, 21)	0.7058532020989766",5787,3
2500.0,"data structures,dfs and similar,graphs,trees","['data structures', 'dfs and similar', 'graphs', 'trees']","  (0, 69)	0.39632933561327377
  (0, 62)	0.31663756849224534
  (0, 55)	0.3592219722606387
  (0, 32)	0.382772423618988
  (0, 18)	0.3592219722606387
  (0, 17)	0.3592219722606387
  (0, 16)	0.3232860216619616
  (0, 15)	0.3232860216619616",4595,4
1250.0,"binary search,brute force,two pointers","['binary search', 'brute force', 'two pointers']","  (0, 52)	0.3790920241186686
  (0, 46)	0.4639508700040718
  (0, 27)	0.3391007988885853
  (0, 7)	0.3391007988885853
  (0, 6)	0.3391007988885853
  (0, 4)	0.38475366928168814
  (0, 3)	0.38475366928168814",5703,1
1000.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",1950,1
3500.0,combinatorics,['combinatorics'],"  (0, 11)	1.0",4145,6
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",6512,1
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4807,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",3183,0
2500.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",3561,4
2500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",2263,4
2500.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",1935,3
2500.0,"data structures,dfs and similar,graphs,trees","['data structures', 'dfs and similar', 'graphs', 'trees']","  (0, 69)	0.39632933561327377
  (0, 62)	0.31663756849224534
  (0, 55)	0.3592219722606387
  (0, 32)	0.382772423618988
  (0, 18)	0.3592219722606387
  (0, 17)	0.3592219722606387
  (0, 16)	0.3232860216619616
  (0, 15)	0.3232860216619616",4421,4
2000.0,"dp,two pointers","['dp', 'two pointers']","  (0, 46)	0.8230265855448435
  (0, 21)	0.5680028516534017",3125,3
1000.0,"brute force,greedy,implementation","['brute force', 'greedy', 'implementation']","  (0, 35)	0.37560750854216096
  (0, 33)	0.4463898321280302
  (0, 27)	0.46891901123735624
  (0, 7)	0.46891901123735624
  (0, 6)	0.46891901123735624",1927,1
1000.0,"brute force,math","['brute force', 'math']","  (0, 37)	0.4799566188964724
  (0, 27)	0.5065049009231357
  (0, 7)	0.5065049009231357
  (0, 6)	0.5065049009231357",4775,1
1000.0,"expression parsing,implementation","['expression parsing', 'implementation']","  (0, 44)	0.5595830715849842
  (0, 35)	0.24617139961121315
  (0, 24)	0.5595830715849842
  (0, 23)	0.5595830715849842",5434,1
1500.0,"2-sat,greedy","['2-sat', 'greedy']","  (0, 50)	0.5581325023643114
  (0, 33)	0.255859980093909
  (0, 1)	0.5581325023643114
  (0, 0)	0.5581325023643114",2364,2
2500.0,"data structures,trees","['data structures', 'trees']","  (0, 69)	0.5803549753622684
  (0, 62)	0.46366032425213977
  (0, 16)	0.47339582079199927
  (0, 15)	0.47339582079199927",3332,4
1750.0,"dfs and similar,dp,graph matchings,trees","['dfs and similar', 'dp', 'graph matchings', 'trees']","  (0, 69)	0.3107282629794698
  (0, 55)	0.28163552236648814
  (0, 36)	0.4509612354603394
  (0, 31)	0.4509612354603394
  (0, 30)	0.4509612354603394
  (0, 21)	0.23535958987489894
  (0, 18)	0.28163552236648814
  (0, 17)	0.28163552236648814",3957,3
1000.0,"implementation,sortings","['implementation', 'sortings']","  (0, 56)	0.8167076220666944
  (0, 35)	0.5770516961747584",5749,1
2000.0,"dfs and similar,graphs,greedy","['dfs and similar', 'graphs', 'greedy']","  (0, 55)	0.4542986577646164
  (0, 33)	0.3827564711346894
  (0, 32)	0.48408229926772095
  (0, 18)	0.4542986577646164
  (0, 17)	0.4542986577646164",2051,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",5056,0
2000.0,"dp,greedy,math","['dp', 'greedy', 'math']","  (0, 37)	0.5771402159408785
  (0, 33)	0.5798016640014267
  (0, 21)	0.5750992971347582",5133,3
2500.0,"dp,matrices","['dp', 'matrices']","  (0, 38)	0.8687888373811061
  (0, 21)	0.4951827501458283",2140,4
2750.0,"data structures,strings","['data structures', 'strings']","  (0, 62)	0.46329701031250653
  (0, 61)	0.5812493519918441
  (0, 16)	0.47302487833334644
  (0, 15)	0.47302487833334644",3815,5
2500.0,"data structures,hashing,strings","['data structures', 'hashing', 'strings']","  (0, 62)	0.37850249650971574
  (0, 61)	0.4748667181667513
  (0, 34)	0.5766717981653713
  (0, 16)	0.3864499303364985
  (0, 15)	0.3864499303364985",4731,4
2000.0,"2-sat,binary search","['2-sat', 'binary search']","  (0, 52)	0.27306279327709715
  (0, 50)	0.507222020359821
  (0, 4)	0.2771409182293487
  (0, 3)	0.2771409182293487
  (0, 1)	0.507222020359821
  (0, 0)	0.507222020359821",3667,3
1500.0,"binary search,dfs and similar,probabilities,sortings,trees","['binary search', 'dfs and similar', 'probabilities', 'sortings', 'trees']","  (0, 69)	0.3484887005730593
  (0, 56)	0.31691903257836423
  (0, 55)	0.31586054092284777
  (0, 52)	0.3125185813217921
  (0, 47)	0.4241845910948268
  (0, 18)	0.31586054092284777
  (0, 17)	0.31586054092284777
  (0, 4)	0.31718596866239307
  (0, 3)	0.31718596866239307",2783,2
2500.0,implementation,['implementation'],"  (0, 35)	1.0",2625,3
2500.0,"bitmasks,brute force,fft","['bitmasks', 'brute force', 'fft']","  (0, 27)	0.33690878634868665
  (0, 25)	0.6527046249712546
  (0, 7)	0.33690878634868665
  (0, 6)	0.33690878634868665
  (0, 5)	0.4831708616879735",438,4
1500.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",5055,2
1500.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",4571,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",4698,0
1750.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",675,2
2500.0,"binary search,data structures,dfs and similar,dp,trees","['binary search', 'data structures', 'dfs and similar', 'dp', 'trees']","  (0, 69)	0.343637927865001
  (0, 62)	0.27454106507790726
  (0, 55)	0.3114639344075101
  (0, 52)	0.3081684930619892
  (0, 21)	0.26028685318886
  (0, 18)	0.3114639344075101
  (0, 17)	0.3114639344075101
  (0, 16)	0.28030561608499716
  (0, 15)	0.28030561608499716
  (0, 4)	0.3127709129155741
  (0, 3)	0.3127709129155741",6220,4
1000.0,"constructive algorithms,games,math","['constructive algorithms', 'games', 'math']","  (0, 37)	0.356484654329471
  (0, 28)	0.5955773608711799
  (0, 14)	0.4156145243072069
  (0, 13)	0.4156145243072069
  (0, 2)	0.4156145243072069",4208,0
3000.0,"brute force,dsu,graphs,implementation","['brute force', 'dsu', 'graphs', 'implementation']","  (0, 35)	0.3001136922651783
  (0, 32)	0.451089272420206
  (0, 27)	0.3746704009778419
  (0, 22)	0.5341502709122974
  (0, 7)	0.3746704009778419
  (0, 6)	0.3746704009778419",3632,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2230,0
2500.0,"probabilities,shortest paths","['probabilities', 'shortest paths']","  (0, 54)	0.49936372374022203
  (0, 53)	0.49936372374022203
  (0, 47)	0.5019039890625474
  (0, 45)	0.49936372374022203",3723,4
3000.0,"binary search,divide and conquer,sortings,trees","['binary search', 'divide and conquer', 'sortings', 'trees']","  (0, 69)	0.3370399343703017
  (0, 56)	0.3065074126227464
  (0, 52)	0.3022515277109088
  (0, 20)	0.41347755341399545
  (0, 19)	0.41347755341399545
  (0, 12)	0.41347755341399545
  (0, 4)	0.3067655791575413
  (0, 3)	0.3067655791575413",219,4
500.0,"data structures,math","['data structures', 'math']","  (0, 62)	0.5006188722082621
  (0, 37)	0.4763110282242326
  (0, 16)	0.5111303890304811
  (0, 15)	0.5111303890304811",1617,0
1000.0,"geometry,math","['geometry', 'math']","  (0, 37)	0.5749071630765996
  (0, 29)	0.818218646721777",6026,1
2000.0,"data structures,dsu,trees","['data structures', 'dsu', 'trees']","  (0, 69)	0.48354311668418504
  (0, 62)	0.38631487243084256
  (0, 22)	0.5529942074205609
  (0, 16)	0.39442634306381724
  (0, 15)	0.39442634306381724",1082,3
250.0,implementation,['implementation'],"  (0, 35)	1.0",5263,0
750.0,"greedy,sortings,two pointers","['greedy', 'sortings', 'two pointers']","  (0, 56)	0.5624010083403587
  (0, 46)	0.678736116981456
  (0, 33)	0.47225246354326555",3737,1
1000.0,implementation,['implementation'],"  (0, 35)	1.0",2566,1
2500.0,"binary search,dp","['binary search', 'dp']","  (0, 52)	0.5147820662068904
  (0, 21)	0.43479786904788514
  (0, 4)	0.5224702084249316
  (0, 3)	0.5224702084249316",3941,4
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",3877,1
3000.0,"binary search,math","['binary search', 'math']","  (0, 52)	0.5144364345710868
  (0, 37)	0.4360479194132385
  (0, 4)	0.5221194148665484
  (0, 3)	0.5221194148665484",827,4
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",2166,0
1000.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",5070,1
2750.0,math,['math'],"  (0, 37)	1.0",1250,4
1000.0,"sortings,strings","['sortings', 'strings']","  (0, 61)	0.740600272513757
  (0, 56)	0.6719458582003083",2561,1
1500.0,"greedy,sortings","['greedy', 'sortings']","  (0, 56)	0.765815093250802
  (0, 33)	0.6430608392285022",1485,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",325,0
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",3021,1
1000.0,"dfs and similar,shortest paths","['dfs and similar', 'shortest paths']","  (0, 55)	0.34594194320753285
  (0, 54)	0.4622310085478141
  (0, 53)	0.4622310085478141
  (0, 45)	0.4622310085478141
  (0, 18)	0.34594194320753285
  (0, 17)	0.34594194320753285",1623,1
3000.0,math,['math'],"  (0, 37)	1.0",3256,5
1000.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",5481,1
2000.0,"combinatorics,dfs and similar,graphs,math","['combinatorics', 'dfs and similar', 'graphs', 'math']","  (0, 55)	0.40242886848242304
  (0, 37)	0.33749869349464773
  (0, 32)	0.4288119469805123
  (0, 18)	0.40242886848242304
  (0, 17)	0.40242886848242304
  (0, 11)	0.46515369874059714",731,3
1000.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",373,1
2500.0,geometry,['geometry'],"  (0, 29)	1.0",5974,6
1250.0,"brute force,constructive algorithms,math","['brute force', 'constructive algorithms', 'math']","  (0, 37)	0.34464698527814425
  (0, 27)	0.3637107610540484
  (0, 14)	0.40181334904784716
  (0, 13)	0.40181334904784716
  (0, 7)	0.3637107610540484
  (0, 6)	0.3637107610540484
  (0, 2)	0.40181334904784716",3072,1
2500.0,"greedy,sortings,two pointers","['greedy', 'sortings', 'two pointers']","  (0, 56)	0.5624010083403587
  (0, 46)	0.678736116981456
  (0, 33)	0.47225246354326555",4958,4
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",5606,0
1000.0,"brute force,number theory","['brute force', 'number theory']","  (0, 68)	0.4570235457665541
  (0, 43)	0.4570235457665541
  (0, 42)	0.4570235457665541
  (0, 27)	0.3527928740044217
  (0, 7)	0.3527928740044217
  (0, 6)	0.3527928740044217",3435,1
1000.0,"dp,flows,greedy","['dp', 'flows', 'greedy']","  (0, 33)	0.4477102261196723
  (0, 26)	0.7761116236726073
  (0, 21)	0.44407916076769594",1349,1
500.0,games,['games'],"  (0, 28)	1.0",1109,0
2500.0,"data structures,dsu,graphs","['data structures', 'dsu', 'graphs']","  (0, 62)	0.38938801484253704
  (0, 32)	0.47071797222038936
  (0, 22)	0.5573932872218433
  (0, 16)	0.3975640123840062
  (0, 15)	0.3975640123840062",894,4
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",2579,0
1250.0,"bitmasks,divide and conquer","['bitmasks', 'divide and conquer']","  (0, 20)	0.5077134266289284
  (0, 19)	0.5077134266289284
  (0, 12)	0.5077134266289284
  (0, 5)	0.4761105221081922",4707,1
2000.0,"dp,strings","['dp', 'strings']","  (0, 61)	0.797816892350439
  (0, 21)	0.6028998310501408",5248,3
2500.0,"dp,graph matchings,math,meet-in-the-middle","['dp', 'graph matchings', 'math', 'meet-in-the-middle']","  (0, 41)	0.40919822587733373
  (0, 40)	0.40919822587733373
  (0, 39)	0.40919822587733373
  (0, 37)	0.19619561730039067
  (0, 36)	0.37459166863117865
  (0, 31)	0.37459166863117865
  (0, 30)	0.37459166863117865
  (0, 21)	0.19550181826513552",5595,4
1000.0,"brute force,dp,implementation,sortings,ternary search","['brute force', 'dp', 'implementation', 'sortings', 'ternary search']","  (0, 66)	0.49906272751834435
  (0, 65)	0.49906272751834435
  (0, 56)	0.30208644384762123
  (0, 52)	0.2978919445125459
  (0, 35)	0.21344173863903937
  (0, 27)	0.26646668866622525
  (0, 21)	0.25160702204519053
  (0, 7)	0.26646668866622525
  (0, 6)	0.26646668866622525",650,1
500.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",1544,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2546,0
2500.0,flows,['flows'],"  (0, 26)	1.0",5139,4
2250.0,"binary search,combinatorics,data structures,geometry","['binary search', 'combinatorics', 'data structures', 'geometry']","  (0, 62)	0.30869781688878845
  (0, 52)	0.3465089676662697
  (0, 29)	0.4180118855605186
  (0, 16)	0.31517955873942105
  (0, 15)	0.31517955873942105
  (0, 11)	0.40480079838755473
  (0, 4)	0.3516839929791645
  (0, 3)	0.3516839929791645",3912,3
500.0,implementation,['implementation'],"  (0, 35)	1.0",692,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",2719,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",175,0
2000.0,"data structures,dp,greedy,implementation,sortings","['data structures', 'dp', 'greedy', 'implementation', 'sortings']","  (0, 62)	0.3823624582944129
  (0, 56)	0.4352398410123013
  (0, 35)	0.30752240056658925
  (0, 33)	0.3654742507606711
  (0, 21)	0.36251014404263093
  (0, 16)	0.39039093991121204
  (0, 15)	0.39039093991121204",2360,3
2000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",150,2
500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4240,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",6515,0
1000.0,"binary search,implementation,two pointers","['binary search', 'implementation', 'two pointers']","  (0, 52)	0.4440555681212187
  (0, 46)	0.5434563484656713
  (0, 35)	0.31816903497418203
  (0, 4)	0.45068742766827796
  (0, 3)	0.45068742766827796",966,1
2000.0,"binary search,data structures,dfs and similar,dsu,shortest paths,two pointers","['binary search', 'data structures', 'dfs and similar', 'dsu', 'shortest paths', 'two pointers']","  (0, 62)	0.21500901179871143
  (0, 55)	0.24392544965502286
  (0, 54)	0.3259214698255911
  (0, 53)	0.3259214698255911
  (0, 52)	0.24134459863756216
  (0, 46)	0.29536901170368457
  (0, 45)	0.3259214698255911
  (0, 22)	0.3077767555769977
  (0, 18)	0.24392544965502286
  (0, 17)	0.24392544965502286
  (0, 16)	0.219523565623823
  (0, 15)	0.219523565623823
  (0, 4)	0.24494902023591664
  (0, 3)	0.24494902023591664",5710,3
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",4289,0
1000.0,greedy,['greedy'],"  (0, 33)	1.0",2300,1
3000.0,"brute force,data structures,dp","['brute force', 'data structures', 'dp']","  (0, 62)	0.37774301087330125
  (0, 27)	0.3792813811879354
  (0, 21)	0.3581305390011361
  (0, 16)	0.38567449774625023
  (0, 15)	0.38567449774625023
  (0, 7)	0.3792813811879354
  (0, 6)	0.3792813811879354",4436,5
2500.0,"dfs and similar,dsu,graphs,trees","['dfs and similar', 'dsu', 'graphs', 'trees']","  (0, 69)	0.4186637495568354
  (0, 55)	0.3794652686940885
  (0, 32)	0.4043428626127562
  (0, 22)	0.4787962445820802
  (0, 18)	0.3794652686940885
  (0, 17)	0.3794652686940885",2730,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",4524,0
1500.0,greedy,['greedy'],"  (0, 33)	1.0",4146,2
1000.0,math,['math'],"  (0, 37)	1.0",3605,1
500.0,"dp,greedy","['dp', 'greedy']","  (0, 33)	0.7099799961551347
  (0, 21)	0.7042218436398824",1445,0
3000.0,"string suffix structures,strings","['string suffix structures', 'strings']","  (0, 64)	0.41222353058540717
  (0, 63)	0.41222353058540717
  (0, 62)	0.24169061180713372
  (0, 61)	0.30322343630201615
  (0, 60)	0.41222353058540717
  (0, 59)	0.41222353058540717
  (0, 58)	0.41222353058540717",3349,4
500.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",3743,1
1000.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",5778,1
2000.0,"data structures,dfs and similar,dsu,graphs","['data structures', 'dfs and similar', 'dsu', 'graphs']","  (0, 62)	0.309247904313741
  (0, 55)	0.3508384764133632
  (0, 32)	0.37383930907795143
  (0, 22)	0.4426759411729897
  (0, 18)	0.3508384764133632
  (0, 17)	0.3508384764133632
  (0, 16)	0.3157411963746075
  (0, 15)	0.3157411963746075",6505,3
500.0,"brute force,constructive algorithms,implementation","['brute force', 'constructive algorithms', 'implementation']","  (0, 35)	0.2964031193163125
  (0, 27)	0.3700380170165641
  (0, 14)	0.4088034526708839
  (0, 13)	0.4088034526708839
  (0, 7)	0.3700380170165641
  (0, 6)	0.3700380170165641
  (0, 2)	0.4088034526708839",2008,0
1000.0,"data structures,implementation","['data structures', 'implementation']","  (0, 62)	0.5176610960676551
  (0, 35)	0.4163389461736369
  (0, 16)	0.5285304492255197
  (0, 15)	0.5285304492255197",1663,1
2250.0,"dfs and similar,graphs,shortest paths","['dfs and similar', 'graphs', 'shortest paths']","  (0, 55)	0.32459110272609604
  (0, 54)	0.4337030410005036
  (0, 53)	0.4337030410005036
  (0, 45)	0.4337030410005036
  (0, 32)	0.3458711678846869
  (0, 18)	0.32459110272609604
  (0, 17)	0.32459110272609604",4420,4
500.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",4936,0
1000.0,"binary search,constructive algorithms,graphs,shortest paths","['binary search', 'constructive algorithms', 'graphs', 'shortest paths']","  (0, 54)	0.38012979538684105
  (0, 53)	0.38012979538684105
  (0, 52)	0.2814858221733886
  (0, 45)	0.38012979538684105
  (0, 32)	0.30314737008740755
  (0, 14)	0.27816911009119266
  (0, 13)	0.27816911009119266
  (0, 4)	0.2856897429687986
  (0, 3)	0.2856897429687986
  (0, 2)	0.27816911009119266",1033,1
1500.0,"dfs and similar,implementation","['dfs and similar', 'implementation']","  (0, 55)	0.5343258550160532
  (0, 35)	0.37879762668751116
  (0, 18)	0.5343258550160532
  (0, 17)	0.5343258550160532",1767,2
2000.0,"binary search,data structures,dp,trees","['binary search', 'data structures', 'dp', 'trees']","  (0, 69)	0.4081191396466093
  (0, 62)	0.3260567422618047
  (0, 52)	0.365994117808963
  (0, 21)	0.3091278289470212
  (0, 16)	0.3329029702439114
  (0, 15)	0.3329029702439114
  (0, 4)	0.3714601489965199
  (0, 3)	0.3714601489965199",2847,3
1000.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",3410,1
2500.0,"constructive algorithms,strings","['constructive algorithms', 'strings']","  (0, 61)	0.5467493268887392
  (0, 14)	0.4834132716240183
  (0, 13)	0.4834132716240183
  (0, 2)	0.4834132716240183",667,5
1000.0,"implementation,math","['implementation', 'math']","  (0, 37)	0.7637024449468292
  (0, 35)	0.6455684127822824",5638,1
500.0,"data structures,dsu","['data structures', 'dsu']","  (0, 62)	0.44134103236819244
  (0, 22)	0.6317619429480074
  (0, 16)	0.4506078897393701
  (0, 15)	0.4506078897393701",5698,0
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",8,1
1000.0,"bitmasks,dp,games","['bitmasks', 'dp', 'games']","  (0, 28)	0.6778511843939329
  (0, 21)	0.4042951364104333
  (0, 5)	0.6140547324877577",3281,2
1500.0,"greedy,math,sortings","['greedy', 'math', 'sortings']","  (0, 56)	0.6449922249726618
  (0, 37)	0.5391188303508488
  (0, 33)	0.5416049450346145",3589,2
2250.0,"combinatorics,dp,fft","['combinatorics', 'dp', 'fft']","  (0, 25)	0.7687787432661757
  (0, 21)	0.3746940927525262
  (0, 11)	0.5182505000079023",993,4
2000.0,"combinatorics,implementation,math","['combinatorics', 'implementation', 'math']","  (0, 37)	0.5260173654138973
  (0, 35)	0.4446498736949964
  (0, 11)	0.7249773935137882",694,2
2250.0,"bitmasks,dp","['bitmasks', 'dp']","  (0, 21)	0.5499124193373313
  (0, 5)	0.8352223243296142",5452,3
2500.0,"data structures,dp,string suffix structures,strings,trees","['data structures', 'dp', 'string suffix structures', 'strings', 'trees']","  (0, 69)	0.258003177808709
  (0, 64)	0.3515639013987474
  (0, 63)	0.3515639013987474
  (0, 62)	0.349000452092556
  (0, 61)	0.25860341866094605
  (0, 60)	0.3515639013987474
  (0, 59)	0.3515639013987474
  (0, 58)	0.3515639013987474
  (0, 21)	0.19542323422150515
  (0, 16)	0.21045331100927903
  (0, 15)	0.21045331100927903",4237,4
2000.0,"bitmasks,dp,greedy,implementation,math","['bitmasks', 'dp', 'greedy', 'implementation', 'math']","  (0, 37)	0.4080004424990124
  (0, 35)	0.34488850968245144
  (0, 33)	0.40988191247181893
  (0, 21)	0.406557646185392
  (0, 5)	0.61749109545504",5146,3
3000.0,"constructive algorithms,greedy","['constructive algorithms', 'greedy']","  (0, 33)	0.44541756120237624
  (0, 14)	0.5169149498620083
  (0, 13)	0.5169149498620083
  (0, 2)	0.5169149498620083",3993,3
500.0,"binary search,implementation,math","['binary search', 'implementation', 'math']","  (0, 52)	0.4826902634565465
  (0, 37)	0.40913914908989724
  (0, 35)	0.3458510743715738
  (0, 4)	0.48989912257641
  (0, 3)	0.48989912257641",5754,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",4026,0
2000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",124,3
500.0,"greedy,implementation,math","['greedy', 'implementation', 'math']","  (0, 37)	0.6059159597578303
  (0, 35)	0.5121892787020597
  (0, 33)	0.6087101054635212",657,0
2500.0,"dp,implementation,math","['dp', 'implementation', 'math']","  (0, 37)	0.6077375925301162
  (0, 35)	0.5137291304928426
  (0, 21)	0.6055884733949006",2884,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",446,0
500.0,implementation,['implementation'],"  (0, 35)	1.0",3107,0
500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",4413,0
750.0,"binary search,geometry,ternary search","['binary search', 'geometry', 'ternary search']","  (0, 66)	0.48371083507595924
  (0, 65)	0.48371083507595924
  (0, 52)	0.48885960321635674
  (0, 29)	0.34830811347234486
  (0, 4)	0.2930404430217087
  (0, 3)	0.2930404430217087",3980,0
1000.0,"dp,games,math,probabilities","['dp', 'games', 'math', 'probabilities']","  (0, 47)	0.5907190931195583
  (0, 37)	0.36889643917145387
  (0, 28)	0.6163136758011826
  (0, 21)	0.36759192484474307",652,3
500.0,greedy,['greedy'],"  (0, 33)	1.0",97,0
3000.0,data structures,['data structures'],"  (0, 62)	0.569352944945379
  (0, 16)	0.5813076741631853
  (0, 15)	0.5813076741631853",4669,4
1000.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",3679,1
2000.0,"dp,string suffix structures,trees","['dp', 'string suffix structures', 'trees']","  (0, 69)	0.29493698197074514
  (0, 64)	0.40189115858598196
  (0, 63)	0.40189115858598196
  (0, 62)	0.23563264295122296
  (0, 60)	0.40189115858598196
  (0, 59)	0.40189115858598196
  (0, 58)	0.40189115858598196
  (0, 21)	0.22339856197812766",5628,2
1500.0,"combinatorics,dp,implementation,math,matrices","['combinatorics', 'dp', 'implementation', 'math', 'matrices']","  (0, 38)	0.6315334752244296
  (0, 37)	0.36123194694076977
  (0, 35)	0.3053544429192476
  (0, 21)	0.359954536263919
  (0, 11)	0.4978637827687795",4886,2
1500.0,"data structures,dfs and similar,graphs,implementation","['data structures', 'dfs and similar', 'graphs', 'implementation']","  (0, 62)	0.3323327620943009
  (0, 55)	0.3770280033882464
  (0, 35)	0.267285050007374
  (0, 32)	0.40174581115109687
  (0, 18)	0.3770280033882464
  (0, 17)	0.3770280033882464
  (0, 16)	0.33931076794517806
  (0, 15)	0.33931076794517806",1335,2
2500.0,"binary search,data structures,sortings","['binary search', 'data structures', 'sortings']","  (0, 62)	0.3484440519734711
  (0, 56)	0.39663081584709964
  (0, 52)	0.39112355881116245
  (0, 16)	0.3557603472976266
  (0, 15)	0.3557603472976266
  (0, 4)	0.39696489195457096
  (0, 3)	0.39696489195457096",1145,4
2500.0,"divide and conquer,dp,greedy","['divide and conquer', 'dp', 'greedy']","  (0, 33)	0.3206438426384689
  (0, 21)	0.3180433240900766
  (0, 20)	0.5151168055822457
  (0, 19)	0.5151168055822457
  (0, 12)	0.5151168055822457",3309,2
1500.0,"implementation,strings","['implementation', 'strings']","  (0, 61)	0.8418660827494792
  (0, 35)	0.5396864818726211",3027,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",1021,0
500.0,"brute force,greedy","['brute force', 'greedy']","  (0, 33)	0.4816573466427246
  (0, 27)	0.5059664680671668
  (0, 7)	0.5059664680671668
  (0, 6)	0.5059664680671668",1406,0
1250.0,"brute force,constructive algorithms,math,number theory","['brute force', 'constructive algorithms', 'math', 'number theory']","  (0, 68)	0.36503797705562496
  (0, 43)	0.36503797705562496
  (0, 42)	0.36503797705562496
  (0, 37)	0.26701620013254634
  (0, 27)	0.2817859128684715
  (0, 14)	0.3113059977550672
  (0, 13)	0.3113059977550672
  (0, 7)	0.2817859128684715
  (0, 6)	0.2817859128684715
  (0, 2)	0.3113059977550672",2163,2
1000.0,"dp,math,probabilities","['dp', 'math', 'probabilities']","  (0, 47)	0.7501187557615925
  (0, 37)	0.46843946840256806
  (0, 21)	0.4667829438801291",3296,1
500.0,"greedy,strings","['greedy', 'strings']","  (0, 61)	0.795446608465514
  (0, 33)	0.6060236736965903",6475,0
2500.0,"binary search,two pointers","['binary search', 'two pointers']","  (0, 52)	0.4683962475126431
  (0, 46)	0.5732456309133718
  (0, 4)	0.47539162905693094
  (0, 3)	0.47539162905693094",2533,4
2500.0,"combinatorics,dp","['combinatorics', 'dp']","  (0, 21)	0.5859036619853756
  (0, 11)	0.8103807123026353",1127,4
1500.0,"combinatorics,constructive algorithms,greedy,implementation","['combinatorics', 'constructive algorithms', 'greedy', 'implementation']","  (0, 35)	0.30460837737025803
  (0, 33)	0.3620110869637698
  (0, 14)	0.42012026279840775
  (0, 13)	0.42012026279840775
  (0, 11)	0.4966473635385158
  (0, 2)	0.42012026279840775",1201,2
1500.0,math,['math'],"  (0, 37)	1.0",6388,2
1750.0,"binary search,greedy","['binary search', 'greedy']","  (0, 52)	0.5139849270625998
  (0, 33)	0.43767425589322995
  (0, 4)	0.5216611642056371
  (0, 3)	0.5216611642056371",4446,2
1500.0,dp,['dp'],"  (0, 21)	1.0",1825,3
2500.0,"data structures,greedy","['data structures', 'greedy']","  (0, 62)	0.5000947375249198
  (0, 33)	0.47800652376165875
  (0, 16)	0.5105952490677799
  (0, 15)	0.5105952490677799",3592,4
1500.0,"binary search,brute force","['binary search', 'brute force']","  (0, 52)	0.42793627145617286
  (0, 27)	0.3827923625181976
  (0, 7)	0.3827923625181976
  (0, 6)	0.3827923625181976
  (0, 4)	0.43432739331373016
  (0, 3)	0.43432739331373016",2881,2
2250.0,"flows,math","['flows', 'math']","  (0, 37)	0.4979595835293664
  (0, 26)	0.867200238221404",835,4
1000.0,implementation,['implementation'],"  (0, 35)	1.0",5396,1
500.0,implementation,['implementation'],"  (0, 35)	1.0",4276,0
500.0,"brute force,implementation","['brute force', 'implementation']","  (0, 35)	0.41974888999677135
  (0, 27)	0.5240263572717433
  (0, 7)	0.5240263572717433
  (0, 6)	0.5240263572717433",4648,0
1500.0,"constructive algorithms,greedy,implementation,sortings","['constructive algorithms', 'greedy', 'implementation', 'sortings']","  (0, 56)	0.4448506342489958
  (0, 35)	0.3143129880289487
  (0, 33)	0.37354450795318156
  (0, 14)	0.43350500164073297
  (0, 13)	0.43350500164073297
  (0, 2)	0.43350500164073297",1486,2
1250.0,constructive algorithms,['constructive algorithms'],"  (0, 14)	0.5773502691896258
  (0, 13)	0.5773502691896258
  (0, 2)	0.5773502691896258",928,2
1250.0,"combinatorics,dfs and similar,dsu,graphs","['combinatorics', 'dfs and similar', 'dsu', 'graphs']","  (0, 55)	0.3762618377687167
  (0, 32)	0.40092941601458737
  (0, 22)	0.4747542654514879
  (0, 18)	0.3762618377687167
  (0, 17)	0.3762618377687167
  (0, 11)	0.43490812722521527",59,1
1500.0,"graphs,greedy,sortings","['graphs', 'greedy', 'sortings']","  (0, 56)	0.5941282438760824
  (0, 33)	0.49889406788067336
  (0, 32)	0.6309646098333855",3031,2
2000.0,dp,['dp'],"  (0, 21)	1.0",1908,4
500.0,implementation,['implementation'],"  (0, 35)	1.0",3782,0
1500.0,"data structures,expression parsing,implementation","['data structures', 'expression parsing', 'implementation']","  (0, 62)	0.2695928510428057
  (0, 44)	0.4928750743339864
  (0, 35)	0.216825263385137
  (0, 24)	0.4928750743339864
  (0, 23)	0.4928750743339864
  (0, 16)	0.2752535041787657
  (0, 15)	0.2752535041787657",3193,2
750.0,implementation,['implementation'],"  (0, 35)	1.0",6009,1
2500.0,"brute force,number theory,trees","['brute force', 'number theory', 'trees']","  (0, 69)	0.40257999971268044
  (0, 68)	0.41835240997258594
  (0, 43)	0.41835240997258594
  (0, 42)	0.41835240997258594
  (0, 27)	0.32294123667819513
  (0, 7)	0.32294123667819513
  (0, 6)	0.32294123667819513",1361,4
1500.0,number theory,['number theory'],"  (0, 68)	0.5773502691896257
  (0, 43)	0.5773502691896257
  (0, 42)	0.5773502691896257",5519,3
2000.0,math,['math'],"  (0, 37)	1.0",1530,3
2500.0,divide and conquer,['divide and conquer'],"  (0, 20)	0.5773502691896257
  (0, 19)	0.5773502691896257
  (0, 12)	0.5773502691896257",5200,4
2500.0,"data structures,two pointers","['data structures', 'two pointers']","  (0, 62)	0.4484681969258781
  (0, 46)	0.6160839817753344
  (0, 16)	0.4578847036896413
  (0, 15)	0.4578847036896413",1364,4
2500.0,trees,['trees'],"  (0, 69)	1.0",3950,4
1000.0,geometry,['geometry'],"  (0, 29)	1.0",4010,1
1250.0,dfs and similar,['dfs and similar'],"  (0, 55)	0.5773502691896257
  (0, 18)	0.5773502691896257
  (0, 17)	0.5773502691896257",975,2
500.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",1804,0
3000.0,"dp,sortings","['dp', 'sortings']","  (0, 56)	0.7683859805869373
  (0, 21)	0.6399867067662038",5423,4
1000.0,brute force,['brute force'],"  (0, 27)	0.5773502691896257
  (0, 7)	0.5773502691896257
  (0, 6)	0.5773502691896257",4782,2
2000.0,"dfs and similar,dp,math,trees","['dfs and similar', 'dp', 'math', 'trees']","  (0, 69)	0.46544070783998936
  (0, 55)	0.4218626127736707
  (0, 37)	0.35379688634730994
  (0, 21)	0.3525457679900215
  (0, 18)	0.4218626127736707
  (0, 17)	0.4218626127736707",6137,4
1000.0,"data structures,implementation,sortings","['data structures', 'implementation', 'sortings']","  (0, 62)	0.4459920873339933
  (0, 56)	0.5076688910565779
  (0, 35)	0.3586977600846166
  (0, 16)	0.4553566031140488
  (0, 15)	0.4553566031140488",4532,1
1500.0,"hashing,strings","['hashing', 'strings']","  (0, 61)	0.6356757696821022
  (0, 34)	0.7719561618635264",5025,2
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",1772,0
1500.0,"greedy,implementation","['greedy', 'implementation']","  (0, 35)	0.643835105031232
  (0, 33)	0.7651642683302863",4301,2
500.0,"math,number theory","['math', 'number theory']","  (0, 68)	0.5318655482034613
  (0, 43)	0.5318655482034613
  (0, 42)	0.5318655482034613
  (0, 37)	0.389046418699228",1282,0
500.0,greedy,['greedy'],"  (0, 33)	1.0",3785,0
1000.0,"constructive algorithms,implementation","['constructive algorithms', 'implementation']","  (0, 35)	0.3861407646520507
  (0, 14)	0.5325709060378501
  (0, 13)	0.5325709060378501
  (0, 2)	0.5325709060378501",5901,1
1000.0,"binary search,geometry","['binary search', 'geometry']","  (0, 52)	0.470596263078465
  (0, 29)	0.5677048781508689
  (0, 4)	0.47762450130845013
  (0, 3)	0.47762450130845013",2402,1
1000.0,"constructive algorithms,geometry,greedy,sortings","['constructive algorithms', 'geometry', 'greedy', 'sortings']","  (0, 56)	0.4093006208993277
  (0, 33)	0.34369288760683886
  (0, 29)	0.486904824656063
  (0, 14)	0.39886166878027024
  (0, 13)	0.39886166878027024
  (0, 2)	0.39886166878027024",348,1
500.0,"dfs and similar,dsu","['dfs and similar', 'dsu']","  (0, 55)	0.466655699084791
  (0, 22)	0.5888101353875076
  (0, 18)	0.466655699084791
  (0, 17)	0.466655699084791",1902,0
1500.0,"brute force,number theory","['brute force', 'number theory']","  (0, 68)	0.4570235457665541
  (0, 43)	0.4570235457665541
  (0, 42)	0.4570235457665541
  (0, 27)	0.3527928740044217
  (0, 7)	0.3527928740044217
  (0, 6)	0.3527928740044217",2522,2
500.0,implementation,['implementation'],"  (0, 35)	1.0",4525,0
